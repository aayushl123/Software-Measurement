<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>charAt</mutatedMethod><methodDescription>(Ljava/lang/String;I)C</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>372</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>charAt</mutatedMethod><methodDescription>(Ljava/lang/String;I)C</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>373</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>charAt</mutatedMethod><methodDescription>(Ljava/lang/String;I)C</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>372</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>charAt</mutatedMethod><methodDescription>(Ljava/lang/String;I)C</methodDescription><lineNumber>904</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>373</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>charAt</mutatedMethod><methodDescription>(Ljava/lang/String;I)C</methodDescription><lineNumber>905</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>374</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>charAt</mutatedMethod><methodDescription>(Ljava/lang/String;I)C</methodDescription><lineNumber>907</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>375</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>cleanInput</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>888</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>367</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>cleanInput</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>892</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>369</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>cleanInput</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>889</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>368</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DoubleMetaphone::cleanInput to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>cleanInput</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>893</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>370</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DoubleMetaphone::cleanInput to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>cleanInput</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>895</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>371</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DoubleMetaphone::cleanInput to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>309</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>311</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>313</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>790</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>315</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>317</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>781</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>307</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>309</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>785</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>311</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>313</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>315</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>316</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>792</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>102</index><block>317</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>782</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>308</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>784</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>310</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>786</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>312</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>314</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionC0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>791</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>113</index><block>319</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>322</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>323</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>320</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>802</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>322</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>323</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>325</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>321</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>804</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>59</index><block>324</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>77</index><block>326</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>82</index><block>327</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>330</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>331</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>332</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>334</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><block>335</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>335</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>328</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>329</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>330</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>331</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>332</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>333</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>334</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>335</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionCH1</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>130</index><block>337</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>338</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>339</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>341</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>342</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>343</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>338</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>828</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>339</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>341</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>342</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>343</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>829</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>340</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>97</index><block>344</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionL0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>835</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>102</index><block>345</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionM0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>346</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionM0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>348</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionM0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>349</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionM0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>349</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionM0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>350</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionM0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>843</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>346</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionM0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>348</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionM0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>349</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionM0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>847</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>350</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionM0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>844</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>347</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>conditionM0</mutatedMethod><methodDescription>(Ljava/lang/String;I)Z</methodDescription><lineNumber>846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>352</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/String;II[Ljava/lang/String;)Z</methodDescription><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>376</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/String;II[Ljava/lang/String;)Z</methodDescription><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>377</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/String;II[Ljava/lang/String;)Z</methodDescription><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>377</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/String;II[Ljava/lang/String;)Z</methodDescription><lineNumber>918</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>378</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/String;II[Ljava/lang/String;)Z</methodDescription><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>376</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/String;II[Ljava/lang/String;)Z</methodDescription><lineNumber>917</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>377</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/String;II[Ljava/lang/String;)Z</methodDescription><lineNumber>921</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>379</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/String;II[Ljava/lang/String;)Z</methodDescription><lineNumber>927</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>382</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DoubleMetaphone::doubleMetaphone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>7</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>113</index><block>12</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>320</index><block>31</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>476</index><block>45</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>7</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>9</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>10</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>11</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>153</index><block>15</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>159</index><block>16</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>165</index><block>17</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><block>21</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><block>22</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>234</index><block>23</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><block>26</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>274</index><block>27</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>293</index><block>28</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>299</index><block>29</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>305</index><block>30</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><block>33</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>354</index><block>34</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>360</index><block>35</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>417</index><block>39</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>423</index><block>40</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>429</index><block>41</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>2</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>6</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>7</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>9</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>156</index><block>15</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>225</index><block>21</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>265</index><block>25</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>296</index><block>28</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>351</index><block>33</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>420</index><block>39</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>484</index><block>46</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testEmpty(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DoubleMetaphone::doubleMetaphone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>494</index><block>48</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DoubleMetaphone::doubleMetaphone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>79</index><block>9</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>110</index><block>12</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>146</index><block>15</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>215</index><block>21</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>258</index><block>25</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>286</index><block>28</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>317</index><block>31</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>341</index><block>33</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>doubleMetaphone</mutatedMethod><methodDescription>(Ljava/lang/String;Z)Ljava/lang/String;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>410</index><block>39</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>49</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testEncodeEmpty(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>51</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testEncodeEmpty(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DoubleMetaphone::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>52</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testEncodeNull(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DoubleMetaphone::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>getMaxCodeLen</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>55</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneNotEqual(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleAEIOUY</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>58</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleAEIOUY</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>57</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleAEIOUY</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>58</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleAEIOUY</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>58</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended2(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>15</index><block>60</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><block>63</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>102</index><block>68</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>127</index><block>70</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Changed increment from 3 to -3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>192</index><block>76</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>253</index><block>80</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>286</index><block>82</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Changed increment from 3 to -3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>333</index><block>85</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>338</index><block>86</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>67</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>69</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>266</index><block>81</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>294</index><block>83</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>315</index><block>84</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>59</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>61</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>62</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>64</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>66</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>67</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>69</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>142</index><block>71</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><block>72</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><block>73</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>184</index><block>75</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>215</index><block>77</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>236</index><block>78</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>283</index><block>81</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>311</index><block>83</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>330</index><block>84</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>162</index><block>74</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>343</index><block>86</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>12</index><block>60</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>63</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>99</index><block>68</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>124</index><block>70</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>189</index><block>76</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>242</index><block>79</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>249</index><block>80</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>260</index><block>81</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>89</index><block>93</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 3 to -3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>99</index><block>94</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>87</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>88</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>90</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>91</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>87</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>88</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>89</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>90</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>91</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>104</index><block>94</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>92</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><block>93</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>96</index><block>94</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>95</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>70</index><block>102</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>97</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>99</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>101</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><block>106</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>95</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>96</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>98</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>100</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>70</index><block>102</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>103</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>97</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>99</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>101</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>110</index><block>106</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>97</block><killingTest/><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>99</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>59</index><block>101</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>104</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>96</index><block>105</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleCH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>103</index><block>106</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><block>109</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 3 to -3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>54</index><block>110</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>81</index><block>112</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>91</index><block>113</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>108</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>107</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>108</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>111</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>96</index><block>113</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>109</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>110</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>112</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleD</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>88</index><block>113</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>127</index><block>128</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>429</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>163</index><block>132</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>437</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>260</index><block>138</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>390</index><block>147</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>405</index><block>149</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>415</index><block>150</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>114</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>116</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>121</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>122</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>125</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>126</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><block>130</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><block>131</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>133</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><block>134</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><block>136</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><block>137</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><block>139</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>289</index><block>140</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>339</index><block>143</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>364</index><block>145</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>399</index><block>148</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>114</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>116</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>117</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>118</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>119</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>121</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>122</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>123</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>126</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>118</index><block>127</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>129</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><block>130</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><block>131</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>180</index><block>133</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>190</index><block>134</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>213</index><block>135</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>232</index><block>136</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>434</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>251</index><block>137</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>285</index><block>139</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>304</index><block>140</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>441</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>322</index><block>141</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>442</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>335</index><block>142</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>350</index><block>143</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>373</index><block>145</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>402</index><block>148</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>425</index><block>150</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>120</block><killingTest/><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><block>124</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>92</index><block>125</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>124</index><block>128</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>160</index><block>132</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>257</index><block>138</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>356</index><block>144</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>378</index><block>146</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>386</index><block>147</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>410</index><block>149</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleG</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>420</index><block>150</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>151</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>60</index><block>158</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><block>160</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>114</index><block>162</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>144</index><block>165</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>194</index><block>169</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>21</index><block>153</block><killingTest/><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>53</index><block>157</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>137</index><block>164</block><killingTest/><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>211</index><block>171</block><killingTest/><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>152</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>155</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>159</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>161</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>163</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>166</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><block>167</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>199</index><block>170</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>151</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>152</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>154</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>155</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>158</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>159</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>160</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>161</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><block>162</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>163</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><block>165</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>152</index><block>166</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>183</index><block>167</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>194</index><block>169</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>202</index><block>170</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>216</index><block>171</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>153</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>42</index><block>156</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>157</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>188</index><block>168</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleGH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>207</index><block>171</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><block>175</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>176</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>173</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>174</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>172</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>173</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>174</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>176</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleH</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>175</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>74</index><block>184</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>207</index><block>198</block><killingTest/><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>212</index><block>199</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>180</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>188</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>190</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>191</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>193</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>161</index><block>195</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>196</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>201</index><block>197</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>177</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>178</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>179</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>180</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>181</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>182</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>185</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>186</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><block>188</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>112</index><block>189</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><block>190</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>191</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><block>193</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>165</index><block>195</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>188</index><block>196</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>204</index><block>197</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>217</index><block>199</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>62</index><block>183</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>184</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>97</index><block>187</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>137</index><block>192</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>153</index><block>194</block><killingTest/><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleJ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>193</index><block>197</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleL</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><block>203</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleL</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>558</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>38</index><block>204</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleL</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>200</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleL</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>200</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleL</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>551</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>201</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleL</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>204</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleL</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>552</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>202</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::appendPrimary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleL</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>554</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>203</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleL</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>43</index><block>204</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleP</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>570</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>18</index><block>206</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleP</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>205</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleP</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>207</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleP</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>208</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleP</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>209</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleP</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>205</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleP</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>207</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleP</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>209</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleP</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>206</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleP</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>572</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>207</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>210</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>212</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>213</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>215</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>216</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>217</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>210</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>211</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>212</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>213</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>215</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>79</index><block>217</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>49</index><block>214</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::appendAlternate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleR</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>215</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>600</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>22</index><block>219</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>222</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>612</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>106</index><block>226</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualExtended3(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>158</index><block>231</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 3 to -3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>218</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>224</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>168</index><block>233</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><block>234</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>219</index><block>235</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>231</index><block>236</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><block>237</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>272</index><block>240</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><block>241</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>309</index><block>243</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>325</index><block>244</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>331</index><block>245</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>598</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>218</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>220</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>601</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>221</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>223</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>606</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>224</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>227</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>228</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>615</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><block>229</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>164</index><block>232</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>189</index><block>233</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>206</index><block>234</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>628</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>228</index><block>235</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>255</index><block>238</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>273</index><block>240</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>290</index><block>241</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>638</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>322</index><block>243</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>339</index><block>245</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>222</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>95</index><block>225</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>226</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>146</index><block>230</block><killingTest/><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>618</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>154</index><block>231</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>627</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>213</index><block>235</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>295</index><block>242</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::appendAlternate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleS</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>302</index><block>243</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCCedilla(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>246</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>247</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>248</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>256</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><block>258</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>246</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>247</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>651</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>248</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>251</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>90</index><block>252</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>253</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>256</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>669</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>153</index><block>258</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>70</index><block>249</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>77</index><block>250</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>254</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>255</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>139</index><block>257</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleSC</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>667</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>146</index><block>258</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>21</index><block>260</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 3 to -3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>262</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 3 to -3</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>142</index><block>269</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>265</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><block>270</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>171</index><block>271</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>272</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>259</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>261</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>263</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>264</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>683</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>265</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>266</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>686</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>267</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>168</index><block>270</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>696</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>185</index><block>272</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>260</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>680</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>45</index><block>262</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>130</index><block>268</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>689</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>138</index><block>269</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleT</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>149</index><block>270</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>706</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>21</index><block>274</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>717</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><block>280</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>148</index><block>285</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>176</index><block>287</block><killingTest/><description>Changed increment from 4 to -4</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>729</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>181</index><block>288</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>276</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>278</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>281</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>282</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>283</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>273</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>275</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>276</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>277</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>278</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>281</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>282</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>719</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>283</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>720</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>284</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>724</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><block>286</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualBasic(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>732</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>186</index><block>288</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>274</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>712</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>67</index><block>279</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>715</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>280</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>722</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>145</index><block>285</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::appendAlternate</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleW</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>726</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>173</index><block>287</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>12</index><block>290</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>291</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>292</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>293</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>294</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>295</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>296</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>289</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>291</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>292</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>293</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>294</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>751</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>103</index><block>296</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>290</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleX</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>294</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>301</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>762</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>18</index><block>298</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>759</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>297</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>299</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>302</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>304</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>305</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>306</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>759</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>297</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>299</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>300</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>301</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>765</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>302</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphoneAlternate(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>304</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testIsDoubleMetaphoneEqualWithMATCHES(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>772</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>99</index><block>306</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>298</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>766</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>303</block><killingTest>org.apache.commons.codec.language.DoubleMetaphone2Test.testDoubleMetaphonePrimary(org.apache.commons.codec.language.DoubleMetaphone2Test)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>handleZ</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I</methodDescription><lineNumber>768</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>71</index><block>304</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>removed call to org/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isDoubleMetaphoneEqual</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>53</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testNTilde(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isDoubleMetaphoneEqual</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;Z)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>54</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testCodec184(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isSilentStart</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>876</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>363</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isSilentStart</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>881</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>366</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testSetMaxCodeLength(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isSlavoGermanic</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>353</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isSlavoGermanic</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>354</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isSlavoGermanic</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>355</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isSlavoGermanic</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>356</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isSlavoGermanic</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>353</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isSlavoGermanic</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>354</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isSlavoGermanic</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>355</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isSlavoGermanic</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>858</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>356</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isSlavoGermanic</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>358</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>359</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DoubleMetaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DoubleMetaphone</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>865</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>361</block><killingTest>org.apache.commons.codec.language.DoubleMetaphoneTest.testDoubleMetaphone(org.apache.commons.codec.language.DoubleMetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZB)V</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>11</block><killingTest>org.apache.commons.codec.binary.Base32Test.testCodec200(org.apache.commons.codec.binary.Base32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZB)V</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>16</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='41'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZB)V</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>143</index><block>17</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZB)V</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.codec.binary.Base32Test.testCodec200(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZB)V</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>9</block><killingTest>org.apache.commons.codec.binary.Base32Test.testCodec200(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZB)V</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>11</block><killingTest>org.apache.commons.codec.binary.Base32Test.testCodec200(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZB)V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>12</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZB)V</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>14</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZB)V</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>150</index><block>17</block><killingTest>org.apache.commons.codec.binary.Base32Test.testCodec200(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZB)V</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>153</index><block>18</block><killingTest>org.apache.commons.codec.binary.Base32Test.testCodec200(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZB)V</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><block>16</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>24</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>27</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='16'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><block>28</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>29</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>212</index><block>33</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><block>25</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>201</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>30</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>30</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>30</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>30</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>156</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>175</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>189</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>194</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>241</index><block>34</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>246</index><block>34</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>248</index><block>34</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><block>35</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>275</index><block>35</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><block>35</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>297</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>312</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>314</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>326</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>331</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>351</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>361</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>366</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>368</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>380</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>385</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>387</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>399</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>404</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>424</index><block>38</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>434</index><block>38</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>439</index><block>38</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>441</index><block>38</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>453</index><block>38</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>458</index><block>38</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>460</index><block>38</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>472</index><block>38</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>477</index><block>38</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>497</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>507</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>512</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>514</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>526</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>531</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>533</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>545</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>550</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>552</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>564</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>569</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>21</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>24</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>25</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>28</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>29</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>104</index><block>30</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>208</index><block>32</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>212</index><block>33</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>232</index><block>34</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>removed call to org/apache/commons/codec/binary/Base32::validateCharacter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>261</index><block>35</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleChunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>removed call to org/apache/commons/codec/binary/Base32::validateCharacter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>290</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>removed call to org/apache/commons/codec/binary/Base32::validateCharacter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>344</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>removed call to org/apache/commons/codec/binary/Base32::validateCharacter</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>417</index><block>38</block><killingTest/><description>removed call to org/apache/commons/codec/binary/Base32::validateCharacter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>490</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>removed call to org/apache/commons/codec/binary/Base32::validateCharacter</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='24'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>44</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>662</index><block>54</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>665</index><block>55</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>701</index><block>57</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>730</index><block>58</block><killingTest>org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk(org.apache.commons.codec.binary.Base32OutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>930</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>935</index><block>61</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>724</index><block>58</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>733</index><block>59</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Changed increment from 256 to -256</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>966</index><block>62</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>94</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>105</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>131</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>194</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>215</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>472</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>218</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>229</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>239</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>250</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>257</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>260</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>475</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>271</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>476</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>284</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>297</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>310</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>327</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>334</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>337</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>355</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>482</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>358</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>369</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>376</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>483</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>379</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>390</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>397</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>400</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>411</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>418</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>485</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>421</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>432</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>445</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>458</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>475</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>482</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>485</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>496</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>503</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>506</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>517</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>524</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>527</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>538</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>545</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>548</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>559</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>566</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>569</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>580</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>587</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>590</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>601</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>608</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>611</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>622</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>655</index><block>54</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>656</index><block>54</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>686</index><block>56</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>716</index><block>58</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>718</index><block>58</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>741</index><block>59</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>744</index><block>59</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>760</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>767</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>770</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>781</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>788</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>791</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>802</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>809</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>812</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>823</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>830</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>833</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>844</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>851</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>854</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>865</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>872</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>875</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>886</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>893</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>896</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>907</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>915</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>924</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>956</index><block>62</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>42</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>44</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>45</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>46</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>662</index><block>54</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>665</index><block>55</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>701</index><block>57</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>730</index><block>58</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>751</index><block>59</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>930</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>935</index><block>61</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>677</index><block>56</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>947</index><block>62</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='41'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>64</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='41'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>65</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='41'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>64</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='41'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>65</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>66</block><killingTest>org.apache.commons.codec.binary.Base32Test.testCodec200(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>68</block><killingTest>org.apache.commons.codec.binary.Base32Test.testCodec200(org.apache.commons.codec.binary.Base32Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>validateCharacter</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>69</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base32.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base32</mutatedClass><mutatedMethod>validateCharacter</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>69</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>20</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>21</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><block>22</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 4 to -4</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>72</index><block>23</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>22</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>20</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>21</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>224</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/UnixCrypt::body to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>111</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/UnixCrypt::permOp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>131</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/UnixCrypt::permOp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>151</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/UnixCrypt::permOp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>171</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/UnixCrypt::permOp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>body</mutatedMethod><methodDescription>([III)[I</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>191</index><block>24</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/UnixCrypt::permOp</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>byteToUnsigned</mutatedMethod><methodDescription>(B)I</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>25</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>byteToUnsigned</mutatedMethod><methodDescription>(B)I</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>26</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>byteToUnsigned</mutatedMethod><methodDescription>(B)I</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>25</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>byteToUnsigned</mutatedMethod><methodDescription>(B)I</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>27</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>18</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptWithoutSalt(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/UnixCrypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>19</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/UnixCrypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/UnixCrypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>120</index><block>6</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>141</index><block>8</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>145</index><block>9</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>222</index><block>11</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>236</index><block>12</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>163</index><block>10</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>270</index><block>15</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>287</index><block>15</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>292</index><block>16</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>6</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>10</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>241</index><block>13</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>249</index><block>13</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>245</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>255</index><block>14</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>262</index><block>14</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>4</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnicCryptInvalidSalt(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><block>8</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptNullData(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><block>9</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>222</index><block>11</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>236</index><block>12</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>250</index><block>13</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>267</index><block>14</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>299</index><block>17</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/UnixCrypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><block>6</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to java/lang/StringBuilder::setCharAt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>91</index><block>6</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to java/lang/StringBuilder::setCharAt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>190</index><block>11</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/UnixCrypt::intToFourBytes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>198</index><block>11</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/UnixCrypt::intToFourBytes</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>284</index><block>15</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to java/lang/StringBuilder::setCharAt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>98</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>114</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>dEncrypt</mutatedMethod><methodDescription>(IIIII[I)I</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>144</index><block>28</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>159</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>341</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>374</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>379</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>138</index><block>29</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><block>31</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>173</index><block>31</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><block>31</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>180</index><block>31</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><block>31</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>184</index><block>31</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>202</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptBytes(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>206</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>219</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>240</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>242</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>243</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>251</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>253</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>256</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>258</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>259</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>261</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>267</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>269</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>272</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>274</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>275</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>280</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>281</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>283</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>292</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>299</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>301</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>304</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>306</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>309</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>315</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>317</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>319</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>325</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>327</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>330</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>332</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>333</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>335</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>344</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>347</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>354</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>357</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>358</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>364</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>367</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>368</index><block>32</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>165</index><block>30</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>385</index><block>33</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/UnixCrypt::desSetKey to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/UnixCrypt::permOp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/UnixCrypt::permOp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/UnixCrypt::permOp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>desSetKey</mutatedMethod><methodDescription>([B)[I</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>104</index><block>29</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/UnixCrypt::permOp</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>fourBytesToInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>5</index><block>34</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>fourBytesToInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>14</index><block>34</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>fourBytesToInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>26</index><block>34</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>fourBytesToInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>38</index><block>34</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>fourBytesToInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>34</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>fourBytesToInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>34</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>fourBytesToInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>34</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>fourBytesToInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>34</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>fourBytesToInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>34</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>fourBytesToInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>34</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>fourBytesToInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>34</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>hPermOp</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>35</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>hPermOp</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>35</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>hPermOp</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>35</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>hPermOp</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>35</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>hPermOp</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>35</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>hPermOp</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>35</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>hPermOp</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>35</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>hPermOp</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>35</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>hPermOp</mutatedMethod><methodDescription>(III)I</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>28</index><block>35</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>intToFourBytes</mutatedMethod><methodDescription>(I[BI)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>5</index><block>36</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptExplicitCall(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>intToFourBytes</mutatedMethod><methodDescription>(I[BI)V</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>15</index><block>36</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>intToFourBytes</mutatedMethod><methodDescription>(I[BI)V</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><block>36</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>intToFourBytes</mutatedMethod><methodDescription>(I[BI)V</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>36</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>intToFourBytes</mutatedMethod><methodDescription>(I[BI)V</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>36</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>intToFourBytes</mutatedMethod><methodDescription>(I[BI)V</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>36</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>intToFourBytes</mutatedMethod><methodDescription>(I[BI)V</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>36</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>intToFourBytes</mutatedMethod><methodDescription>(I[BI)V</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>36</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>intToFourBytes</mutatedMethod><methodDescription>(I[BI)V</methodDescription><lineNumber>410</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>36</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>intToFourBytes</mutatedMethod><methodDescription>(I[BI)V</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>36</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>intToFourBytes</mutatedMethod><methodDescription>(I[BI)V</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>36</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>permOp</mutatedMethod><methodDescription>(IIII[I)V</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>37</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>permOp</mutatedMethod><methodDescription>(IIII[I)V</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>37</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>permOp</mutatedMethod><methodDescription>(IIII[I)V</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>37</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>permOp</mutatedMethod><methodDescription>(IIII[I)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>37</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>permOp</mutatedMethod><methodDescription>(IIII[I)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>37</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>UnixCrypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.UnixCrypt</mutatedClass><mutatedMethod>permOp</mutatedMethod><methodDescription>(IIII[I)V</methodDescription><lineNumber>417</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>37</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='86'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZ)V</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>58</index><block>9</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='35'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZ)V</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>10</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='87'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZ)V</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><block>12</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZ)V</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>4</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZ)V</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>6</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructors(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZ)V</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>7</block><killingTest>org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='20'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZ)V</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>9</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZ)V</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>12</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsUrlSafe(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I[BZ)V</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><block>10</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='54'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>42</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>43</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked(org.apache.commons.codec.binary.Base64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='49'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>46</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>47</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><block>48</block><killingTest>org.apache.commons.codec.binary.Base64Test.testKnownDecodings(org.apache.commons.codec.binary.Base64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>438</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>41</index><block>44</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>157</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>135</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>50</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>199</index><block>54</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>209</index><block>54</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodec68(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><block>54</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>234</index><block>55</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>244</index><block>55</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>249</index><block>55</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>251</index><block>55</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>262</index><block>55</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>267</index><block>55</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>40</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>42</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>436</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>43</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodePadOnlyChunked(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>439</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>44</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>46</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>47</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>48</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodePadMarkerIndex2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>164</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><block>52</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodePadOnly(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decodeBase64</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>87</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodeWithInnerPad(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::decodeBase64 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decodeBase64</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>88</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEmptyBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::decodeBase64 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>decodeInteger</mutatedMethod><methodDescription>([B)Ljava/math/BigInteger;</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>89</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::decodeInteger to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='49'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>20</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>241</index><block>30</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>244</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked(org.apache.commons.codec.binary.Base64Codec13Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>280</index><block>33</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>309</index><block>34</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>420</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>425</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>303</index><block>34</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>312</index><block>35</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Changed increment from 256 to -256</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>456</index><block>38</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>25</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodec112(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>25</block><killingTest>org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>25</block><killingTest>org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>25</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodec112(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>25</block><killingTest>org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>92</index><block>25</block><killingTest>org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>109</index><block>26</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodec112(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>26</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodec112(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>166</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>184</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>186</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><block>28</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='31'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>234</index><block>30</block><killingTest>org.apache.commons.codec.binary.Base64Codec13Test.testStaticEncodeChunked(org.apache.commons.codec.binary.Base64Codec13Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>30</block><killingTest>org.apache.commons.codec.binary.Base64Test.testSingletonsChunked(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>265</index><block>32</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>295</index><block>34</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>297</index><block>34</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>320</index><block>35</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>322</index><block>35</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>338</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>345</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>347</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>358</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>365</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>367</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>378</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>385</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>387</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>398</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>405</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>414</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>446</index><block>38</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>18</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>20</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>21</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='15'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>22</block><killingTest>org.apache.commons.codec.binary.Base64Test.testTripletsChunked(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>25</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodec112(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>194</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>241</index><block>30</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>244</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>280</index><block>33</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>309</index><block>34</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>329</index><block>35</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>420</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64AtBufferEnd(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>393</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>425</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>256</index><block>32</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)V</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>437</index><block>38</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>72</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEmptyBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::encodeBase64 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64</mutatedMethod><methodDescription>([BZ)[B</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>77</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEmptyBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::encodeBase64 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64</mutatedMethod><methodDescription>([BZZ)[B</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>78</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEmptyBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::encodeBase64 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64</mutatedMethod><methodDescription>([BZZI)[B</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>84</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodec112(org.apache.commons.codec.binary.Base64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64</mutatedMethod><methodDescription>([BZZI)[B</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>79</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEmptyBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64</mutatedMethod><methodDescription>([BZZI)[B</methodDescription><lineNumber>664</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>80</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64</mutatedMethod><methodDescription>([BZZI)[B</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>82</block><killingTest>org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64</mutatedMethod><methodDescription>([BZZI)[B</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>84</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEncodeOverMaxSize(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64</mutatedMethod><methodDescription>([BZZI)[B</methodDescription><lineNumber>665</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>81</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEmptyBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::encodeBase64 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64</mutatedMethod><methodDescription>([BZZI)[B</methodDescription><lineNumber>679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>86</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodec112(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::encodeBase64 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64Chunked</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>608</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>76</block><killingTest>org.apache.commons.codec.binary.Base64Test.testKnownEncodings(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::encodeBase64Chunked to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64String</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>571</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>73</block><killingTest>org.apache.commons.codec.binary.Base64Test.testRfc4648Section10Encode(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::encodeBase64String to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64URLSafe</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>584</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>74</block><killingTest>org.apache.commons.codec.binary.Base64Test.testUUID(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::encodeBase64URLSafe to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeBase64URLSafeString</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>75</block><killingTest>org.apache.commons.codec.binary.Base64Test.testByteToStringVariations(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::encodeBase64URLSafeString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeInteger</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>90</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>encodeInteger</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>92</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::encodeInteger to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isArrayByteBase64</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>58</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>60</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>61</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>59</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>60</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>61</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>62</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>64</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>65</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsStringBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>66</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>66</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>67</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>68</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>69</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isBase64</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>71</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='86'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>98</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='86'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>99</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>98</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructors(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>99</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructors(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>100</block><killingTest>org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>783</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>102</block><killingTest>org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter(org.apache.commons.codec.binary.Base64Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isUrlSafe</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>15</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsUrlSafe(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>isUrlSafe</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>17</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsUrlSafe(org.apache.commons.codec.binary.Base64Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>766</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>65</index><block>97</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>93</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>93</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>753</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>93</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>93</block><killingTest/><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>94</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>94</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>94</block><killingTest/><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>96</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>768</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>97</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>768</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>97</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>769</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>97</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>93</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>756</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>94</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>764</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>96</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>95</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger3(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::toIntegerBytes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>771</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>93</index><block>97</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Base64::toIntegerBytes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>toIntegerBytes</mutatedMethod><methodDescription>(Ljava/math/BigInteger;)[B</methodDescription><lineNumber>770</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>89</index><block>97</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodeInteger2(org.apache.commons.codec.binary.Base64Test)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>validateCharacter</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J</methodDescription><lineNumber>797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>103</block><killingTest>org.apache.commons.codec.binary.Base64Test.testCodec68(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='38'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>validateCharacter</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>105</block><killingTest/><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>validateCharacter</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J</methodDescription><lineNumber>797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>103</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64ImpossibleSamples(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='38'><sourceFile>Base64.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Base64</mutatedClass><mutatedMethod>validateCharacter</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)J</methodDescription><lineNumber>801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>105</block><killingTest/><description>replaced return of long value with value + 1 for org/apache/commons/codec/binary/Base64::validateCharacter</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>128</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testEncodeEmpty(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>130</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Metaphone::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>131</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Metaphone::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>getMaxCodeLen</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>133</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isLastChar</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>125</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWhy(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isLastChar</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>125</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWhy(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isLastChar</mutatedMethod><methodDescription>(II)Z</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>127</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWhy(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isMetaphoneEqual</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>132</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAlbert(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isNextChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>117</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testPHTOF(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isNextChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>118</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isNextChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>118</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isNextChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>119</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isNextChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>117</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testPHTOF(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isNextChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>118</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isNextChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>119</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isNextChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>121</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isPreviousChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>112</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='30'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isPreviousChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>113</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isPreviousChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>114</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWhy(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isPreviousChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>112</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isPreviousChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>113</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isPreviousChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>114</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isPreviousChar</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;IC)Z</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>116</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;I)Z</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>109</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTCH(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;I)Z</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>109</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWhy(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;I)Z</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>111</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWhy(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='30'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>218</index><block>18</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>221</index><block>19</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWhy(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>314</index><block>31</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>353</index><block>36</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>404</index><block>43</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>464</index><block>50</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>538</index><block>60</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>594</index><block>67</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>629</index><block>73</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualKnight(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>639</index><block>74</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>674</index><block>79</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='30'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>913</index><block>106</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>241</index><block>22</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>471</index><block>51</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Changed increment from 2 to -2</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>905</index><block>106</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>7</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>10</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualAero(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>13</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>15</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWhy(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>309</index><block>31</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><block>36</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='9'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>444</index><block>48</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>459</index><block>50</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>490</index><block>53</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>511</index><block>56</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>526</index><block>58</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>589</index><block>67</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>634</index><block>74</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testPHTOF(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>650</index><block>76</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>864</index><block>102</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWhy(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testEncodeNull(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testEncodeEmpty(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>4</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>6</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>9</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>12</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTCH(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>14</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTCH(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>218</index><block>18</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>221</index><block>19</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>232</index><block>20</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>238</index><block>21</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>252</index><block>23</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>268</index><block>25</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>275</index><block>26</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWordEndingInMB(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>297</index><block>29</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>304</index><block>30</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>314</index><block>31</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>326</index><block>33</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>343</index><block>35</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>353</index><block>36</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>371</index><block>38</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTCH(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>379</index><block>39</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>397</index><block>41</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTCH(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>401</index><block>42</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>404</index><block>43</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>411</index><block>44</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateOfSCHAndCH(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>446</index><block>48</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>454</index><block>49</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>464</index><block>50</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>492</index><block>53</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>500</index><block>54</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>513</index><block>56</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWright(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>521</index><block>57</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>530</index><block>58</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>538</index><block>60</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentGN(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>546</index><block>61</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testMetaphone(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>554</index><block>62</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testMetaphone(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>566</index><block>64</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>584</index><block>66</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>594</index><block>67</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSilentHAfterG(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>596</index><block>68</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualJohn(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>621</index><block>71</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualSusan(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>629</index><block>73</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testPHTOF(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>639</index><block>74</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testPHTOF(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>652</index><block>76</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual2(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>674</index><block>79</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>682</index><block>80</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqual1(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>708</index><block>83</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>744</index><block>87</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>752</index><block>88</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>760</index><block>89</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>292</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>787</index><block>92</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>795</index><block>93</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>814</index><block>95</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>826</index><block>97</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTranslateToJOfDGEOrDGIOrDGY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>859</index><block>101</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWhy(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>868</index><block>102</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWhy(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>913</index><block>106</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>3</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Metaphone::metaphone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>5</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Metaphone::metaphone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>929</index><block>108</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Metaphone::metaphone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>166</index><block>15</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testIsMetaphoneEqualWhite(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>removed call to java/lang/StringBuilder::setCharAt</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>metaphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>919</index><block>107</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testSetMaxLengthWithTruncation(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>removed call to java/lang/StringBuilder::setLength</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>regionMatch</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;ILjava/lang/String;)Z</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>122</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>regionMatch</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;ILjava/lang/String;)Z</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>123</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>regionMatch</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;ILjava/lang/String;)Z</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>123</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testDiscardOfSCEOrSCIOrSCY(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>regionMatch</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;ILjava/lang/String;)Z</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>123</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>regionMatch</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;ILjava/lang/String;)Z</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>124</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>regionMatch</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;ILjava/lang/String;)Z</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>122</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>regionMatch</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;ILjava/lang/String;)Z</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>123</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testTIOAndTIAToX(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Metaphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Metaphone</mutatedClass><mutatedMethod>regionMatch</mutatedMethod><methodDescription>(Ljava/lang/StringBuilder;ILjava/lang/String;)Z</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>124</block><killingTest>org.apache.commons.codec.language.MetaphoneTest.testWordsWithCIA(org.apache.commons.codec.language.MetaphoneTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha256Crypt</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptExplicitCall(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Sha2Crypt::sha256Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha256Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha256Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>3</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptRounds(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Sha2Crypt::sha256Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha256Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha256Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Sha2Crypt::sha256Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>145</index><block>11</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>177</index><block>13</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>225</index><block>17</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>257</index><block>19</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>303</index><block>21</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>335</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>372</index><block>25</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>233</index><block>18</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>311</index><block>22</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>459</index><block>32</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><block>12</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><block>14</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><block>16</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>256</index><block>19</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><block>20</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>282</index><block>21</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>301</index><block>21</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>302</index><block>21</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>334</index><block>23</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>348</index><block>24</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>360</index><block>25</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>371</index><block>25</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>382</index><block>26</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>405</index><block>28</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>419</index><block>29</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>433</index><block>30</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>6</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>8</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptWithEmptySalt(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>10</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>177</index><block>13</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>183</index><block>14</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>225</index><block>17</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>257</index><block>19</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>303</index><block>21</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>335</index><block>23</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>372</index><block>25</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>383</index><block>26</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>406</index><block>28</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>420</index><block>29</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>434</index><block>30</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>472</index><block>33</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>508</index><block>34</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>541</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>1005</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Sha2Crypt::sha2Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>104</index><block>11</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>11</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><block>11</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>124</index><block>11</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>129</index><block>11</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>152</index><block>12</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>167</index><block>13</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>190</index><block>15</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>197</index><block>16</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>230</index><block>18</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>265</index><block>20</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>283</index><block>21</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>308</index><block>22</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>343</index><block>24</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>361</index><block>25</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>390</index><block>27</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>399</index><block>28</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>414</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>413</index><block>29</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>422</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>427</index><block>30</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>431</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>441</index><block>31</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>450</index><block>32</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>522</index><block>35</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>536</index><block>35</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>494</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>550</index><block>35</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>564</index><block>35</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>578</index><block>35</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>592</index><block>35</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>606</index><block>35</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>499</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>620</index><block>35</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>500</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>634</index><block>35</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>648</index><block>35</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>660</index><block>35</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha2CryptRoundsThreadLocalRandom(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>676</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>690</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>704</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>718</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>732</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>509</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>746</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>760</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>774</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>788</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>802</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>514</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>816</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>830</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>844</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>858</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>872</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>886</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>900</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>914</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>928</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>942</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>524</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>956</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>966</index><block>36</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha256LargetThanBlocksize(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>533</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>972</index><block>36</block><killingTest/><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>977</index><block>36</block><killingTest/><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>982</index><block>36</block><killingTest/><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>986</index><block>36</block><killingTest/><description>removed call to java/security/MessageDigest::reset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>537</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>990</index><block>36</block><killingTest/><description>removed call to java/security/MessageDigest::reset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>538</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>995</index><block>36</block><killingTest/><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='14'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha2Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;ILjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>1000</index><block>36</block><killingTest/><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha512Crypt</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>37</block><killingTest>org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant(org.apache.commons.codec.digest.CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Sha2Crypt::sha512Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha512Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>583</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>38</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha2CryptWrongSalt(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha512Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>586</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>39</block><killingTest>org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant(org.apache.commons.codec.digest.CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Sha2Crypt::sha512Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha512Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>613</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>40</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sha2Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Sha2Crypt</mutatedClass><mutatedMethod>sha512Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>41</block><killingTest>org.apache.commons.codec.digest.Sha512CryptTest.testSha512CryptExplicitCallThreadLocalRandom(org.apache.commons.codec.digest.Sha512CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Sha2Crypt::sha512Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digest</mutatedMethod><methodDescription>(Ljava/io/File;)[B</methodDescription><lineNumber>1332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>110</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digest</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>1346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>111</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digest</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>1358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>112</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha224(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digest</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;)[B</methodDescription><lineNumber>1318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>109</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/io/File;)[B</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile[MD5](org.apache.commons.codec.digest.MessageDigestAlgorithmsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/io/InputStream;)[B</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>3</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/nio/ByteBuffer;)[B</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteBuffer[MD5](org.apache.commons.codec.digest.MessageDigestAlgorithmsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/nio/ByteBuffer;)[B</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteBuffer[MD5](org.apache.commons.codec.digest.MessageDigestAlgorithmsTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;[B)[B</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestByteBuffer[MD5](org.apache.commons.codec.digest.MessageDigestAlgorithmsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digest</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>1305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>108</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digestAsHex</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/lang/String;</methodDescription><lineNumber>1397</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>115</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digestAsHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digestAsHex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>1411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>116</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digestAsHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digestAsHex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>117</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha224(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digestAsHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digestAsHex</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;)Ljava/lang/String;</methodDescription><lineNumber>1383</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>114</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digestAsHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>digestAsHex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>1370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>113</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::digestAsHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getDigest</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/security/MessageDigest;</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>4</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getDigest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='66'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getDigest</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;)Ljava/security/MessageDigest;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>6</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getDigest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getDigest</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;)Ljava/security/MessageDigest;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>7</block><killingTest>org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile[SHA3-224](org.apache.commons.codec.digest.MessageDigestAlgorithmsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getDigest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getMd2Digest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getMd2Digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getMd5Digest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>9</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getMd5Digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getMessageDigest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>1432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>118</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getMessageDigest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getSha1Digest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getSha1Digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getSha256Digest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>11</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha256HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getSha256Digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getSha384Digest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>16</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha384HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getSha384Digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getSha3_224Digest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>12</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getSha3_224Digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getSha3_256Digest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>13</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getSha3_256Digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getSha3_384Digest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>14</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getSha3_384Digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getSha3_512Digest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>15</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getSha3_512Digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getSha512Digest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>17</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha512(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getSha512Digest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>getShaDigest</mutatedMethod><methodDescription>()Ljava/security/MessageDigest;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>18</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testShaUpdateWithString(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::getShaDigest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>isAvailable</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>19</block><killingTest>org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile[SHA3-224](org.apache.commons.codec.digest.MessageDigestAlgorithmsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>isAvailable</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>21</block><killingTest>org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile[SHA3-224](org.apache.commons.codec.digest.MessageDigestAlgorithmsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md2</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>23</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md2 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md2</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>24</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md2 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md2</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>22</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd2Length(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md2 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md2Hex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>26</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md2Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md2Hex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>27</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd2Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md2Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md2Hex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>25</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd2HexLength(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md2Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md5</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>29</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md5 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md5</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>30</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md5 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md5</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>28</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5LengthForBytes(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md5 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md5Hex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>32</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md5Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md5Hex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>33</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md5Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>md5Hex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>443</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>31</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5HexLengthForBytes(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::md5Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>35</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>36</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>481</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>34</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha1</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>38</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testShaHex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha1 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha1</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>39</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testShaHex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha1 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha1</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>37</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testShaHex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha1 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha1Hex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>573</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>41</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testShaHex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha1Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha1Hex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>42</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testShaHex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha1Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha1Hex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>559</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>40</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testShaHex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha1Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha256</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>611</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>44</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha256HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha256 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha256</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>45</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha256(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha256 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha256</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>43</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha256HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha256 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha256Hex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>47</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha256HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha256Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha256Hex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>48</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha256(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha256Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha256Hex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>635</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>46</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha256HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha256Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha384</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>887</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>66</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha384HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha384 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha384</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>899</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>67</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha384(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha384 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha384</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>873</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>65</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha384HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha384 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha384Hex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>925</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>69</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha384HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha384Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha384Hex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>937</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>70</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha384(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha384Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha384Hex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>911</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>68</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha384HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha384Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_224</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>687</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>50</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_224 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_224</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>51</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_224 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_224</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>49</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_224 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_224Hex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>1063</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>80</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_224Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_224Hex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>711</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>52</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_224Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_224Hex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>999</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>75</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_224Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_256</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>54</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_256 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_256</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>749</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>55</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_256 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_256</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>723</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>53</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_256 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_256Hex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>1077</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>81</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_256Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_256Hex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>761</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>56</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_256Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_256Hex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>1011</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>76</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_256Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_384</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>787</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>58</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_384 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_384</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>799</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>59</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_384 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_384</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>773</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>57</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_384 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_384Hex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>1091</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>82</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_384Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_384Hex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>811</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>60</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_384Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_384Hex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>1023</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>77</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_384Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_512</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>837</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>62</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_512 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_512</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>849</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>63</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_512 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_512</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>61</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_512 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_512Hex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>1105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>83</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_512Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_512Hex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>64</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_512Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha3_512Hex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>1035</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>78</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha3_512Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha512</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>963</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>72</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha512 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha512</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>975</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>73</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha512(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha512 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha512</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>949</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>71</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha512(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha512 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha512Hex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>1049</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>79</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha512HexInputStream(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha512Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha512Hex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>84</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha512(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha512Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>sha512Hex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>987</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>74</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha512(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::sha512Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>shaHex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>1146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>86</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testShaHex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::shaHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>shaHex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>1159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>87</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testShaHex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::shaHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>shaHex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>1130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>85</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testShaHex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::shaHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>updateDigest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/io/File;)Ljava/security/MessageDigest;</methodDescription><lineNumber>1206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>94</block><killingTest>org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testDigestFile[MD5](org.apache.commons.codec.digest.MessageDigestAlgorithmsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::updateDigest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>updateDigest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/io/InputStream;)Ljava/security/MessageDigest;</methodDescription><lineNumber>1226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>101</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>updateDigest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/io/InputStream;)Ljava/security/MessageDigest;</methodDescription><lineNumber>1226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>101</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>updateDigest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/io/InputStream;)Ljava/security/MessageDigest;</methodDescription><lineNumber>1231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>103</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::updateDigest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>updateDigest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/io/InputStream;)Ljava/security/MessageDigest;</methodDescription><lineNumber>1227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>102</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testMd5Hex(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>updateDigest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/lang/String;)Ljava/security/MessageDigest;</methodDescription><lineNumber>1252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>104</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha224(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::updateDigest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>updateDigest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/lang/String;)Ljava/security/MessageDigest;</methodDescription><lineNumber>1251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>104</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithString(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>updateDigest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/nio/ByteBuffer;)Ljava/security/MessageDigest;</methodDescription><lineNumber>1189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>89</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::updateDigest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>updateDigest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;Ljava/nio/ByteBuffer;)Ljava/security/MessageDigest;</methodDescription><lineNumber>1188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>89</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteBuffer(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>updateDigest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;[B)Ljava/security/MessageDigest;</methodDescription><lineNumber>1174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>88</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/DigestUtils::updateDigest to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DigestUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.DigestUtils</mutatedClass><mutatedMethod>updateDigest</mutatedMethod><methodDescription>(Ljava/security/MessageDigest;[B)Ljava/security/MessageDigest;</methodDescription><lineNumber>1173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>88</block><killingTest>org.apache.commons.codec.digest.DigestUtilsTest.testSha1UpdateWithByteArray(org.apache.commons.codec.digest.DigestUtilsTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>527</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>76</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>78</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>80</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>528</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>77</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>530</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>79</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>81</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>68</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>65</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>66</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeStringWithNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>67</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>62</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>446</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>63</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>64</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>60</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>49</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>40</index><block>51</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>59</index><block>53</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>106</index><block>57</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>53</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>53</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>47</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>49</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>50</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>51</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>55</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>56</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>48</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeWithNullArray(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::decodeQuotedPrintable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>113</index><block>58</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::decodeQuotedPrintable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>73</index><block>53</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>decodeQuotedPrintable</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>57</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>69</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>71</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>73</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>70</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>72</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>74</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>61</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>596</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>88</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>597</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>89</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeStringWithNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>90</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>574</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>85</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>86</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeDecodeNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>577</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>87</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>59</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeByte</mutatedMethod><methodDescription>(IZLjava/io/ByteArrayOutputStream;)I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeByte</mutatedMethod><methodDescription>(IZLjava/io/ByteArrayOutputStream;)I</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>9</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeByte</mutatedMethod><methodDescription>(IZLjava/io/ByteArrayOutputStream;)I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>10</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeByte</mutatedMethod><methodDescription>(IZLjava/io/ByteArrayOutputStream;)I</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>10</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(ILjava/io/ByteArrayOutputStream;)I</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>5</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(ILjava/io/ByteArrayOutputStream;)I</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>5</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(ILjava/io/ByteArrayOutputStream;)I</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>5</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(ILjava/io/ByteArrayOutputStream;)I</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(ILjava/io/ByteArrayOutputStream;)I</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>15</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encodeQuotedPrintable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>20</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>21</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>144</index><block>31</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>168</index><block>33</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>197</index><block>34</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>215</index><block>36</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>270</index><block>42</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>121</index><block>28</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>238</index><block>39</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>20</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>24</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>29</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>33</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>190</index><block>34</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><block>36</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>275</index><block>43</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUTF8RoundTrip(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>16</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>18</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeUrlWithNullBitSet(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>19</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>20</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>21</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>22</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>25</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>26</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>138</index><block>29</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><block>30</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><block>31</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>168</index><block>33</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>197</index><block>34</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>209</index><block>35</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>215</index><block>36</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>218</index><block>37</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>270</index><block>42</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>283</index><block>43</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>17</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeNull(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encodeQuotedPrintable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>307</index><block>46</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::encodeQuotedPrintable to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>103</index><block>28</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>108</index><block>28</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>113</index><block>28</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testTrailingSpecial(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>173</index><block>34</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>178</index><block>34</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>183</index><block>34</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testUltimateSoftBreak(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>encodeQuotedPrintable</mutatedMethod><methodDescription>(Ljava/util/BitSet;[BZ)[B</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>288</index><block>44</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>getCharset</mutatedMethod><methodDescription>()Ljava/nio/charset/Charset;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>83</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDefaultEncoding(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::getCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>getDefaultCharset</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>556</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>84</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/net/QuotedPrintableCodec::getDefaultCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>getUnsignedOctet</mutatedMethod><methodDescription>(I[B)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>6</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>getUnsignedOctet</mutatedMethod><methodDescription>(I[B)I</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>7</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>getUnsignedOctet</mutatedMethod><methodDescription>(I[B)I</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>6</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>getUnsignedOctet</mutatedMethod><methodDescription>(I[B)I</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>7</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>isWhitespace</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>11</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>isWhitespace</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>12</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QuotedPrintableCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QuotedPrintableCodec</mutatedClass><mutatedMethod>isWhitespace</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>14</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testFinalBytes(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>removed call to org/apache/commons/codec/digest/PureJavaCrc32::_reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/codec/digest/PureJavaCrc32::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>removed call to org/apache/commons/codec/digest/PureJavaCrc32::_reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>7</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>7</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>7</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>7</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>7</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>165</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Changed increment from 8 to -8</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>182</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>202</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>222</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>242</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>262</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>282</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>302</index><block>6</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>67</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>76</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>78</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>83</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>97</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>107</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>112</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>115</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>157</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>159</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>161</index><block>5</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>184</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>186</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>188</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>190</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>206</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>210</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>217</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>224</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>226</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>230</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>244</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>246</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>248</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>250</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>257</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>264</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>266</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>268</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>284</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>286</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>288</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>290</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>297</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>304</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>306</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>308</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>310</index><block>6</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32Test.testCorrectness(org.apache.commons.codec.digest.PureJavaCrc32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;C)Z</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>0</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;C)Z</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;C)Z</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;C)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>2</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>contains</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;C)Z</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>4</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>createScanner</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/util/Scanner;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>7</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::createScanner to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>8</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>10</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>46</index><block>13</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>47</index><block>13</block><killingTest/><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>10</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>9</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>12</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>endsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>53</index><block>14</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/List;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>18</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::getInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/List;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>17</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::getInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>getInstanceMap</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map;</methodDescription><lineNumber>346</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>getInstanceMap</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>24</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::getInstanceMap to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>getInstanceMap</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>getInstanceMap</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/util/Map;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>21</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::getInstanceMap to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>getLContext</mutatedMethod><methodDescription>()Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>113</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::getLContext to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>getPattern</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>652</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>114</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::getPattern to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>getPhoneme</mutatedMethod><methodDescription>()Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;</methodDescription><lineNumber>661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>115</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::getPhoneme to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>getRContext</mutatedMethod><methodDescription>()Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>670</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>116</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::getRContext to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhoneme</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>25</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhoneme</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>28</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhoneme</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>28</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhoneme</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhoneme</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>26</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhoneme</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>62</index><block>28</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::parsePhoneme to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhoneme</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$Phoneme;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>29</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::parsePhoneme to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhonemeExpr</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>33</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhonemeExpr</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhonemeExpr</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;</methodDescription><lineNumber>371</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>31</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhonemeExpr</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>35</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhonemeExpr</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>36</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhonemeExpr</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>97</index><block>37</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::parsePhonemeExpr to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>parsePhonemeExpr</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>103</index><block>38</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::parsePhonemeExpr to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>73</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><block>90</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>70</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>72</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>74</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>75</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>493</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>76</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>495</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>77</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>80</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>81</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>82</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>513</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>84</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>86</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>131</index><block>88</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>534</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>89</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>90</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>159</index><block>91</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>543</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>174</index><block>92</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>186</index><block>94</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>188</index><block>95</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>553</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>201</index><block>97</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>214</index><block>99</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>78</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::pattern to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>74</index><block>79</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::pattern to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>90</index><block>83</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::pattern to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>102</index><block>85</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::pattern to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>114</index><block>87</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::pattern to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>196</index><block>96</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::pattern to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>555</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>209</index><block>98</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::pattern to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>222</index><block>100</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::pattern to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>pattern</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$RPattern;</methodDescription><lineNumber>575</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>230</index><block>101</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::pattern to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>patternAndContextMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;I)Z</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>117</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>patternAndContextMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;I)Z</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>119</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>patternAndContextMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;I)Z</methodDescription><lineNumber>690</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>119</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>patternAndContextMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;I)Z</methodDescription><lineNumber>685</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>117</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>patternAndContextMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;I)Z</methodDescription><lineNumber>692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>119</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>patternAndContextMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;I)Z</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>121</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>patternAndContextMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;I)Z</methodDescription><lineNumber>701</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>61</index><block>123</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>patternAndContextMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;I)Z</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>120</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>patternAndContextMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;I)Z</methodDescription><lineNumber>700</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>122</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>patternAndContextMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;I)Z</methodDescription><lineNumber>702</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>124</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>patternAndContextMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;I)Z</methodDescription><lineNumber>704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>76</index><block>125</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>startsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>7</index><block>102</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>startsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>104</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>startsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>587</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>102</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>startsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>590</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>104</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>startsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>591</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>105</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>startsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>588</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>103</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>startsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>592</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>106</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>startsWith</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>595</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>108</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>stripQuotes</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>111</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>stripQuotes</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>599</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>109</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>stripQuotes</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>603</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>110</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Rule.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Rule</mutatedClass><mutatedMethod>stripQuotes</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>111</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Rule::stripQuotes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>45</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTest/><description>removed call to org/apache/commons/codec/digest/PureJavaCrc32C::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/codec/digest/PureJavaCrc32C::getValue</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>6</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>6</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>6</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>6</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>6</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>3</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>168</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Changed increment from 8 to -8</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>171</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Changed increment from -8 to 8</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>191</index><block>5</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>211</index><block>5</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>231</index><block>5</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>251</index><block>5</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>271</index><block>5</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>291</index><block>5</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>311</index><block>5</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>4</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>45</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>54</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>82</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>106</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>113</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>116</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>136</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>144</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>149</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>151</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>155</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>4</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><block>5</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>193</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>195</index><block>5</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><block>5</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><block>5</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>215</index><block>5</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>216</index><block>5</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>218</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>225</index><block>5</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>233</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>5</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><block>5</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>238</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>245</index><block>5</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>253</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>255</index><block>5</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>256</index><block>5</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>258</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>265</index><block>5</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>273</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>275</index><block>5</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>276</index><block>5</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>285</index><block>5</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>293</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>295</index><block>5</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>296</index><block>5</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>298</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>305</index><block>5</block><killingTest/><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>313</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>315</index><block>5</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>316</index><block>5</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>318</index><block>5</block><killingTest/><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PureJavaCrc32C.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.PureJavaCrc32C</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>3</block><killingTest>org.apache.commons.codec.digest.PureJavaCrc32CTest.testDecreasing(org.apache.commons.codec.digest.PureJavaCrc32CTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>31</index><block>1</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>removed call to org/apache/commons/codec/digest/XXHash32::initializeState</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>fromLittleEndian</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>23</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>fromLittleEndian</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>25</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>fromLittleEndian</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>46</index><block>26</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>fromLittleEndian</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>26</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>fromLittleEndian</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>26</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>fromLittleEndian</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>40</index><block>26</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>fromLittleEndian</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>26</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>fromLittleEndian</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>26</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>fromLittleEndian</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>23</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>fromLittleEndian</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>25</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>fromLittleEndian</mutatedMethod><methodDescription>([BII)J</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>27</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/codec/digest/XXHash32::fromLittleEndian</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>20</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getInt</mutatedMethod><methodDescription>([BI)I</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>20</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>13</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>81</index><block>15</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>107</index><block>17</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>99</index><block>16</block><killingTest/><description>Changed increment from 4 to -4</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>114</index><block>18</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>14</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>14</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>14</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>15</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>15</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>15</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>16</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>16</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>95</index><block>16</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>18</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>119</index><block>18</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>120</index><block>18</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><block>18</block><killingTest/><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>19</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><block>19</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><block>19</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>147</index><block>19</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>148</index><block>19</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>154</index><block>19</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>161</index><block>19</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>19</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced XOR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>169</index><block>19</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>13</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>15</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>17</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>170</index><block>19</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/codec/digest/XXHash32::getValue</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>initializeState</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>21</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>initializeState</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>21</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>initializeState</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>21</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>initializeState</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>21</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>36</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>49</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>57</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>68</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>81</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>84</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>process</mutatedMethod><methodDescription>([BI)V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>22</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>reset</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>2</block><killingTest/><description>removed call to org/apache/commons/codec/digest/XXHash32::initializeState</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>3</block><killingTest/><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>3</block><killingTest/><description>removed call to org/apache/commons/codec/digest/XXHash32::update</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>4</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>6</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>8</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>100</index><block>9</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>116</index><block>11</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>109</index><block>10</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Changed increment from 16 to -16</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>6</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>6</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>6</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>7</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>9</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>86</index><block>9</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>93</index><block>9</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>12</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>6</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>100</index><block>9</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>11</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>7</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>9</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>81</index><block>9</block><killingTest/><description>removed call to org/apache/commons/codec/digest/XXHash32::process</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>106</index><block>10</block><killingTest>org.apache.commons.codec.digest.XXHash32Test.verifyChecksum[1](org.apache.commons.codec.digest.XXHash32Test)</killingTest><description>removed call to org/apache/commons/codec/digest/XXHash32::process</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>XXHash32.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.XXHash32</mutatedClass><mutatedMethod>update</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>133</index><block>12</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>cleanName</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>78</index><block>3</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testcleanName_SuccessfullyClean(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/MatchRatingApproachEncoder::cleanName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>4</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testEncodeEmpty(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>6</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/MatchRatingApproachEncoder::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>7</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>8</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testEncodeEmpty(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>9</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>10</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testEncodeEmpty(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>11</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_Null_to_Nothing(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/MatchRatingApproachEncoder::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>12</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetEncoding_HARPER_HRPR(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/MatchRatingApproachEncoder::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='42'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getFirst3Last3</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>13</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getFirst3Last3</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>14</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getFirst3Last3</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>13</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getFirst3Last3</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>14</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3__ALEXANDER_Returns_Aleder(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/MatchRatingApproachEncoder::getFirst3Last3 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getFirst3Last3</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>15</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetFirstLast3_PETE_Returns_PETE(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/MatchRatingApproachEncoder::getFirst3Last3 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='19'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getMinRating</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>16</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_PETE_NoMatchExpected(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getMinRating</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>18</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_7_Return4_Successfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getMinRating</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>20</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testgetMinRating_11_Returns_3_Successfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getMinRating</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>16</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getMinRating</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>188</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>18</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getMinRating</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>20</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getMinRating</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>22</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_13_Returns_1_Successfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>getMinRating</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>57</index><block>24</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testGetMinRating_2_Returns5_Successfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='37'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>121</index><block>38</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>157</index><block>40</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>118</index><block>38</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>40</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>25</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNull_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>26</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameNothing_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>213</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>27</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>29</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNull_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>30</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_SecondNameNothing_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>31</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>33</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEquals_CornerCase_FirstNameJust1Letter_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>34</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testisEncodeEqualsSecondNameJust1Letter_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>36</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>121</index><block>38</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>157</index><block>40</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>28</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameNullSpace_ReturnsFalseSuccessfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>32</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_SurnamesCornerCase_MURPHY_Space_NoMatch(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>218</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>35</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameToSingleLetter_KARL_C_DoesNotMatch(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>62</index><block>37</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompareNameSameNames_ReturnsFalseSuccessfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>125</index><block>39</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_KARL_ALESSANDRO_DoesNotMatch(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isEncodeEquals</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>165</index><block>42</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>43</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>44</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>45</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>46</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>47</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>49</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testIsVowel_SmallD_ReturnsFalse(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>50</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_SEAN_JOHN_MatchExpected(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='38'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>51</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_TOMASZ_TOM_SuccessfullyMatched(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='38'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>177</index><block>56</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>50</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>50</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>53</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>53</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>77</index><block>53</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>53</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>88</index><block>53</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>96</index><block>53</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>99</index><block>53</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>101</index><block>53</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>134</index><block>55</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><block>55</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>183</index><block>57</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>192</index><block>58</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>50</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>51</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>53</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>54</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>335</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>177</index><block>56</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_Forenames_UNA_OONAGH_ShouldSuccessfullyMatchButDoesNot(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>185</index><block>57</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testCompare_BURNS_BOURNE_SuccessfullyMatched(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>leftToRightThenRightToLeftProcessing</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>194</index><block>58</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testleftTorightThenRightToLeft_ALEXANDER_ALEXANDRA_Returns4(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeAccents</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>61</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeAccents</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>62</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_GerSpanFrenMix_SuccessfullyRemoved(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeAccents</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>66</index><block>64</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeAccents</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>59</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeAccents</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>61</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeAccents</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>62</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeAccents</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>60</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_NullValue_ReturnNullSuccessfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/MatchRatingApproachEncoder::removeAccents to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeAccents</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>73</index><block>65</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testAccentRemoval_AllLower_SuccessfullyRemoved(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/MatchRatingApproachEncoder::removeAccents to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeDoubleConsonants</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>67</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveSingleDoubleConsonants_BUBLE_RemovedSuccessfully(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeDoubleConsonants</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>54</index><block>69</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveDoubleDoubleVowel_BEETLE_NotRemoved(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/MatchRatingApproachEncoder::removeDoubleConsonants to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeVowels</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>70</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeVowels</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>71</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__AIDAN_Returns_ADN(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/MatchRatingApproachEncoder::removeVowels to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatchRatingApproachEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.MatchRatingApproachEncoder</mutatedClass><mutatedMethod>removeVowels</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>421</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>71</index><block>72</block><killingTest>org.apache.commons.codec.language.MatchRatingApproachEncoderTest.testRemoveVowel__DECLAN_Returns_DCLN(org.apache.commons.codec.language.MatchRatingApproachEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/MatchRatingApproachEncoder::removeVowels to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='135'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IIIIB)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>1</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='103'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IIIIB)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>2</block><killingTest>org.apache.commons.codec.binary.Base64Test.testBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='59'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IIIIB)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>5</block><killingTest>org.apache.commons.codec.binary.Base64Test.testConstructor_Int_ByteArray_Boolean(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IIIIB)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>5</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IIIIB)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>1</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='48'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IIIIB)V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>2</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32Chunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(IIIIB)V</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>4</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testBaseNCodec(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='93'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>11</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>10</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)I</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>12</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>containsAlphabetOrPad</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>61</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>containsAlphabetOrPad</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>64</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>containsAlphabetOrPad</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>65</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>containsAlphabetOrPad</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>518</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>62</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>containsAlphabetOrPad</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>66</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>containsAlphabetOrPad</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>525</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>68</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testContainsAlphabetOrPad(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>34</block><killingTest>org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>36</block><killingTest>org.apache.commons.codec.binary.Base64Test.testObjectDecodeWithInvalidParameter(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>35</block><killingTest>org.apache.commons.codec.binary.Base64Codec13Test.testDecoder(org.apache.commons.codec.binary.Base64Codec13Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base64Test.testStringToByteVariations(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>395</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>39</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>40</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEmptyBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>41</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>42</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEmptyBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>56</index><block>43</block><killingTest>org.apache.commons.codec.binary.Base64Test.testDecodePadOnly(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>28</index><block>43</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodec::decode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='25'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>43</block><killingTest>org.apache.commons.codec.binary.Base64Test.testStringToByteVariations(org.apache.commons.codec.binary.Base64Test)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodec::decode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>29</block><killingTest>org.apache.commons.codec.binary.Base64Test.testObjectEncodeWithInvalidParameter(org.apache.commons.codec.binary.Base64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>31</block><killingTest>org.apache.commons.codec.binary.Base64Codec13Test.testEncoder(org.apache.commons.codec.binary.Base64Codec13Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>44</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>427</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>45</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>46</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>430</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>47</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='57'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BII)[B</methodDescription><lineNumber>453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>51</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BII)[B</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>48</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BII)[B</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>49</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BII)[B</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>50</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BII)[B</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>58</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BII)[B</methodDescription><lineNumber>451</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodec::encode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([BII)[B</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>35</index><block>51</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodec::encode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encodeAsString</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>33</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32HexSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::encodeAsString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>encodeToString</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>32</block><killingTest>org.apache.commons.codec.binary.Base64Test.testByteToStringVariations(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::encodeToString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='109'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>ensureBufferSize</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>13</index><block>18</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='101'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>ensureBufferSize</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>18</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>ensureBufferSize</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>17</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>ensureBufferSize</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>18</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='41'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>ensureBufferSize</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>19</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::ensureBufferSize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>ensureBufferSize</mutatedMethod><methodDescription>(ILorg/apache/commons/codec/binary/BaseNCodec$Context;)[B</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>20</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::ensureBufferSize to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getDefaultBufferSize</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>13</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>69</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesHex(org.apache.commons.codec.binary.Base32Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>69</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesHex(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>69</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesHex(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>69</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesHex(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced integer division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>69</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesHex(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>70</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>70</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>70</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced long division with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>70</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced long multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>542</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>70</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesChunked(org.apache.commons.codec.binary.Base32Test)</killingTest><description>Replaced long addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>540</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>69</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesHex(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>getEncodedLength</mutatedMethod><methodDescription>([B)J</methodDescription><lineNumber>544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>70</block><killingTest>org.apache.commons.codec.binary.Base32Test.testRandomBytesHex(org.apache.commons.codec.binary.Base32Test)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/codec/binary/BaseNCodec::getEncodedLength</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>hasData</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>hasData</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)Z</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>9</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>60</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>([BZ)Z</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>53</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>([BZ)Z</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>54</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>([BZ)Z</methodDescription><lineNumber>486</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>55</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetString(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>([BZ)Z</methodDescription><lineNumber>487</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>56</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>([BZ)Z</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>57</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>isInAlphabet</mutatedMethod><methodDescription>([BZ)Z</methodDescription><lineNumber>491</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>59</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testIsInAlphabetByteArrayBoolean(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>isWhiteSpace</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>27</block><killingTest>org.apache.commons.codec.binary.BaseNCodecTest.testIsWhiteSpace(org.apache.commons.codec.binary.BaseNCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>isWhiteSpace</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>28</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsArrayByteBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>readResults</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>22</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='35'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>readResults</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>22</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>readResults</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>21</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>readResults</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>readResults</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='36'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>readResults</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>23</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>readResults</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>62</index><block>26</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>readResults</mutatedMethod><methodDescription>([BIILorg/apache/commons/codec/binary/BaseNCodec$Context;)I</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>23</index><block>22</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32BinarySamplesReverse(org.apache.commons.codec.binary.Base32Test)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>resizeBuffer</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>16</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom(org.apache.commons.codec.binary.Base64Test)</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>resizeBuffer</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.codec.binary.Base32Test.testBase32ImpossibleSamples(org.apache.commons.codec.binary.Base32Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='41'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>resizeBuffer</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>16</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BaseNCodec::resizeBuffer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodec</mutatedClass><mutatedMethod>resizeBuffer</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/binary/BaseNCodec$Context;)[B</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>44</index><block>16</block><killingTest>org.apache.commons.codec.binary.Base64Test.testEncodeDecodeRandom(org.apache.commons.codec.binary.Base64Test)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>5</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>7</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>9</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>11</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObjectException(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>6</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>8</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>10</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>12</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testDecodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testDecodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>2</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectException(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>4</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>29</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>30</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>69</index><block>32</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>74</index><block>33</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>75</index><block>33</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from -8 to 8</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>29</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>29</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>31</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>32</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>27</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>29</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>30</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>31</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>28</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::fromAscii to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>81</index><block>34</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::fromAscii to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>21</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>22</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>72</index><block>24</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>77</index><block>25</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>78</index><block>25</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from -8 to 8</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>21</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>21</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>23</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>66</index><block>24</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>18</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>19</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>21</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>22</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>23</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>20</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::fromAscii to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>fromAscii</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>84</index><block>26</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testFromAsciiCharArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::fromAscii to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>35</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>36</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>isEmpty</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>38</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>41</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>42</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>76</index><block>45</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>81</index><block>46</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><block>46</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from -8 to 8</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>41</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>41</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>43</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>44</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>45</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>39</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>41</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>42</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>43</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>40</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::toAsciiBytes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiBytes</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>47</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeByteArray(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::toAsciiBytes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>34</index><block>50</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>51</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>76</index><block>54</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>81</index><block>55</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>82</index><block>55</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Changed increment from -8 to 8</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>50</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>50</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>52</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>53</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>54</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>48</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>50</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>51</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>52</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>49</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObjectNull(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::toAsciiChars to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiChars</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>56</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testEncodeObject(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::toAsciiChars to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toAsciiString</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>57</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testToAsciiString(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::toAsciiString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>15</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>16</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BinaryCodec</mutatedClass><mutatedMethod>toByteArray</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>17</block><killingTest>org.apache.commons.codec.binary.BinaryCodecTest.testToByteArrayFromString(org.apache.commons.codec.binary.BinaryCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/BinaryCodec::toByteArray to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>39</block><killingTest>org.apache.commons.codec.language.NysiisTest.testEncodeEmpty(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>41</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>42</block><killingTest>org.apache.commons.codec.language.NysiisTest.testEncodeNull(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>isStrict</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>43</block><killingTest>org.apache.commons.codec.language.NysiisTest.testTrueVariant(org.apache.commons.codec.language.NysiisTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>4</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>isVowel</mutatedMethod><methodDescription>(C)Z</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>6</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>115</index><block>48</block><killingTest>org.apache.commons.codec.language.NysiisTest.testLocaleIndependence(org.apache.commons.codec.language.NysiisTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>122</index><block>49</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>141</index><block>51</block><killingTest>org.apache.commons.codec.language.NysiisTest.testCap(org.apache.commons.codec.language.NysiisTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>207</index><block>55</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='19'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>246</index><block>57</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>199</index><block>54</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>49</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>50</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule4Dot1(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><block>51</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>145</index><block>52</block><killingTest>org.apache.commons.codec.language.NysiisTest.testCap(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>159</index><block>53</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>185</index><block>53</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>291</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><block>56</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><block>57</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule4Dot2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>237</index><block>57</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule4Dot2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>253</index><block>58</block><killingTest>org.apache.commons.codec.language.NysiisTest.testCap(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>303</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><block>60</block><killingTest>org.apache.commons.codec.language.NysiisTest.testOthers(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>285</index><block>61</block><killingTest>org.apache.commons.codec.language.NysiisTest.testCap(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>44</block><killingTest>org.apache.commons.codec.language.NysiisTest.testEncodeNull(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>46</block><killingTest>org.apache.commons.codec.language.NysiisTest.testEncodeEmpty(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>48</block><killingTest>org.apache.commons.codec.language.NysiisTest.testLocaleIndependence(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>122</index><block>49</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>141</index><block>51</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>187</index><block>53</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>207</index><block>55</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule4Dot2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>221</index><block>56</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>246</index><block>57</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule4Dot2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>260</index><block>58</block><killingTest>org.apache.commons.codec.language.NysiisTest.testOthers(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>302</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>263</index><block>59</block><killingTest>org.apache.commons.codec.language.NysiisTest.testCap(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>278</index><block>60</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>298</index><block>61</block><killingTest>org.apache.commons.codec.language.NysiisTest.testTrueVariant(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>45</block><killingTest>org.apache.commons.codec.language.NysiisTest.testEncodeNull(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::nysiis to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>47</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::nysiis to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>312</index><block>63</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::nysiis to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>nysiis</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>176</index><block>53</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule4Dot2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>7</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule4Dot1(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>8</block><killingTest>org.apache.commons.codec.language.NysiisTest.testCap(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>10</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>12</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>14</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>16</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>18</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>19</block><killingTest>org.apache.commons.codec.language.NysiisTest.testSpecialBranches(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>22</block><killingTest>org.apache.commons.codec.language.NysiisTest.testDropBy(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='18'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>23</block><killingTest>org.apache.commons.codec.language.NysiisTest.testDropBy(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>84</index><block>24</block><killingTest>org.apache.commons.codec.language.NysiisTest.testSpecialBranches(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>94</index><block>26</block><killingTest>org.apache.commons.codec.language.NysiisTest.testSnat(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>27</block><killingTest>org.apache.commons.codec.language.NysiisTest.testCap(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>107</index><block>29</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><block>30</block><killingTest>org.apache.commons.codec.language.NysiisTest.testSpecialBranches(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='17'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>113</index><block>31</block><killingTest>org.apache.commons.codec.language.NysiisTest.testSpecialBranches(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>129</index><block>33</block><killingTest>org.apache.commons.codec.language.NysiisTest.testCap(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>132</index><block>34</block><killingTest>org.apache.commons.codec.language.NysiisTest.testBran(org.apache.commons.codec.language.NysiisTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>9</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule4Dot1(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>11</block><killingTest>org.apache.commons.codec.language.NysiisTest.testCap(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>13</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule4Dot2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>15</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule4Dot2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>52</index><block>17</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule4Dot2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>67</index><block>20</block><killingTest>org.apache.commons.codec.language.NysiisTest.testDropBy(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>72</index><block>21</block><killingTest>org.apache.commons.codec.language.NysiisTest.testSpecialBranches(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>88</index><block>25</block><killingTest>org.apache.commons.codec.language.NysiisTest.testDropBy(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>101</index><block>28</block><killingTest>org.apache.commons.codec.language.NysiisTest.testDropBy(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>123</index><block>32</block><killingTest>org.apache.commons.codec.language.NysiisTest.testSnat(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>141</index><block>35</block><killingTest>org.apache.commons.codec.language.NysiisTest.testBran(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Nysiis.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Nysiis</mutatedClass><mutatedMethod>transcodeRemaining</mutatedMethod><methodDescription>(CCCC)[C</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>151</index><block>36</block><killingTest>org.apache.commons.codec.language.NysiisTest.testRule2(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Nysiis::transcodeRemaining to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>0</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>removed call to org/apache/commons/codec/net/PercentCodec::insertAlwaysEncodeChar</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([BZ)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>1</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testConfigurablePercentEncoder(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>removed call to org/apache/commons/codec/net/PercentCodec::insertAlwaysEncodeChars</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>canEncode</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>38</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>canEncode</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>39</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>canEncode</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>40</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>canEncode</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>42</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>containsSpace</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>34</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>containsSpace</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>35</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>containsSpace</mutatedMethod><methodDescription>([B)Z</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>37</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>71</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testDecodeNullObject(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>73</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testDecodeUnsupportedObject(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>72</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testDecodeNullObject(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/PercentCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>74</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testSafeCharEncodeDecodeObject(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/PercentCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>52</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>41</index><block>54</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><block>54</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testDecodeInvalidEncodedResultDecoding(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>106</index><block>59</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>54</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>61</index><block>54</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>50</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>52</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>53</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>56</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>57</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>51</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/PercentCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>113</index><block>60</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/PercentCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>doEncode</mutatedMethod><methodDescription>([BIZ)[B</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>21</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>doEncode</mutatedMethod><methodDescription>([BIZ)[B</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>44</index><block>22</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>doEncode</mutatedMethod><methodDescription>([BIZ)[B</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>52</index><block>22</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>doEncode</mutatedMethod><methodDescription>([BIZ)[B</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>19</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>doEncode</mutatedMethod><methodDescription>([BIZ)[B</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>20</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>doEncode</mutatedMethod><methodDescription>([BIZ)[B</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>doEncode</mutatedMethod><methodDescription>([BIZ)[B</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>88</index><block>23</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>doEncode</mutatedMethod><methodDescription>([BIZ)[B</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>91</index><block>24</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>doEncode</mutatedMethod><methodDescription>([BIZ)[B</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>116</index><block>27</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testDecodeInvalidEncodedResultDecoding(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/PercentCodec::doEncode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>66</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testEncodeNullObject(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>68</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testEncodeUnsupportedObject(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>67</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testEncodeNullObject(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/PercentCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>69</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testSafeCharEncodeDecodeObject(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/PercentCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>9</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>11</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>13</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>14</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithPlusForSpace(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>15</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>10</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/PercentCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>16</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testDecodeInvalidEncodedResultDecoding(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/PercentCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>54</index><block>17</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/PercentCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>expectedDecodingBytes</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>61</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>expectedDecodingBytes</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>38</index><block>64</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>expectedDecodingBytes</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>64</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>expectedDecodingBytes</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>61</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>expectedDecodingBytes</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>62</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>expectedDecodingBytes</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>65</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>expectedEncodingBytes</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>31</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>expectedEncodingBytes</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>29</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>expectedEncodingBytes</mutatedMethod><methodDescription>([B)I</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>32</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>inAlwaysEncodeCharsRange</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>43</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>inAlwaysEncodeCharsRange</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>44</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>inAlwaysEncodeCharsRange</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>43</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>inAlwaysEncodeCharsRange</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>44</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>inAlwaysEncodeCharsRange</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>46</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>insertAlwaysEncodeChar</mutatedMethod><methodDescription>(B)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>6</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>insertAlwaysEncodeChar</mutatedMethod><methodDescription>(B)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>insertAlwaysEncodeChar</mutatedMethod><methodDescription>(B)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>6</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>insertAlwaysEncodeChar</mutatedMethod><methodDescription>(B)V</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>7</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>insertAlwaysEncodeChar</mutatedMethod><methodDescription>(B)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>6</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testUnsafeCharEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>removed call to java/util/BitSet::set</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>insertAlwaysEncodeChars</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testPercentEncoderDecoderWithNullOrEmptyInput(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>insertAlwaysEncodeChars</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>27</index><block>4</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testConfigurablePercentEncoder(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>removed call to org/apache/commons/codec/net/PercentCodec::insertAlwaysEncodeChar</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>insertAlwaysEncodeChars</mutatedMethod><methodDescription>([B)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>37</index><block>5</block><killingTest/><description>removed call to org/apache/commons/codec/net/PercentCodec::insertAlwaysEncodeChar</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>isAsciiChar</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>47</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>isAsciiChar</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>47</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PercentCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.PercentCodec</mutatedClass><mutatedMethod>isAsciiChar</mutatedMethod><methodDescription>(B)Z</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>49</block><killingTest>org.apache.commons.codec.net.PercentCodecTest.testBasicEncodeDecode(org.apache.commons.codec.net.PercentCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>getHmacMd5</mutatedMethod><methodDescription>([B)Ljavax/crypto/Mac;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>4</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::getHmacMd5 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>getHmacSha1</mutatedMethod><methodDescription>([B)Ljavax/crypto/Mac;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>5</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::getHmacSha1 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>getHmacSha256</mutatedMethod><methodDescription>([B)Ljavax/crypto/Mac;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>6</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::getHmacSha256 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>getHmacSha384</mutatedMethod><methodDescription>([B)Ljavax/crypto/Mac;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>7</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::getHmacSha384 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>getHmacSha512</mutatedMethod><methodDescription>([B)Ljavax/crypto/Mac;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>8</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::getHmacSha512 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='11'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>getInitializedMac</mutatedMethod><methodDescription>(Ljava/lang/String;[B)Ljavax/crypto/Mac;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>10</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>getInitializedMac</mutatedMethod><methodDescription>(Ljava/lang/String;[B)Ljavax/crypto/Mac;</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>12</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::getInitializedMac to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>getInitializedMac</mutatedMethod><methodDescription>(Ljava/lang/String;[B)Ljavax/crypto/Mac;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>12</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>removed call to javax/crypto/Mac::init</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>getInitializedMac</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/digest/HmacAlgorithms;[B)Ljavax/crypto/Mac;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>9</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testGetHMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::getInitializedMac to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmac</mutatedMethod><methodDescription>(Ljava/io/File;)[B</methodDescription><lineNumber>1067</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>70</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmac to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmac</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>1033</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>62</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmac</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>1033</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>62</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmac</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>1036</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>64</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmac to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmac</mutatedMethod><methodDescription>(Ljava/io/InputStream;)[B</methodDescription><lineNumber>1034</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>63</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>removed call to javax/crypto/Mac::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmac</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>979</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>58</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmac to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmac</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;)[B</methodDescription><lineNumber>1002</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>60</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmac to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmac</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;)[B</methodDescription><lineNumber>1001</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>60</block><killingTest/><description>removed call to javax/crypto/Mac::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmac</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>957</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>56</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmac to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacHex</mutatedMethod><methodDescription>(Ljava/io/File;)Ljava/lang/String;</methodDescription><lineNumber>1081</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>77</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacHex</mutatedMethod><methodDescription>(Ljava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>1053</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>65</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacHex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>990</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>59</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacHex</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;)Ljava/lang/String;</methodDescription><lineNumber>1013</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>61</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacHex</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>968</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>57</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacMd5</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)[B</methodDescription><lineNumber>301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>17</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacMd5 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacMd5</mutatedMethod><methodDescription>([BLjava/io/InputStream;)[B</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>16</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacMd5 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacMd5</mutatedMethod><methodDescription>([B[B)[B</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>15</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacMd5 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacMd5Hex</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>20</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacMd5Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacMd5Hex</mutatedMethod><methodDescription>([BLjava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>19</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacMd5Hex(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacMd5Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacMd5Hex</mutatedMethod><methodDescription>([B[B)Ljava/lang/String;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>18</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testMd5HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacMd5Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha1</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)[B</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>23</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha1 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha1</mutatedMethod><methodDescription>([BLjava/io/InputStream;)[B</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>22</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha1 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha1</mutatedMethod><methodDescription>([B[B)[B</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>21</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha1 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha1Hex</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>471</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>26</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha1Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha1Hex</mutatedMethod><methodDescription>([BLjava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>25</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1Hex(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha1Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha1Hex</mutatedMethod><methodDescription>([B[B)Ljava/lang/String;</methodDescription><lineNumber>432</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>24</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha1HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha1Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha256</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)[B</methodDescription><lineNumber>529</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>29</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha256 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha256</mutatedMethod><methodDescription>([BLjava/io/InputStream;)[B</methodDescription><lineNumber>512</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>28</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha256 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha256</mutatedMethod><methodDescription>([B[B)[B</methodDescription><lineNumber>490</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>27</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha256 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha256Hex</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>585</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>32</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha256Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha256Hex</mutatedMethod><methodDescription>([BLjava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>31</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha256Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha256Hex</mutatedMethod><methodDescription>([B[B)Ljava/lang/String;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>30</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha256HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha256Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha384</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)[B</methodDescription><lineNumber>643</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>35</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha384 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha384</mutatedMethod><methodDescription>([BLjava/io/InputStream;)[B</methodDescription><lineNumber>626</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>34</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha384 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha384</mutatedMethod><methodDescription>([B[B)[B</methodDescription><lineNumber>604</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>33</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha384 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha384Hex</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>699</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>38</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha384Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha384Hex</mutatedMethod><methodDescription>([BLjava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>682</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>37</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha384Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha384Hex</mutatedMethod><methodDescription>([B[B)Ljava/lang/String;</methodDescription><lineNumber>660</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>36</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha384HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha384Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha512</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)[B</methodDescription><lineNumber>757</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>41</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha512 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha512</mutatedMethod><methodDescription>([BLjava/io/InputStream;)[B</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>40</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha512 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha512</mutatedMethod><methodDescription>([B[B)[B</methodDescription><lineNumber>718</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>39</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha512 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha512Hex</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>813</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>44</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha512Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha512Hex</mutatedMethod><methodDescription>([BLjava/io/InputStream;)Ljava/lang/String;</methodDescription><lineNumber>796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>43</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha512Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>hmacSha512Hex</mutatedMethod><methodDescription>([B[B)Ljava/lang/String;</methodDescription><lineNumber>774</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>42</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testSha512HMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::hmacSha512Hex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>isAvailable</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>0</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>isAvailable</mutatedMethod><methodDescription>(Ljava/lang/String;)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>1</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='96'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>isAvailable</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/digest/HmacAlgorithms;)Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>2</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>isAvailable</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/digest/HmacAlgorithms;)Z</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>3</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>updateHmac</mutatedMethod><methodDescription>(Ljavax/crypto/Mac;Ljava/io/InputStream;)Ljavax/crypto/Mac;</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>46</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>updateHmac</mutatedMethod><methodDescription>(Ljavax/crypto/Mac;Ljava/io/InputStream;)Ljavax/crypto/Mac;</methodDescription><lineNumber>856</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>46</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>updateHmac</mutatedMethod><methodDescription>(Ljavax/crypto/Mac;Ljava/io/InputStream;)Ljavax/crypto/Mac;</methodDescription><lineNumber>861</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>48</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::updateHmac to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>updateHmac</mutatedMethod><methodDescription>(Ljavax/crypto/Mac;Ljava/io/InputStream;)Ljavax/crypto/Mac;</methodDescription><lineNumber>852</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>46</block><killingTest/><description>removed call to javax/crypto/Mac::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>updateHmac</mutatedMethod><methodDescription>(Ljavax/crypto/Mac;Ljava/io/InputStream;)Ljavax/crypto/Mac;</methodDescription><lineNumber>857</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>47</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithInpustream(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>removed call to javax/crypto/Mac::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>updateHmac</mutatedMethod><methodDescription>(Ljavax/crypto/Mac;Ljava/lang/String;)Ljavax/crypto/Mac;</methodDescription><lineNumber>878</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>49</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testInitializedMac(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::updateHmac to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='8'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>updateHmac</mutatedMethod><methodDescription>(Ljavax/crypto/Mac;Ljava/lang/String;)Ljavax/crypto/Mac;</methodDescription><lineNumber>876</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>49</block><killingTest/><description>removed call to javax/crypto/Mac::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>updateHmac</mutatedMethod><methodDescription>(Ljavax/crypto/Mac;Ljava/lang/String;)Ljavax/crypto/Mac;</methodDescription><lineNumber>877</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>49</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithString(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>removed call to javax/crypto/Mac::update</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>updateHmac</mutatedMethod><methodDescription>(Ljavax/crypto/Mac;[B)Ljavax/crypto/Mac;</methodDescription><lineNumber>832</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>45</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/HmacUtils::updateHmac to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>updateHmac</mutatedMethod><methodDescription>(Ljavax/crypto/Mac;[B)Ljavax/crypto/Mac;</methodDescription><lineNumber>830</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>45</block><killingTest/><description>removed call to javax/crypto/Mac::reset</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacUtils</mutatedClass><mutatedMethod>updateHmac</mutatedMethod><methodDescription>(Ljavax/crypto/Mac;[B)Ljavax/crypto/Mac;</methodDescription><lineNumber>831</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>45</block><killingTest>org.apache.commons.codec.digest.HmacUtilsTest.testHmacSha1UpdateWithByteArray(org.apache.commons.codec.digest.HmacUtilsTest)</killingTest><description>removed call to javax/crypto/Mac::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>apr1Crypt</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>6</block><killingTest>org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt(org.apache.commons.codec.digest.Apr1CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Md5Crypt::apr1Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>apr1Crypt</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>165</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt(org.apache.commons.codec.digest.Apr1CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Md5Crypt::apr1Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>apr1Crypt</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>1</block><killingTest>org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt(org.apache.commons.codec.digest.Apr1CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Md5Crypt::apr1Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>apr1Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>3</block><killingTest>org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt(org.apache.commons.codec.digest.Apr1CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>apr1Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>4</block><killingTest>org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt(org.apache.commons.codec.digest.Apr1CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>apr1Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>5</block><killingTest>org.apache.commons.codec.digest.Apr1CryptTest.testApr1LongSalt(org.apache.commons.codec.digest.Apr1CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Md5Crypt::apr1Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>apr1Crypt</mutatedMethod><methodDescription>([BLjava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>2</block><killingTest>org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptBytesWithThreadLocalRandom(org.apache.commons.codec.digest.Apr1CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Md5Crypt::apr1Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>8</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCall(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Md5Crypt::md5Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>10</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCallWithThreadLocalRandom(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Md5Crypt::md5Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>11</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCallWithThreadLocalRandom(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Md5Crypt::md5Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>128</index><block>16</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>136</index><block>17</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>167</index><block>20</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>229</index><block>24</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>147</index><block>19</block><killingTest/><description>Changed increment from -16 to 16</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>307</index><block>31</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>172</index><block>21</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>196</index><block>23</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>238</index><block>25</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>259</index><block>27</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>271</index><block>28</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>Replaced integer modulus with multiplication</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>283</index><block>29</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>12</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>293</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>14</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptWithEmptySalt(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>16</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>17</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>167</index><block>20</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>174</index><block>21</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>229</index><block>24</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>239</index><block>25</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>260</index><block>27</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>272</index><block>28</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>284</index><block>29</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>417</index><block>32</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCallWithThreadLocalRandom(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Md5Crypt::md5Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>83</index><block>16</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>90</index><block>16</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>95</index><block>16</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>104</index><block>16</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>16</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>114</index><block>16</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>144</index><block>19</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>154</index><block>20</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>181</index><block>22</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>190</index><block>23</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>244</index><block>26</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>253</index><block>27</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>265</index><block>28</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>373</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>277</index><block>29</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>291</index><block>30</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>298</index><block>31</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to java/security/MessageDigest::update</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>323</index><block>32</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>337</index><block>32</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>389</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>351</index><block>32</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>390</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>365</index><block>32</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>379</index><block>32</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>389</index><block>32</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>removed call to org/apache/commons/codec/digest/B64::b64from24bit</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>398</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>393</index><block>32</block><killingTest/><description>removed call to java/security/MessageDigest::reset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>397</index><block>32</block><killingTest/><description>removed call to java/security/MessageDigest::reset</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>402</index><block>32</block><killingTest/><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>407</index><block>32</block><killingTest/><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/lang/String;Ljava/lang/String;Ljava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>412</index><block>32</block><killingTest/><description>removed call to java/util/Arrays::fill</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Md5Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Md5Crypt</mutatedClass><mutatedMethod>md5Crypt</mutatedMethod><methodDescription>([BLjava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>9</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCallWithThreadLocalRandom(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Md5Crypt::md5Crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>340</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>45</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>47</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>49</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>46</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>48</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>50</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>294</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>34</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>35</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>298</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>36</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>31</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>276</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>32</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeStringWithNull(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>33</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>23</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>25</index><block>14</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>52</index><block>18</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>60</index><block>18</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>99</index><block>20</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>18</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>18</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>12</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>25</index><block>14</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>15</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>17</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeInvalid(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>13</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeWithNullArray(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::decodeUrl to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>106</index><block>21</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::decodeUrl to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>41</index><block>16</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>74</index><block>18</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>decodeUrl</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>95</index><block>20</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeInvalidContent(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>38</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>40</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>42</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>39</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>318</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>41</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>320</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>43</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>27</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>28</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeDecodeNull(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>29</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>24</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>230</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>25</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeStringWithNull(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>26</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>22</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeNull(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>6</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>55</index><block>7</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testUTF8RoundTrip(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>90</index><block>10</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeNull(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>4</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeUrlWithNullBitSet(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>6</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDefaultEncoding(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>7</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>68</index><block>8</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>3</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeNull(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::encodeUrl to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>118</index><block>11</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::encodeUrl to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>78</index><block>9</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>85</index><block>10</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>102</index><block>10</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>encodeUrl</mutatedMethod><methodDescription>(Ljava/util/BitSet;[B)[B</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>107</index><block>10</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testEncodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>removed call to java/io/ByteArrayOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>getDefaultCharset</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>52</block><killingTest>org.apache.commons.codec.net.URLCodecTest.testDecodeObjects(org.apache.commons.codec.net.URLCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::getDefaultCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>URLCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.URLCodec</mutatedClass><mutatedMethod>getEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>53</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/net/URLCodec::getEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>arrayContains</mutatedMethod><methodDescription>([CC)Z</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>2</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>arrayContains</mutatedMethod><methodDescription>([CC)Z</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>3</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>arrayContains</mutatedMethod><methodDescription>([CC)Z</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>5</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>8</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>62</index><block>9</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><block>12</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>86</index><block>13</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>337</index><block>57</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>340</index><block>58</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>8</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>Replaced integer multiplication with division</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>6</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>331</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>8</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>9</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>11</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>12</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>13</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>15</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>17</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>111</index><block>18</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><block>19</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>127</index><block>21</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>22</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>23</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>25</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>162</index><block>27</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>174</index><block>29</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>178</index><block>30</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>194</index><block>32</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>197</index><block>33</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>210</index><block>35</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>215</index><block>36</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>221</index><block>37</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>241</index><block>40</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>245</index><block>41</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>266</index><block>44</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>278</index><block>46</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>290</index><block>48</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>302</index><block>50</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>305</index><block>51</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>323</index><block>53</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>326</index><block>54</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>329</index><block>55</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>332</index><block>56</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>337</index><block>57</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>340</index><block>58</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='13'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>7</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/ColognePhonetic::colognePhonetic to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>362</index><block>60</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/ColognePhonetic::colognePhonetic to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>187</index><block>31</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>removed call to org/apache/commons/codec/language/ColognePhonetic$CologneInputBuffer::addLeft</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>colognePhonetic</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>388</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>346</index><block>59</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>removed call to org/apache/commons/codec/language/ColognePhonetic$CologneOutputBuffer::addRight</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='14'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>61</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>63</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/ColognePhonetic::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>64</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/ColognePhonetic::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>isEncodeEqual</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>415</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>65</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>preprocess</mutatedMethod><methodDescription>(Ljava/lang/String;)[C</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>66</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>preprocess</mutatedMethod><methodDescription>(Ljava/lang/String;)[C</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>66</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ColognePhonetic.java</sourceFile><mutatedClass>org.apache.commons.codec.language.ColognePhonetic</mutatedClass><mutatedMethod>preprocess</mutatedMethod><methodDescription>(Ljava/lang/String;)[C</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>63</index><block>71</block><killingTest>org.apache.commons.codec.language.ColognePhoneticTest.org.apache.commons.codec.language.ColognePhoneticTest</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/ColognePhonetic::preprocess to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>374</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>30</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>32</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>378</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>34</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>31</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>33</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeByteArrayObjectEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>35</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeByteBufferObjectEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>36</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeStringEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;)[B</methodDescription><lineNumber>356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>29</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeByteBufferEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>339</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>28</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>0</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeHexStringEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::decodeHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>3</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><block>4</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeBadCharacterPos1(org.apache.commons.codec.binary.HexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>64</index><block>4</block><killingTest>org.apache.commons.codec.binary.HexTest.testRequiredCharset(org.apache.commons.codec.binary.HexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>76</index><block>4</block><killingTest>org.apache.commons.codec.binary.HexTest.testRequiredCharset(org.apache.commons.codec.binary.HexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>3</block><killingTest>org.apache.commons.codec.binary.HexTest.testRequiredCharset(org.apache.commons.codec.binary.HexTest)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>105</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>4</block><killingTest>org.apache.commons.codec.binary.HexTest.testRequiredCharset(org.apache.commons.codec.binary.HexTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>4</block><killingTest>org.apache.commons.codec.binary.HexTest.testRequiredCharset(org.apache.commons.codec.binary.HexTest)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>4</block><killingTest>org.apache.commons.codec.binary.HexTest.testRequiredCharset(org.apache.commons.codec.binary.HexTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>3</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>decodeHex</mutatedMethod><methodDescription>([C)[B</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>82</index><block>5</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::decodeHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>447</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>40</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>42</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>58</index><block>46</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteArrayObjectEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;)[B</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>39</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>38</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;)[C</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>7</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encodeHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;Z)[C</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>11</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;Z)[C</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>13</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encodeHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;[C)[C</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>17</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encodeHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([B)[C</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>6</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encodeHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([BZ)[C</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>8</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([BZ)[C</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>10</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encodeHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([B[C)[C</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>24</index><block>14</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([B[C)[C</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>29</index><block>15</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([B[C)[C</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><block>15</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([B[C)[C</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>55</index><block>15</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([B[C)[C</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>14</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([B[C)[C</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>15</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([B[C)[C</methodDescription><lineNumber>192</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>37</index><block>15</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>Replaced Unsigned Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([B[C)[C</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>50</index><block>15</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteArrayHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([B[C)[C</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>14</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHex</mutatedMethod><methodDescription>([B[C)[C</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>16</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encodeHex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHexString</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;)Ljava/lang/String;</methodDescription><lineNumber>253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>20</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteBufferEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encodeHexString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHexString</mutatedMethod><methodDescription>(Ljava/nio/ByteBuffer;Z)Ljava/lang/String;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>21</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteBufferBoolean_ToLowerCase(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encodeHexString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHexString</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>18</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encodeHexString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>encodeHexString</mutatedMethod><methodDescription>([BZ)Ljava/lang/String;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>19</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteString_ByteArrayBoolean_ToLowerCase(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::encodeHexString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>getCharset</mutatedMethod><methodDescription>()Ljava/nio/charset/Charset;</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>47</block><killingTest>org.apache.commons.codec.binary.HexTest.testDecodeByteArrayEmpty(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::getCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>getCharsetName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>48</block><killingTest>org.apache.commons.codec.binary.HexTest.testGetCharsetName(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::getCharsetName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>toDigit</mutatedMethod><methodDescription>(CI)I</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>22</block><killingTest>org.apache.commons.codec.binary.HexTest.testRequiredCharset(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>toDigit</mutatedMethod><methodDescription>(CI)I</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>24</block><killingTest>org.apache.commons.codec.binary.HexTest.testRequiredCharset(org.apache.commons.codec.binary.HexTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Hex.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.Hex</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>49</block><killingTest>org.apache.commons.codec.binary.HexTest.testCustomCharsetToString(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/Hex::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>cleanup</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>29</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='10'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>cleanup</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>31</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>cleanup</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>377</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>32</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>cleanup</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>382</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>76</index><block>34</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DaitchMokotoffSoundex::cleanup to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>405</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>35</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>37</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/DaitchMokotoffSoundex::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>425</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>38</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>426</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>39</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeNull(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DaitchMokotoffSoundex::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>40</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeIgnoreApostrophes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DaitchMokotoffSoundex::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>42</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><block>42</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>42</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>464</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>65</index><block>44</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DaitchMokotoffSoundex::soundex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>47</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>145</index><block>59</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>291</index><block>77</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>547</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>326</index><block>79</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>273</index><block>75</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>274</index><block>75</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>478</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>45</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>488</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>47</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>492</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>48</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>77</index><block>50</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>52</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>506</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>55</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>119</index><block>56</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>510</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>57</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>145</index><block>59</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>147</index><block>60</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>191</index><block>64</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>205</index><block>66</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>208</index><block>67</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>213</index><block>68</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>216</index><block>69</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testSoundexBasic(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>523</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>236</index><block>71</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>531</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>255</index><block>74</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>46</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/DaitchMokotoffSoundex::soundex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>550</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>337</index><block>80</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testEncodeEmpty(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/DaitchMokotoffSoundex::soundex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='6'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>123</index><block>57</block><killingTest/><description>removed call to java/util/List::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>232</index><block>71</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>removed call to org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch::processNextReplacement</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>259</index><block>75</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>removed call to java/util/Set::clear</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;Z)[Ljava/lang/String;</methodDescription><lineNumber>546</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>321</index><block>79</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAdjacentCodes(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>removed call to org/apache/commons/codec/language/DaitchMokotoffSoundex$Branch::finish</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>stripQuotes</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>27</index><block>25</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>stripQuotes</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>stripQuotes</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>DaitchMokotoffSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.DaitchMokotoffSoundex</mutatedClass><mutatedMethod>stripQuotes</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>332</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>25</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/DaitchMokotoffSoundex::stripQuotes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>43</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>45</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>44</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>46</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>34</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>35</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeStringWithNull(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>36</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>69</index><block>18</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks(org.apache.commons.codec.net.QCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>98</index><block>21</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks(org.apache.commons.codec.net.QCodecTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>11</block><killingTest>org.apache.commons.codec.net.QCodecTest.testNullInput(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='5'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>174</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>14</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>17</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>69</index><block>18</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>19</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>12</block><killingTest>org.apache.commons.codec.net.QCodecTest.testNullInput(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::doDecoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>105</index><block>22</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::doDecoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>191</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>111</index><block>23</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::doDecoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doEncoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks(org.apache.commons.codec.net.QCodecTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doEncoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doEncoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>6</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doEncoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doEncoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeDecodeBlanks(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doEncoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>5</block><killingTest>org.apache.commons.codec.net.QCodecTest.testNullInput(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::doEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>doEncoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>53</index><block>10</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::doEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>38</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>287</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>40</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>286</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>39</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>288</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>41</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>246</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>31</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>32</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeDecodeNull(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>249</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>33</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>27</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>28</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeStringWithNull(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>229</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>29</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>24</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>25</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>26</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>getCharset</mutatedMethod><methodDescription>()Ljava/nio/charset/Charset;</methodDescription><lineNumber>327</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>48</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::getCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>getDefaultCharset</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>49</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::getDefaultCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>getEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>3</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/QCodec::getEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>QCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.QCodec</mutatedClass><mutatedMethod>isEncodeBlanks</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>345</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>50</block><killingTest>org.apache.commons.codec.net.QCodecTest.testLetUsMakeCloverHappy(org.apache.commons.codec.net.QCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsString(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsString(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>4</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsString(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='10'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>7</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>9</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>10</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>2</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsString(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>5</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsString(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>36</index><block>8</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsString(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>12</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getByteBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>16</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getByteBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>17</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getByteBuffer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getByteBuffer</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/nio/ByteBuffer;</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>18</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getByteBuffer to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getByteBufferUtf8</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/nio/ByteBuffer;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>19</block><killingTest>org.apache.commons.codec.binary.HexTest.testEncodeHexByteBufferHelloWorldLowerCaseHex(org.apache.commons.codec.binary.HexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getByteBufferUtf8 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)[B</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>13</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)[B</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>14</block><killingTest>org.apache.commons.codec.binary.Base64Test.testIsStringBase64(org.apache.commons.codec.binary.Base64Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getBytes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytes</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)[B</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>15</index><block>15</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getBytes to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytesIso8859_1</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>20</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getBytesIso8859_1 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytesUnchecked</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)[B</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>21</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytesUnchecked</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)[B</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>22</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedNullInput(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getBytesUnchecked to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytesUnchecked</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)[B</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>23</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesIso8859_1(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getBytesUnchecked to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytesUsAscii</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>25</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUsAscii(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getBytesUsAscii to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytesUtf16</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>26</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getBytesUtf16 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytesUtf16Be</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>27</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Be(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getBytesUtf16Be to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytesUtf16Le</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>251</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>28</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf16Le(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getBytesUtf16Le to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>getBytesUtf8</mutatedMethod><methodDescription>(Ljava/lang/String;)[B</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>29</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUtf8(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::getBytesUtf8 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newIllegalStateException</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/io/UnsupportedEncodingException;)Ljava/lang/IllegalStateException;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>30</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testGetBytesUncheckedBadName(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::newIllegalStateException to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newString</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>313</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>34</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newString</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>314</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>35</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::newString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newString</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>36</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::newString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newString</mutatedMethod><methodDescription>([BLjava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>31</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newString</mutatedMethod><methodDescription>([BLjava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>33</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::newString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newStringIso8859_1</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>336</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>38</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testNewStringIso8859_1(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::newStringIso8859_1 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newStringUsAscii</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>39</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testNewStringUsAscii(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::newStringUsAscii to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newStringUtf16</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>40</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::newStringUtf16 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newStringUtf16Be</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>41</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf16Be(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::newStringUtf16Be to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newStringUtf16Le</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>42</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testNewStringNullInput_CODEC229(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::newStringUtf16Le to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.StringUtils</mutatedClass><mutatedMethod>newStringUtf8</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>43</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testNewStringUtf8(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/binary/StringUtils::newStringUtf8 to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>available</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>3</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testAvailable(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>markSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>5</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testMarkSupported(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>8</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>9</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>10</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>6</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>8</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='4'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>11</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testBase32InputStreamByteByByte(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>12</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>15</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testRead0(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>16</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testRead0(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='29'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>18</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>19</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testCodec105(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='29'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>19</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>13</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testRead0(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>15</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testRead0(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>16</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testRead0(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>18</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testRead0(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>19</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testRead0(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>21</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>23</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>71</index><block>24</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='25'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>27</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>53</index><block>22</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testRead0(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>137</index><block>30</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>107</index><block>28</block><killingTest/><description>removed call to org/apache/commons/codec/binary/BaseNCodec::encode</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>read</mutatedMethod><methodDescription>([BII)I</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>119</index><block>29</block><killingTest/><description>removed call to org/apache/commons/codec/binary/BaseNCodec::decode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>32</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testSkipNone(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>34</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>69</index><block>37</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>38</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>Replaced long subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>32</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testSkipWrongArgument(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>34</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>35</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecInputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecInputStream</mutatedClass><mutatedMethod>skip</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>80</index><block>38</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testSkipBig(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>replaced return of long value with value + 1 for org/apache/commons/codec/binary/BaseNCodecInputStream::skip</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;ZI)V</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>5</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>applyFinalRules</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>66</index><block>13</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>applyFinalRules</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>103</index><block>15</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>applyFinalRules</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;</methodDescription><lineNumber>330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>applyFinalRules</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>10</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>applyFinalRules</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>13</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>applyFinalRules</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>14</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>applyFinalRules</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;</methodDescription><lineNumber>362</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>136</index><block>17</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>applyFinalRules</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;</methodDescription><lineNumber>334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>11</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/PhoneticEngine::applyFinalRules to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>applyFinalRules</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;</methodDescription><lineNumber>372</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>186</index><block>21</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/PhoneticEngine::applyFinalRules to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>applyFinalRules</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>105</index><block>15</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>removed call to org/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder::append</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>384</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>22</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/PhoneticEngine::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='20'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>48</index><block>24</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>376</index><block>44</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>418</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>132</index><block>29</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[van helsing-(elSink|elsink|helSink|helsink|helzink|xelsink)-(banhelsink|fanhelsink|fanhelzink|vanhelsink|vanhelzink|vanjelsink)-GENERIC-EXACT](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>433</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><block>32</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-SEPHARDIC-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>23</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[d&#39;ortley-(ortlaj|ortlej)-(dortlaj|dortlej)-GENERIC-EXACT](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>24</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[d&#39;ortley-(ortlaj|ortlej)-(dortlaj|dortlej)-GENERIC-EXACT](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>25</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[SntJohn-Smith-sntjonsmit-GENERIC-EXACT](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>28</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[SntJohn-Smith-sntjonsmit-GENERIC-EXACT](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>297</index><block>37</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[SntJohn-Smith-sntjonsmit-GENERIC-EXACT](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>452</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>311</index><block>39</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[van helsing-(elSink|elsink|helSink|helsink|helzink|xelsink)-(banhelsink|fanhelsink|fanhelzink|vanhelsink|vanhelzink|vanjelsink)-GENERIC-EXACT](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>376</index><block>44</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>412</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>93</index><block>26</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[d&#39;ortley-(ortlaj|ortlej)-(dortlaj|dortlej)-GENERIC-EXACT](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/PhoneticEngine::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>420</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>166</index><block>29</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[van helsing-(elSink|elsink|helSink|helsink|helzink|xelsink)-(banhelsink|fanhelsink|fanhelzink|vanhelsink|vanhelzink|vanjelsink)-GENERIC-EXACT](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/PhoneticEngine::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>360</index><block>43</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/PhoneticEngine::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;</methodDescription><lineNumber>480</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>424</index><block>46</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/PhoneticEngine::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>getLang</mutatedMethod><methodDescription>()Lorg/apache/commons/codec/language/bm/Lang;</methodDescription><lineNumber>489</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>47</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/PhoneticEngine::getLang to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>getMaxPhonemes</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>526</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>51</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAsciiEncodeNotEmpty1Letter(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>getNameType</mutatedMethod><methodDescription>()Lorg/apache/commons/codec/language/bm/NameType;</methodDescription><lineNumber>498</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>48</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/PhoneticEngine::getNameType to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>getRuleType</mutatedMethod><methodDescription>()Lorg/apache/commons/codec/language/bm/RuleType;</methodDescription><lineNumber>507</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>49</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/PhoneticEngine::getRuleType to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>isConcat</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>50</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='24'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>join</mutatedMethod><methodDescription>(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>0</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>join</mutatedMethod><methodDescription>(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>262</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>1</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PhoneticEngine.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.PhoneticEngine</mutatedClass><mutatedMethod>join</mutatedMethod><methodDescription>(Ljava/lang/Iterable;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>3</block><killingTest>org.apache.commons.codec.language.bm.PhoneticEngineTest.testEncode[Renault-rinDlt-ASHKENAZI-APPROX](org.apache.commons.codec.language.bm.PhoneticEngineTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/PhoneticEngine::join to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>157</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>26</index><block>1</block><killingTest>org.apache.commons.codec.language.SoundexTest.testNewInstance2(org.apache.commons.codec.language.SoundexTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>difference</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>219</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>13</block><killingTest>org.apache.commons.codec.language.SoundexTest.testDifference(org.apache.commons.codec.language.SoundexTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>14</block><killingTest>org.apache.commons.codec.language.SoundexTest.testEncodeEmpty(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>16</block><killingTest>org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithSoundex(org.apache.commons.codec.StringEncoderComparatorTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Soundex::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>254</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>17</block><killingTest>org.apache.commons.codec.language.SoundexTest.testEncodeNull(org.apache.commons.codec.language.SoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Soundex::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>getMaxLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>18</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>hasMarker</mutatedMethod><methodDescription>([C)Z</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>hasMarker</mutatedMethod><methodDescription>([C)Z</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>27</index><block>6</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>hasMarker</mutatedMethod><methodDescription>([C)Z</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>8</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>map</mutatedMethod><methodDescription>(C)C</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>19</block><killingTest>org.apache.commons.codec.language.SoundexTest.testEncodeBatch2(org.apache.commons.codec.language.SoundexTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='27'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>map</mutatedMethod><methodDescription>(C)C</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>20</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>map</mutatedMethod><methodDescription>(C)C</methodDescription><lineNumber>278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>19</block><killingTest>org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute(org.apache.commons.codec.language.SoundexTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>map</mutatedMethod><methodDescription>(C)C</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>19</block><killingTest>org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>map</mutatedMethod><methodDescription>(C)C</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>20</block><killingTest>org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>map</mutatedMethod><methodDescription>(C)C</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>22</block><killingTest>org.apache.commons.codec.language.SoundexTest.testBadCharacters(org.apache.commons.codec.language.SoundexTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>78</index><block>28</block><killingTest>org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute(org.apache.commons.codec.language.SoundexTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>82</index><block>29</block><killingTest>org.apache.commons.codec.language.SoundexTest.testEncodeBatch2(org.apache.commons.codec.language.SoundexTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>60</index><block>28</block><killingTest>org.apache.commons.codec.language.SoundexTest.testBadCharacters(org.apache.commons.codec.language.SoundexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>329</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>131</index><block>38</block><killingTest>org.apache.commons.codec.language.SoundexTest.testBadCharacters(org.apache.commons.codec.language.SoundexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>142</index><block>38</block><killingTest>org.apache.commons.codec.language.SoundexTest.testBadCharacters(org.apache.commons.codec.language.SoundexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>24</block><killingTest>org.apache.commons.codec.language.SoundexTest.testEncodeNull(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>311</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>26</block><killingTest>org.apache.commons.codec.language.SoundexTest.testEncodeEmpty(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>28</block><killingTest>org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>82</index><block>29</block><killingTest>org.apache.commons.codec.language.SoundexTest.testBadCharacters(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>30</block><killingTest>org.apache.commons.codec.language.SoundexTest.testHWRuleEx1(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>96</index><block>31</block><killingTest>org.apache.commons.codec.language.SoundexTest.testBadCharacters(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>32</block><killingTest>org.apache.commons.codec.language.SoundexTest.testBadCharacters(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>325</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>114</index><block>34</block><killingTest>org.apache.commons.codec.language.SoundexTest.testBadCharacters(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>123</index><block>36</block><killingTest>org.apache.commons.codec.language.SoundexTest.testBadCharacters(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>328</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>37</block><killingTest>org.apache.commons.codec.language.SoundexTest.testBadCharacters(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>25</block><killingTest>org.apache.commons.codec.language.SoundexTest.testEncodeNull(org.apache.commons.codec.language.SoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Soundex::soundex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>27</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Soundex::soundex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Soundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Soundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>333</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>151</index><block>39</block><killingTest>org.apache.commons.codec.language.SoundexTest.testUsMappingEWithAcute(org.apache.commons.codec.language.SoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Soundex::soundex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>19</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodecOutputStream::eof</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>19</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodecOutputStream::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='12'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>close</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>19</block><killingTest>org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByChunk(org.apache.commons.codec.binary.Base32OutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::close</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>eof</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>20</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='9'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>eof</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>21</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodec::encode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>eof</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>22</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodec::decode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>18</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodecOutputStream::flush</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>14</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>15</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>14</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>15</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>16</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>16</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>removed call to java/io/OutputStream::write</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='15'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>flush</mutatedMethod><methodDescription>(Z)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>50</index><block>17</block><killingTest/><description>removed call to java/io/OutputStream::flush</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32OutputStreamByteByByte(org.apache.commons.codec.binary.Base32OutputStreamTest)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodecOutputStream::write</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>4</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize(org.apache.commons.codec.binary.Base32OutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.codec.binary.Base32OutputStreamTest.testBase32EmptyOutputStreamPemChunkSize(org.apache.commons.codec.binary.Base32OutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='11'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>49</index><block>10</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='13'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>8</block><killingTest/><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds(org.apache.commons.codec.binary.Base32OutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTest>org.apache.commons.codec.binary.Base32OutputStreamTest.testWriteOutOfBounds(org.apache.commons.codec.binary.Base32OutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>7</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>8</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>49</index><block>10</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>11</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>64</index><block>12</block><killingTest>org.apache.commons.codec.binary.Base32InputStreamTest.testCodec130(org.apache.commons.codec.binary.Base32InputStreamTest)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodec::encode</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>76</index><block>13</block><killingTest>org.apache.commons.codec.binary.Base64OutputStreamTest.testCodec98NPE(org.apache.commons.codec.binary.Base64OutputStreamTest)</killingTest><description>removed call to org/apache/commons/codec/binary/BaseNCodec::decode</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='7'><sourceFile>BaseNCodecOutputStream.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.BaseNCodecOutputStream</mutatedClass><mutatedMethod>write</mutatedMethod><methodDescription>([BII)V</methodDescription><lineNumber>102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>82</index><block>13</block><killingTest/><description>removed call to org/apache/commons/codec/binary/BaseNCodecOutputStream::flush</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>57</index><block>5</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>7</block><killingTest/><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>84</index><block>7</block><killingTest/><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>main</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>0</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::run</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>println</mutatedMethod><methodDescription>(Ljava/lang/String;[B)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>8</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>println</mutatedMethod><methodDescription>(Ljava/lang/String;[BLjava/lang/String;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>println</mutatedMethod><methodDescription>(Ljava/lang/String;[BLjava/lang/String;)V</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>30</index><block>11</block><killingTest/><description>removed call to java/io/PrintStream::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>12</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>97</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>15</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>18</index><block>14</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::run</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>16</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::run</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>17</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::run</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)V</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>7</index><block>36</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::run</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;)V</methodDescription><lineNumber>113</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>22</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>25</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>27</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>28</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;)V</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>13</index><block>23</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>57</index><block>26</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;)V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>80</index><block>29</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::run</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>99</index><block>30</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;[Ljava/io/File;)V</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>33</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/security/MessageDigest;[Ljava/io/File;)V</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>33</index><block>34</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::println</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>19</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>run</mutatedMethod><methodDescription>([Ljava/lang/String;)V</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>20</block><killingTest/><description>removed call to org/apache/commons/codec/cli/Digest::run</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Digest.java</sourceFile><mutatedClass>org.apache.commons.codec.cli.Digest</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>37</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/cli/Digest::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>29</block><killingTest>org.apache.commons.codec.net.BCodecTest.testDecodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>31</block><killingTest>org.apache.commons.codec.net.BCodecTest.testDecodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>30</block><killingTest>org.apache.commons.codec.net.BCodecTest.testDecodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>224</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>32</block><killingTest>org.apache.commons.codec.net.BCodecTest.testDecodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>20</block><killingTest>org.apache.commons.codec.net.BCodecTest.testBase64ImpossibleSamples(org.apache.commons.codec.net.BCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>21</block><killingTest>org.apache.commons.codec.net.BCodecTest.testDecodeStringWithNull(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>decode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>22</block><killingTest>org.apache.commons.codec.net.BCodecTest.testDecodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::decode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>7</block><killingTest>org.apache.commons.codec.net.BCodecTest.testDecodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>8</block><killingTest>org.apache.commons.codec.net.BCodecTest.testNullInput(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::doDecoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>doDecoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>9</block><killingTest>org.apache.commons.codec.net.BCodecTest.testDecodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::doDecoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>doEncoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>92</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>doEncoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>5</block><killingTest>org.apache.commons.codec.net.BCodecTest.testNullInput(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::doEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>doEncoding</mutatedMethod><methodDescription>([B)[B</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>6</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::doEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>24</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>199</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>26</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>25</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>27</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>17</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>18</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeDecodeNull(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>19</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>13</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>14</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeStringWithNull(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>15</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>10</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>11</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>12</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>getCharset</mutatedMethod><methodDescription>()Ljava/nio/charset/Charset;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>34</block><killingTest>org.apache.commons.codec.net.BCodecTest.testEncodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::getCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>getDefaultCharset</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>35</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::getDefaultCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BCodec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.BCodec</mutatedClass><mutatedMethod>getEncoding</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>3</block><killingTest>org.apache.commons.codec.net.BCodecTest.testDecodeObjects(org.apache.commons.codec.net.BCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/BCodec::getEncoding to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>clean</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>4</block><killingTest>org.apache.commons.codec.language.NysiisTest.testEncodeEmpty(org.apache.commons.codec.language.NysiisTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>clean</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>48</index><block>6</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>clean</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>56</index><block>6</block><killingTest>org.apache.commons.codec.language.NysiisTest.testEncodeEmpty(org.apache.commons.codec.language.NysiisTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>clean</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>clean</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>2</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>clean</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>4</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>clean</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>43</index><block>5</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='7'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>clean</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>7</block><killingTest>org.apache.commons.codec.language.SoundexTest.testEncodeEmpty(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>clean</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>42</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour(org.apache.commons.codec.language.SoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/SoundexUtils::clean to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>clean</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>69</index><block>8</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/SoundexUtils::clean to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>clean</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>55</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>81</index><block>9</block><killingTest>org.apache.commons.codec.language.NysiisTest.testEncodeEmpty(org.apache.commons.codec.language.NysiisTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/SoundexUtils::clean to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>difference</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/StringEncoder;Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>10</block><killingTest>org.apache.commons.codec.language.SoundexTest.testDifference(org.apache.commons.codec.language.SoundexTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>differenceEncoded</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>14</block><killingTest>org.apache.commons.codec.language.SoundexTest.testDifference(org.apache.commons.codec.language.SoundexTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>differenceEncoded</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>45</index><block>16</block><killingTest>org.apache.commons.codec.language.SoundexTest.testDifference(org.apache.commons.codec.language.SoundexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>differenceEncoded</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><block>16</block><killingTest>org.apache.commons.codec.language.SoundexTest.testDifference(org.apache.commons.codec.language.SoundexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>differenceEncoded</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>11</block><killingTest>org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>differenceEncoded</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>12</block><killingTest>org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>differenceEncoded</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>14</block><killingTest>org.apache.commons.codec.language.SoundexTest.testDifference(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>differenceEncoded</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>15</block><killingTest>org.apache.commons.codec.language.SoundexTest.testDifference(org.apache.commons.codec.language.SoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>differenceEncoded</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>13</block><killingTest>org.apache.commons.codec.language.SoundexTest.testSoundexUtilsNullBehaviour(org.apache.commons.codec.language.SoundexTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>SoundexUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.language.SoundexUtils</mutatedClass><mutatedMethod>differenceEncoded</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>17</block><killingTest>org.apache.commons.codec.language.SoundexTest.testDifference(org.apache.commons.codec.language.SoundexTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([C)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>1</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testNewInstance2(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>removed call to java/lang/System::arraycopy</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>difference</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)I</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>3</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testDifference(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>4</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncodeEmpty(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>6</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/RefinedSoundex::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>7</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncodeNull(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/RefinedSoundex::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>getMappingCode</mutatedMethod><methodDescription>(C)C</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>10</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>getMappingCode</mutatedMethod><methodDescription>(C)C</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>8</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>getMappingCode</mutatedMethod><methodDescription>(C)C</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>9</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testGetMappingCodeNonLetter(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>getMappingCode</mutatedMethod><methodDescription>(C)C</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>10</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>52</index><block>15</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>88</index><block>19</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>11</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncodeNull(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>13</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>15</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>16</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>18</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>12</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncodeNull(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/RefinedSoundex::soundex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>14</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/RefinedSoundex::soundex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RefinedSoundex.java</sourceFile><mutatedClass>org.apache.commons.codec.language.RefinedSoundex</mutatedClass><mutatedMethod>soundex</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>95</index><block>20</block><killingTest>org.apache.commons.codec.language.RefinedSoundexTest.testEncode(org.apache.commons.codec.language.RefinedSoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/RefinedSoundex::soundex to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>12</block><killingTest>org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid(org.apache.commons.codec.net.RFC1522CodecTest)</killingTest><description>Replaced integer subtraction with addition</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>85</index><block>16</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>142</index><block>20</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>Replaced integer addition with subtraction</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>7</block><killingTest>org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid(org.apache.commons.codec.net.RFC1522CodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>9</block><killingTest>org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid(org.apache.commons.codec.net.RFC1522CodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>10</block><killingTest>org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid(org.apache.commons.codec.net.RFC1522CodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>12</block><killingTest>org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid(org.apache.commons.codec.net.RFC1522CodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>72</index><block>14</block><killingTest>org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid(org.apache.commons.codec.net.RFC1522CodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>16</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>147</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>120</index><block>18</block><killingTest>org.apache.commons.codec.net.RFC1522CodecTest.testDecodeInvalid(org.apache.commons.codec.net.RFC1522CodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>8</block><killingTest>org.apache.commons.codec.net.RFC1522CodecTest.testNullInput(org.apache.commons.codec.net.RFC1522CodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/RFC1522Codec::decodeText to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>decodeText</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>172</index><block>20</block><killingTest>org.apache.commons.codec.net.QCodecTest.testDecodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/RFC1522Codec::decodeText to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>encodeText</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>encodeText</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>5</block><killingTest>org.apache.commons.codec.net.RFC1522CodecTest.testNullInput(org.apache.commons.codec.net.RFC1522CodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/RFC1522Codec::encodeText to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>encodeText</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>106</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>6</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/net/RFC1522Codec::encodeText to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>encodeText</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>encodeText</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/net/RFC1522Codec::encodeText to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RFC1522Codec.java</sourceFile><mutatedClass>org.apache.commons.codec.net.RFC1522Codec</mutatedClass><mutatedMethod>encodeText</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>72</index><block>3</block><killingTest>org.apache.commons.codec.net.QCodecTest.testEncodeObjects(org.apache.commons.codec.net.QCodecTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/net/RFC1522Codec::encodeText to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>1</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><block>1</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>1</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>1</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>Replaced Shift Left with Shift Right</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>1</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>1</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>1</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>Replaced bitwise OR with AND</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>35</index><block>2</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>43</index><block>2</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>Replaced Shift Right with Shift Left</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>b64from24bit</mutatedMethod><methodDescription>(BBBILjava/lang/StringBuilder;)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>1</block><killingTest>org.apache.commons.codec.digest.B64Test.testB64from24bit(org.apache.commons.codec.digest.B64Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>getRandomSalt</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>4</block><killingTest>org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt(org.apache.commons.codec.digest.Apr1CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/B64::getRandomSalt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>getRandomSalt</mutatedMethod><methodDescription>(ILjava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>5</block><killingTest>org.apache.commons.codec.digest.Apr1CryptTest.testApr1CryptWithoutSalt(org.apache.commons.codec.digest.Apr1CryptTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>getRandomSalt</mutatedMethod><methodDescription>(ILjava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>30</index><block>6</block><killingTest/><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>getRandomSalt</mutatedMethod><methodDescription>(ILjava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>5</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCallWithThreadLocalRandom(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='5'><sourceFile>B64.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.B64</mutatedClass><mutatedMethod>getRandomSalt</mutatedMethod><methodDescription>(ILjava/util/Random;)Ljava/lang/String;</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>7</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptExplicitCallWithThreadLocalRandom(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/B64::getRandomSalt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>guessLanguage</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>26</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>guessLanguage</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>28</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Lang::guessLanguage to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>guessLanguages</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>30</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>guessLanguages</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>31</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>guessLanguages</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>73</index><block>34</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>guessLanguages</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>81</index><block>36</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Lang::guessLanguages to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>instance</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/NameType;)Lorg/apache/commons/codec/language/bm/Lang;</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Lang::instance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>loadFromResource</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages;)Lorg/apache/commons/codec/language/bm/Lang;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>75</index><block>7</block><killingTest/><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>loadFromResource</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages;)Lorg/apache/commons/codec/language/bm/Lang;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>1</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>loadFromResource</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages;)Lorg/apache/commons/codec/language/bm/Lang;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>loadFromResource</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages;)Lorg/apache/commons/codec/language/bm/Lang;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>3</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>loadFromResource</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages;)Lorg/apache/commons/codec/language/bm/Lang;</methodDescription><lineNumber>143</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>5</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>loadFromResource</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages;)Lorg/apache/commons/codec/language/bm/Lang;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>7</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>loadFromResource</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages;)Lorg/apache/commons/codec/language/bm/Lang;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>93</index><block>8</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>loadFromResource</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages;)Lorg/apache/commons/codec/language/bm/Lang;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>109</index><block>10</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>Lang.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Lang</mutatedClass><mutatedMethod>loadFromResource</mutatedMethod><methodDescription>(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages;)Lorg/apache/commons/codec/language/bm/Lang;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>243</index><block>24</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/Lang::loadFromResource to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>39</index><block>4</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>38</index><block>4</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>Changed increment from -1 to 1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>44</index><block>5</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>60</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><block>5</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>Changed increment from 1 to -1</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>2</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>4</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>58</index><block>5</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>7</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>9</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>10</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>3</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>70</index><block>8</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>89</index><block>11</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CharSequenceUtils.java</sourceFile><mutatedClass>org.apache.commons.codec.binary.CharSequenceUtils</mutatedClass><mutatedMethod>regionMatches</mutatedMethod><methodDescription>(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>98</index><block>13</block><killingTest>org.apache.commons.codec.binary.StringUtilsTest.testEqualsCS2(org.apache.commons.codec.binary.StringUtilsTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>11</block><killingTest>org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant(org.apache.commons.codec.digest.CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Crypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>12</block><killingTest>org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant(org.apache.commons.codec.digest.CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Crypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([B)Ljava/lang/String;</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTest>org.apache.commons.codec.digest.CryptTest.testCryptWithBytes(org.apache.commons.codec.digest.CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Crypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>2</block><killingTest>org.apache.commons.codec.digest.CryptTest.testCryptWithEmptySalt(org.apache.commons.codec.digest.CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>4</block><killingTest>org.apache.commons.codec.digest.CryptTest.testCryptWithBytes(org.apache.commons.codec.digest.CryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>6</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>8</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>3</block><killingTest>org.apache.commons.codec.digest.CryptTest.testDefaultCryptVariant(org.apache.commons.codec.digest.CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Crypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>22</index><block>5</block><killingTest>org.apache.commons.codec.digest.CryptTest.testCryptWithBytes(org.apache.commons.codec.digest.CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Crypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>7</block><killingTest>org.apache.commons.codec.digest.Sha256CryptTest.testSha256CryptBytes(org.apache.commons.codec.digest.Sha256CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Crypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>48</index><block>9</block><killingTest>org.apache.commons.codec.digest.Md5CryptTest.testMd5CryptLongInput(org.apache.commons.codec.digest.Md5CryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Crypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Crypt.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.Crypt</mutatedClass><mutatedMethod>crypt</mutatedMethod><methodDescription>([BLjava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>10</block><killingTest>org.apache.commons.codec.digest.UnixCryptTest.testUnixCryptStrings(org.apache.commons.codec.digest.UnixCryptTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/Crypt::crypt to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Languages.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Languages</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>67</index><block>7</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>changed conditional boundary</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Languages.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Languages</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages;</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>1</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Languages.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Languages</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages;</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>2</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Languages.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Languages</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages;</methodDescription><lineNumber>183</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>3</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Languages.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Languages</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages;</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>5</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Languages.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Languages</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>67</index><block>7</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Languages.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Languages</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Languages;</methodDescription><lineNumber>194</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>113</index><block>13</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/Languages::getInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Languages.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Languages</mutatedClass><mutatedMethod>getInstance</mutatedMethod><methodDescription>(Lorg/apache/commons/codec/language/bm/NameType;)Lorg/apache/commons/codec/language/bm/Languages;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testAllChars(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/Languages::getInstance to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Languages.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.Languages</mutatedClass><mutatedMethod>getLanguages</mutatedMethod><methodDescription>()Ljava/util/Set;</methodDescription><lineNumber>289</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>22</block><killingTest>org.apache.commons.codec.language.bm.LanguageGuessingTest.testLanguageGuessing[Ceau&#351;escu-romanian-{2}](org.apache.commons.codec.language.bm.LanguageGuessingTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/Languages::getLanguages to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BeiderMorseEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.BeiderMorseEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeEmpty(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='3'><sourceFile>BeiderMorseEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.BeiderMorseEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>3</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/bm/BeiderMorseEncoder::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BeiderMorseEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.BeiderMorseEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BeiderMorseEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.BeiderMorseEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>5</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeNull(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/BeiderMorseEncoder::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BeiderMorseEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.BeiderMorseEncoder</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>6</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testEncodeAtzNotEmpty(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/BeiderMorseEncoder::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BeiderMorseEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.BeiderMorseEncoder</mutatedClass><mutatedMethod>getNameType</mutatedMethod><methodDescription>()Lorg/apache/commons/codec/language/bm/NameType;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>7</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetNameTypeAsh(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/BeiderMorseEncoder::getNameType to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BeiderMorseEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.BeiderMorseEncoder</mutatedClass><mutatedMethod>getRuleType</mutatedMethod><methodDescription>()Lorg/apache/commons/codec/language/bm/RuleType;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>8</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetRuleTypeExact(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/BeiderMorseEncoder::getRuleType to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BeiderMorseEncoder.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.BeiderMorseEncoder</mutatedClass><mutatedMethod>isConcat</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>9</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testSetConcat(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Caverphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone</mutatedClass><mutatedMethod>caverphone</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Caverphone::caverphone to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Caverphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>2</block><killingTest/><description>negated conditional</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Caverphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>4</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Caverphone::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Caverphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>5</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Caverphone::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='NO_COVERAGE' numberOfTestsRun='0'><sourceFile>Caverphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone</mutatedClass><mutatedMethod>isCaverphoneEqual</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>101</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>6</block><killingTest/><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Caverphone2.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone2</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords(org.apache.commons.codec.language.Caverphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Caverphone2.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone2</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords(org.apache.commons.codec.language.Caverphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Caverphone2.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone2</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>3</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Caverphone2::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Caverphone2.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone2</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>441</index><block>4</block><killingTest>org.apache.commons.codec.language.Caverphone2Test.testCaverphoneRevisitedRandomWords(org.apache.commons.codec.language.Caverphone2Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Caverphone2::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Caverphone1.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone1</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTest>org.apache.commons.codec.language.Caverphone1Test.testEncodeNull(org.apache.commons.codec.language.Caverphone1Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Caverphone1.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone1</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTest>org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples(org.apache.commons.codec.language.Caverphone1Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>Caverphone1.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone1</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>3</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/Caverphone1::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Caverphone1.java</sourceFile><mutatedClass>org.apache.commons.codec.language.Caverphone1</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/lang/String;</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>420</index><block>4</block><killingTest>org.apache.commons.codec.language.Caverphone1Test.testSpecificationV1Examples(org.apache.commons.codec.language.Caverphone1Test)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/Caverphone1::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Charsets.java</sourceFile><mutatedClass>org.apache.commons.codec.Charsets</mutatedClass><mutatedMethod>toCharset</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/nio/charset/Charset;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>4</block><killingTest>org.apache.commons.codec.CharsetsTest.testToCharset(org.apache.commons.codec.CharsetsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Charsets.java</sourceFile><mutatedClass>org.apache.commons.codec.Charsets</mutatedClass><mutatedMethod>toCharset</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/nio/charset/Charset;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>6</block><killingTest>org.apache.commons.codec.CharsetsTest.testToCharset(org.apache.commons.codec.CharsetsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/Charsets::toCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Charsets.java</sourceFile><mutatedClass>org.apache.commons.codec.Charsets</mutatedClass><mutatedMethod>toCharset</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>1</block><killingTest>org.apache.commons.codec.CharsetsTest.testToCharset(org.apache.commons.codec.CharsetsTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Charsets.java</sourceFile><mutatedClass>org.apache.commons.codec.Charsets</mutatedClass><mutatedMethod>toCharset</mutatedMethod><methodDescription>(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>3</block><killingTest>org.apache.commons.codec.CharsetsTest.testToCharset(org.apache.commons.codec.CharsetsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/Charsets::toCharset to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Utils.java</sourceFile><mutatedClass>org.apache.commons.codec.net.Utils</mutatedClass><mutatedMethod>digit16</mutatedMethod><methodDescription>(B)I</methodDescription><lineNumber>48</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>1</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeInvalid(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Utils.java</sourceFile><mutatedClass>org.apache.commons.codec.net.Utils</mutatedClass><mutatedMethod>digit16</mutatedMethod><methodDescription>(B)I</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>3</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testDecodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Utils.java</sourceFile><mutatedClass>org.apache.commons.codec.net.Utils</mutatedClass><mutatedMethod>hexDigit</mutatedMethod><methodDescription>(I)C</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>4</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>Replaced bitwise AND with OR</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Utils.java</sourceFile><mutatedClass>org.apache.commons.codec.net.Utils</mutatedClass><mutatedMethod>hexDigit</mutatedMethod><methodDescription>(I)C</methodDescription><lineNumber>61</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>4</block><killingTest>org.apache.commons.codec.net.QuotedPrintableCodecTest.testEncodeObjects(org.apache.commons.codec.net.QuotedPrintableCodecTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>AbstractCaverphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.AbstractCaverphone</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.codec.language.Caverphone2Test.testEncodeEmpty(org.apache.commons.codec.language.Caverphone2Test)</killingTest><description>negated conditional</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>AbstractCaverphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.AbstractCaverphone</mutatedClass><mutatedMethod>encode</mutatedMethod><methodDescription>(Ljava/lang/Object;)Ljava/lang/Object;</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>3</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/language/AbstractCaverphone::encode to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractCaverphone.java</sourceFile><mutatedClass>org.apache.commons.codec.language.AbstractCaverphone</mutatedClass><mutatedMethod>isEncodeEqual</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;)Z</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>4</block><killingTest>org.apache.commons.codec.language.Caverphone1Test.testIsCaverphoneEquals(org.apache.commons.codec.language.Caverphone1Test)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Resources.java</sourceFile><mutatedClass>org.apache.commons.codec.Resources</mutatedClass><mutatedMethod>getInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/io/InputStream;</methodDescription><lineNumber>37</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>1</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLanguageIllegalArgumentException(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>negated conditional</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Resources.java</sourceFile><mutatedClass>org.apache.commons.codec.Resources</mutatedClass><mutatedMethod>getInputStream</mutatedMethod><methodDescription>(Ljava/lang/String;)Ljava/io/InputStream;</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>30</index><block>3</block><killingTest>org.apache.commons.codec.language.DaitchMokotoffSoundexTest.testAccentedCharacterFolding(org.apache.commons.codec.language.DaitchMokotoffSoundexTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/Resources::getInputStream to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>HmacAlgorithms.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacAlgorithms</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.codec.digest.HmacAlgorithmsTest.testAlgorithm[HmacSHA1](org.apache.commons.codec.digest.HmacAlgorithmsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/HmacAlgorithms::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='0'><sourceFile>HmacAlgorithms.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.HmacAlgorithms</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTest/><description>mutated return of Object value for org/apache/commons/codec/digest/HmacAlgorithms::toString to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StringEncoderComparator.java</sourceFile><mutatedClass>org.apache.commons.codec.StringEncoderComparator</mutatedClass><mutatedMethod>compare</mutatedMethod><methodDescription>(Ljava/lang/Object;Ljava/lang/Object;)I</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>42</index><block>3</block><killingTest>org.apache.commons.codec.StringEncoderComparatorTest.testComparatorWithDoubleMetaphoneAndInvalidInput(org.apache.commons.codec.StringEncoderComparatorTest)</killingTest><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>RuleType.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.RuleType</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/RuleType::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MessageDigestAlgorithms.java</sourceFile><mutatedClass>org.apache.commons.codec.digest.MessageDigestAlgorithms</mutatedClass><mutatedMethod>values</mutatedMethod><methodDescription>()[Ljava/lang/String;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>0</block><killingTest>org.apache.commons.codec.digest.MessageDigestAlgorithmsTest.testAlgorithm[MD5](org.apache.commons.codec.digest.MessageDigestAlgorithmsTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/digest/MessageDigestAlgorithms::values to ( if (x != null) null else throw new RuntimeException )</description></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>NameType.java</sourceFile><mutatedClass>org.apache.commons.codec.language.bm.NameType</mutatedClass><mutatedMethod>getName</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTest>org.apache.commons.codec.language.bm.BeiderMorseEncoderTest.testInvalidLangIllegalArgumentException(org.apache.commons.codec.language.bm.BeiderMorseEncoderTest)</killingTest><description>mutated return of Object value for org/apache/commons/codec/language/bm/NameType::getName to ( if (x != null) null else throw new RuntimeException )</description></mutation>
</mutations>
