Complexity metrics,Sun, 23 Jun 2019 13:42:38 EDT
Method,ev(G),iv(G),LOC,V,v(G)
"null.isCompatibleValue(Object)",1,1,4,11,1
"org.jfree.chart.AreaChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.AreaChartTest.createAreaChart()",1,1,15,142,1
"org.jfree.chart.AreaChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.AreaChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.AreaChartTest.testReplaceDataset()",1,1,23,312,1
"org.jfree.chart.AreaChartTest.testSetSeriesToolTipGenerator()",1,1,14,74,1
"org.jfree.chart.AreaChartTest.testSetSeriesURLGenerator()",1,1,14,74,1
"org.jfree.chart.BarChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.BarChartTest.createBarChart()",1,1,24,142,1
"org.jfree.chart.BarChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.BarChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.BarChartTest.testReplaceDataset()",1,1,24,312,1
"org.jfree.chart.BarChartTest.testSetSeriesToolTipGenerator()",1,1,14,80,1
"org.jfree.chart.BarChartTest.testSetSeriesURLGenerator()",1,1,14,80,1
"org.jfree.chart.ChartColor.ChartColor(int,int,int)",1,1,11,25,1
"org.jfree.chart.ChartColor.createDefaultPaintArray()",1,1,45,284,1
"org.jfree.chart.ChartFactory.createAreaChart(String,String,String,CategoryDataset)",1,1,23,41,1
"org.jfree.chart.ChartFactory.createAreaChart(String,String,String,CategoryDataset,PlotOrientation,boolean,boolean,boolean)",1,3,45,213,3
"org.jfree.chart.ChartFactory.createBarChart(String,String,String,CategoryDataset)",1,1,24,41,1
"org.jfree.chart.ChartFactory.createBarChart(String,String,String,CategoryDataset,PlotOrientation,boolean,boolean,boolean)",1,5,59,401,5
"org.jfree.chart.ChartFactory.createBoxAndWhiskerChart(String,String,String,BoxAndWhiskerCategoryDataset,boolean)",1,1,31,127,1
"org.jfree.chart.ChartFactory.createBoxAndWhiskerChart(String,String,String,BoxAndWhiskerXYDataset,boolean)",1,1,26,118,1
"org.jfree.chart.ChartFactory.createBubbleChart(String,String,String,XYZDataset)",1,1,20,41,1
"org.jfree.chart.ChartFactory.createBubbleChart(String,String,String,XYZDataset,PlotOrientation,boolean,boolean,boolean)",1,3,42,255,3
"org.jfree.chart.ChartFactory.createCandlestickChart(String,String,String,OHLCDataset,boolean)",1,1,25,106,1
"org.jfree.chart.ChartFactory.createGanttChart(String,String,String,IntervalCategoryDataset)",1,1,24,36,1
"org.jfree.chart.ChartFactory.createGanttChart(String,String,String,IntervalCategoryDataset,boolean,boolean,boolean)",1,3,43,190,3
"org.jfree.chart.ChartFactory.createHighLowChart(String,String,String,OHLCDataset,boolean)",1,1,26,110,1
"org.jfree.chart.ChartFactory.createHistogram(String,String,String,IntervalXYDataset)",1,1,18,41,1
"org.jfree.chart.ChartFactory.createHistogram(String,String,String,IntervalXYDataset,PlotOrientation,boolean,boolean,boolean)",1,3,41,250,3
"org.jfree.chart.ChartFactory.createLineChart(String,String,String,CategoryDataset)",1,1,23,41,1
"org.jfree.chart.ChartFactory.createLineChart(String,String,String,CategoryDataset,PlotOrientation,boolean,boolean,boolean)",1,3,44,208,3
"org.jfree.chart.ChartFactory.createMultiplePieChart(String,CategoryDataset,TableOrder,boolean,boolean,boolean)",1,3,39,230,3
"org.jfree.chart.ChartFactory.createMultiplePieChart3D(String,CategoryDataset,TableOrder,boolean,boolean,boolean)",1,3,47,377,3
"org.jfree.chart.ChartFactory.createPieChart(String,PieDataset)",1,1,16,26,1
"org.jfree.chart.ChartFactory.createPieChart(String,PieDataset,PieDataset,int,boolean,boolean,boolean,Locale,boolean,boolean)",1,14,111,"1,256",18
"org.jfree.chart.ChartFactory.createPieChart(String,PieDataset,PieDataset,int,boolean,boolean,boolean,boolean,boolean,boolean)",1,15,112,"1,285",19
"org.jfree.chart.ChartFactory.createPieChart(String,PieDataset,boolean,boolean,Locale)",1,2,29,144,2
"org.jfree.chart.ChartFactory.createPieChart(String,PieDataset,boolean,boolean,boolean)",1,3,30,164,3
"org.jfree.chart.ChartFactory.createPieChart3D(String,PieDataset)",1,1,16,26,1
"org.jfree.chart.ChartFactory.createPieChart3D(String,PieDataset,boolean,boolean,Locale)",1,2,28,142,2
"org.jfree.chart.ChartFactory.createPieChart3D(String,PieDataset,boolean,boolean,boolean)",1,3,28,149,3
"org.jfree.chart.ChartFactory.createPolarChart(String,XYDataset,boolean,boolean,boolean)",1,1,29,173,1
"org.jfree.chart.ChartFactory.createRingChart(String,PieDataset,boolean,boolean,Locale)",1,2,29,144,2
"org.jfree.chart.ChartFactory.createRingChart(String,PieDataset,boolean,boolean,boolean)",1,3,30,164,3
"org.jfree.chart.ChartFactory.createScatterPlot(String,String,String,XYDataset)",1,1,21,41,1
"org.jfree.chart.ChartFactory.createScatterPlot(String,String,String,XYDataset,PlotOrientation,boolean,boolean,boolean)",1,1,46,295,3
"org.jfree.chart.ChartFactory.createStackedAreaChart(String,String,String,CategoryDataset)",1,1,24,41,1
"org.jfree.chart.ChartFactory.createStackedAreaChart(String,String,String,CategoryDataset,PlotOrientation,boolean,boolean,boolean)",1,3,46,213,3
"org.jfree.chart.ChartFactory.createStackedBarChart(String,String,String,CategoryDataset)",1,1,24,41,1
"org.jfree.chart.ChartFactory.createStackedBarChart(String,String,String,CategoryDataset,PlotOrientation,boolean,boolean,boolean)",1,3,45,194,3
"org.jfree.chart.ChartFactory.createStackedXYAreaChart(String,String,String,TableXYDataset)",1,1,20,41,1
"org.jfree.chart.ChartFactory.createStackedXYAreaChart(String,String,String,TableXYDataset,PlotOrientation,boolean,boolean,boolean)",1,1,47,299,3
"org.jfree.chart.ChartFactory.createTimeSeriesChart(String,String,String,XYDataset)",1,1,25,36,1
"org.jfree.chart.ChartFactory.createTimeSeriesChart(String,String,String,XYDataset,boolean,boolean,boolean)",1,2,49,279,3
"org.jfree.chart.ChartFactory.createWaferMapChart(String,WaferMapDataset,PlotOrientation,boolean,boolean,boolean)",1,1,25,100,1
"org.jfree.chart.ChartFactory.createWaterfallChart(String,String,String,CategoryDataset,PlotOrientation,boolean,boolean,boolean)",1,5,64,497,5
"org.jfree.chart.ChartFactory.createWindPlot(String,String,String,WindDataset,boolean,boolean,boolean)",1,3,33,190,3
"org.jfree.chart.ChartFactory.createXYAreaChart(String,String,String,XYDataset)",1,1,22,41,1
"org.jfree.chart.ChartFactory.createXYAreaChart(String,String,String,XYDataset,PlotOrientation,boolean,boolean,boolean)",1,1,45,262,3
"org.jfree.chart.ChartFactory.createXYBarChart(String,String,boolean,String,IntervalXYDataset)",1,1,23,51,1
"org.jfree.chart.ChartFactory.createXYBarChart(String,String,boolean,String,IntervalXYDataset,PlotOrientation,boolean,boolean,boolean)",1,5,57,305,5
"org.jfree.chart.ChartFactory.createXYLineChart(String,String,String,XYDataset)",1,1,16,41,1
"org.jfree.chart.ChartFactory.createXYLineChart(String,String,String,XYDataset,PlotOrientation,boolean,boolean,boolean)",1,3,37,225,3
"org.jfree.chart.ChartFactory.createXYStepAreaChart(String,String,String,XYDataset)",1,1,17,41,1
"org.jfree.chart.ChartFactory.createXYStepAreaChart(String,String,String,XYDataset,PlotOrientation,boolean,boolean,boolean)",1,1,44,284,3
"org.jfree.chart.ChartFactory.createXYStepChart(String,String,String,XYDataset)",1,1,17,41,1
"org.jfree.chart.ChartFactory.createXYStepChart(String,String,String,XYDataset,PlotOrientation,boolean,boolean,boolean)",1,1,42,279,3
"org.jfree.chart.ChartFactory.getChartTheme()",1,1,13,8,1
"org.jfree.chart.ChartFactory.setChartTheme(ChartTheme)",1,3,28,106,3
"org.jfree.chart.ChartFrame.ChartFrame(String,JFreeChart)",1,1,9,15,1
"org.jfree.chart.ChartFrame.ChartFrame(String,JFreeChart,boolean)",1,2,19,88,2
"org.jfree.chart.ChartFrame.getChartPanel()",1,1,8,8,1
"org.jfree.chart.ChartHints.ChartHints()",1,1,3,0,1
"org.jfree.chart.ChartHints.Key.Key(int)",1,1,8,11,1
"org.jfree.chart.ChartHints.Key.isCompatibleValue(Object)",4,2,20,110,7
"org.jfree.chart.ChartMouseEvent.ChartMouseEvent(JFreeChart,MouseEvent,ChartEntity)",1,1,16,43,1
"org.jfree.chart.ChartMouseEvent.getChart()",1,1,8,8,1
"org.jfree.chart.ChartMouseEvent.getEntity()",1,1,8,8,1
"org.jfree.chart.ChartMouseEvent.getTrigger()",1,1,8,8,1
"org.jfree.chart.ChartPanel.ChartPanel(JFreeChart)",1,1,17,57,1
"org.jfree.chart.ChartPanel.ChartPanel(JFreeChart,boolean)",1,1,27,62,1
"org.jfree.chart.ChartPanel.ChartPanel(JFreeChart,boolean,boolean,boolean,boolean,boolean)",1,1,22,85,1
"org.jfree.chart.ChartPanel.ChartPanel(JFreeChart,int,int,int,int,int,int,boolean,boolean,boolean,boolean,boolean,boolean)",1,1,32,123,1
"org.jfree.chart.ChartPanel.ChartPanel(JFreeChart,int,int,int,int,int,int,boolean,boolean,boolean,boolean,boolean,boolean,boolean)",1,2,74,747,7
"org.jfree.chart.ChartPanel.actionPerformed(ActionEvent)",1,19,76,843,19
"org.jfree.chart.ChartPanel.addChartMouseListener(ChartMouseListener)",1,1,9,31,1
"org.jfree.chart.ChartPanel.addOverlay(Overlay)",1,1,13,43,1
"org.jfree.chart.ChartPanel.chartChanged(ChartChangeEvent)",1,2,15,64,2
"org.jfree.chart.ChartPanel.chartProgress(ChartProgressEvent)",1,1,9,2,1
"org.jfree.chart.ChartPanel.createChartPrintJob()",1,4,19,108,4
"org.jfree.chart.ChartPanel.createPopupMenu(boolean,boolean,boolean,boolean)",1,1,17,38,1
"org.jfree.chart.ChartPanel.createPopupMenu(boolean,boolean,boolean,boolean,boolean)",1,12,148,"2,068",12
"org.jfree.chart.ChartPanel.createSVGGraphics2D(int,int)",1,1,21,148,8
"org.jfree.chart.ChartPanel.displayPopupMenu(int,int)",2,12,53,641,16
"org.jfree.chart.ChartPanel.doCopy()",1,1,16,147,1
"org.jfree.chart.ChartPanel.doEditChartProperties()",1,2,15,91,2
"org.jfree.chart.ChartPanel.doSaveAs()",1,3,25,242,4
"org.jfree.chart.ChartPanel.drawZoomRectangle(Graphics2D,boolean)",1,5,30,159,5
"org.jfree.chart.ChartPanel.generateSVG(int,int)",2,1,36,213,7
"org.jfree.chart.ChartPanel.getAnchor()",1,1,8,8,1
"org.jfree.chart.ChartPanel.getChart()",1,1,8,8,1
"org.jfree.chart.ChartPanel.getChartRenderingInfo()",1,1,8,8,1
"org.jfree.chart.ChartPanel.getDefaultDirectoryForSaveAs()",1,1,10,8,1
"org.jfree.chart.ChartPanel.getDismissDelay()",1,1,11,11,1
"org.jfree.chart.ChartPanel.getEntityForPoint(int,int)",1,3,22,185,3
"org.jfree.chart.ChartPanel.getFillZoomRectangle()",1,1,9,11,1
"org.jfree.chart.ChartPanel.getInitialDelay()",1,1,10,11,1
"org.jfree.chart.ChartPanel.getListeners(Class)",2,2,18,53,2
"org.jfree.chart.ChartPanel.getMaximumDrawHeight()",1,1,11,11,1
"org.jfree.chart.ChartPanel.getMaximumDrawWidth()",1,1,11,11,1
"org.jfree.chart.ChartPanel.getMinimumDrawHeight()",1,1,11,11,1
"org.jfree.chart.ChartPanel.getMinimumDrawWidth()",1,1,11,11,1
"org.jfree.chart.ChartPanel.getPointInRectangle(int,int,Rectangle2D)",1,1,15,92,1
"org.jfree.chart.ChartPanel.getPopupMenu()",1,1,8,8,1
"org.jfree.chart.ChartPanel.getRefreshBuffer()",1,1,9,11,1
"org.jfree.chart.ChartPanel.getReshowDelay()",1,1,10,11,1
"org.jfree.chart.ChartPanel.getScaleX()",1,1,9,11,1
"org.jfree.chart.ChartPanel.getScaleY()",1,1,9,11,1
"org.jfree.chart.ChartPanel.getScreenDataArea()",1,1,15,195,1
"org.jfree.chart.ChartPanel.getScreenDataArea(int,int)",3,2,27,175,3
"org.jfree.chart.ChartPanel.getToolTipText(MouseEvent)",1,4,24,204,4
"org.jfree.chart.ChartPanel.getZoomAroundAnchor()",1,1,13,13,1
"org.jfree.chart.ChartPanel.getZoomFillPaint()",1,1,13,11,1
"org.jfree.chart.ChartPanel.getZoomInFactor()",1,1,10,13,1
"org.jfree.chart.ChartPanel.getZoomOutFactor()",1,1,10,13,1
"org.jfree.chart.ChartPanel.getZoomOutlinePaint()",1,1,13,11,1
"org.jfree.chart.ChartPanel.getZoomTriggerDistance()",1,1,9,11,1
"org.jfree.chart.ChartPanel.isDomainZoomable()",1,1,9,11,1
"org.jfree.chart.ChartPanel.isEnforceFileExtensions()",1,1,11,13,1
"org.jfree.chart.ChartPanel.isMouseWheelEnabled()",1,1,11,19,1
"org.jfree.chart.ChartPanel.isRangeZoomable()",1,1,9,11,1
"org.jfree.chart.ChartPanel.mouseClicked(MouseEvent)",3,4,35,466,6
"org.jfree.chart.ChartPanel.mouseDragged(MouseEvent)",5,9,93,"1,533",15
"org.jfree.chart.ChartPanel.mouseEntered(MouseEvent)",1,2,20,149,2
"org.jfree.chart.ChartPanel.mouseExited(MouseEvent)",1,2,18,79,2
"org.jfree.chart.ChartPanel.mouseMoved(MouseEvent)",2,5,33,428,6
"org.jfree.chart.ChartPanel.mousePressed(MouseEvent)",2,11,51,551,12
"org.jfree.chart.ChartPanel.mouseReleased(MouseEvent)",1,15,92,"1,353",17
"org.jfree.chart.ChartPanel.overlayChanged(OverlayChangeEvent)",1,1,11,4,1
"org.jfree.chart.ChartPanel.paintComponent(Graphics)",2,9,115,"1,860",14
"org.jfree.chart.ChartPanel.print(Graphics,PageFormat,int)",2,1,24,171,2
"org.jfree.chart.ChartPanel.readObject(ObjectInputStream)",1,2,20,100,2
"org.jfree.chart.ChartPanel.removeChartMouseListener(ChartMouseListener)",1,1,9,19,1
"org.jfree.chart.ChartPanel.removeOverlay(Overlay)",1,2,15,59,2
"org.jfree.chart.ChartPanel.restoreAutoBounds()",2,1,17,85,2
"org.jfree.chart.ChartPanel.restoreAutoDomainBounds()",1,2,19,144,3
"org.jfree.chart.ChartPanel.restoreAutoRangeBounds()",1,2,19,144,3
"org.jfree.chart.ChartPanel.saveAsPDF(File)",1,6,41,412,8
"org.jfree.chart.ChartPanel.saveAsSVG(File)",2,7,57,603,10
"org.jfree.chart.ChartPanel.scale(Rectangle2D)",1,1,16,149,1
"org.jfree.chart.ChartPanel.setAnchor(Point2D)",1,1,9,11,1
"org.jfree.chart.ChartPanel.setChart(JFreeChart)",1,4,35,326,5
"org.jfree.chart.ChartPanel.setDefaultDirectoryForSaveAs(File)",3,2,17,59,3
"org.jfree.chart.ChartPanel.setDismissDelay(int)",1,1,11,18,1
"org.jfree.chart.ChartPanel.setDisplayToolTips(boolean)",1,2,16,39,2
"org.jfree.chart.ChartPanel.setDomainZoomable(boolean)",1,4,19,88,4
"org.jfree.chart.ChartPanel.setEnforceFileExtensions(boolean)",1,1,10,15,1
"org.jfree.chart.ChartPanel.setFillZoomRectangle(boolean)",1,1,9,15,1
"org.jfree.chart.ChartPanel.setInitialDelay(int)",1,1,11,18,1
"org.jfree.chart.ChartPanel.setMaximumDrawHeight(int)",1,1,12,15,1
"org.jfree.chart.ChartPanel.setMaximumDrawWidth(int)",1,1,12,15,1
"org.jfree.chart.ChartPanel.setMinimumDrawHeight(int)",1,1,12,15,1
"org.jfree.chart.ChartPanel.setMinimumDrawWidth(int)",1,1,12,15,1
"org.jfree.chart.ChartPanel.setMouseWheelEnabled(boolean)",1,3,16,117,5
"org.jfree.chart.ChartPanel.setMouseZoomable(boolean)",1,1,9,15,1
"org.jfree.chart.ChartPanel.setMouseZoomable(boolean,boolean)",1,1,12,30,1
"org.jfree.chart.ChartPanel.setPopupMenu(JPopupMenu)",1,1,8,11,1
"org.jfree.chart.ChartPanel.setRangeZoomable(boolean)",1,4,17,88,4
"org.jfree.chart.ChartPanel.setRefreshBuffer(boolean)",1,1,10,15,1
"org.jfree.chart.ChartPanel.setReshowDelay(int)",1,1,11,18,1
"org.jfree.chart.ChartPanel.setZoomAroundAnchor(boolean)",1,1,13,15,1
"org.jfree.chart.ChartPanel.setZoomFillPaint(Paint)",1,1,14,22,1
"org.jfree.chart.ChartPanel.setZoomInFactor(double)",1,1,10,15,1
"org.jfree.chart.ChartPanel.setZoomOutFactor(double)",1,1,10,15,1
"org.jfree.chart.ChartPanel.setZoomOutlinePaint(Paint)",1,1,13,11,1
"org.jfree.chart.ChartPanel.setZoomTriggerDistance(int)",1,1,9,15,1
"org.jfree.chart.ChartPanel.translateJava2DToScreen(Point2D)",1,1,13,108,1
"org.jfree.chart.ChartPanel.translateScreenToJava2D(Point)",1,1,14,100,1
"org.jfree.chart.ChartPanel.updateUI()",1,2,12,39,2
"org.jfree.chart.ChartPanel.writeAsPDF(File,int,int)",2,1,47,466,9
"org.jfree.chart.ChartPanel.writeObject(ObjectOutputStream)",1,1,12,41,1
"org.jfree.chart.ChartPanel.zoom(Rectangle2D)",1,5,43,646,5
"org.jfree.chart.ChartPanel.zoomInBoth(double,double)",2,1,20,116,2
"org.jfree.chart.ChartPanel.zoomInDomain(double,double)",1,2,23,162,2
"org.jfree.chart.ChartPanel.zoomInRange(double,double)",1,2,23,162,2
"org.jfree.chart.ChartPanel.zoomOutBoth(double,double)",2,1,20,116,2
"org.jfree.chart.ChartPanel.zoomOutDomain(double,double)",1,2,23,162,2
"org.jfree.chart.ChartPanel.zoomOutRange(double,double)",1,2,23,162,2
"org.jfree.chart.ChartPanelTest.chartChanged(ChartChangeEvent)",1,1,10,15,1
"org.jfree.chart.ChartPanelTest.chartMouseClicked(ChartMouseEvent)",1,1,9,2,1
"org.jfree.chart.ChartPanelTest.chartMouseMoved(ChartMouseEvent)",1,1,9,2,1
"org.jfree.chart.ChartPanelTest.test2502355_restoreAutoBounds()",1,1,15,116,1
"org.jfree.chart.ChartPanelTest.test2502355_restoreAutoDomainBounds()",1,1,17,155,1
"org.jfree.chart.ChartPanelTest.test2502355_restoreAutoRangeBounds()",1,1,17,155,1
"org.jfree.chart.ChartPanelTest.test2502355_zoom()",1,1,15,146,1
"org.jfree.chart.ChartPanelTest.test2502355_zoomInBoth()",1,1,15,129,1
"org.jfree.chart.ChartPanelTest.test2502355_zoomInDomain()",1,1,17,169,1
"org.jfree.chart.ChartPanelTest.test2502355_zoomInRange()",1,1,17,169,1
"org.jfree.chart.ChartPanelTest.test2502355_zoomOutBoth()",1,1,15,129,1
"org.jfree.chart.ChartPanelTest.test2502355_zoomOutDomain()",1,1,17,169,1
"org.jfree.chart.ChartPanelTest.test2502355_zoomOutRange()",1,1,17,169,1
"org.jfree.chart.ChartPanelTest.testConstructor1()",1,1,8,22,1
"org.jfree.chart.ChartPanelTest.testGetListeners()",1,1,35,275,3
"org.jfree.chart.ChartPanelTest.testSetChart()",1,1,10,41,1
"org.jfree.chart.ChartPanelTest.testSetMouseWheelEnabled()",1,1,17,130,1
"org.jfree.chart.ChartRenderingInfo.ChartRenderingInfo()",1,1,7,8,1
"org.jfree.chart.ChartRenderingInfo.ChartRenderingInfo(EntityCollection)",1,1,13,30,1
"org.jfree.chart.ChartRenderingInfo.clear()",1,2,10,77,2
"org.jfree.chart.ChartRenderingInfo.clone()",1,3,19,108,3
"org.jfree.chart.ChartRenderingInfo.equals(Object)",6,1,27,186,6
"org.jfree.chart.ChartRenderingInfo.getChartArea()",1,1,10,8,1
"org.jfree.chart.ChartRenderingInfo.getEntityCollection()",1,1,10,8,1
"org.jfree.chart.ChartRenderingInfo.getPlotInfo()",1,1,8,8,1
"org.jfree.chart.ChartRenderingInfo.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.ChartRenderingInfo.setChartArea(Rectangle2D)",1,1,10,15,1
"org.jfree.chart.ChartRenderingInfo.setEntityCollection(EntityCollection)",1,1,10,11,1
"org.jfree.chart.ChartRenderingInfo.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.ChartRenderingInfoTest.testCloning()",1,1,23,284,1
"org.jfree.chart.ChartRenderingInfoTest.testEquals()",1,1,24,357,1
"org.jfree.chart.ChartRenderingInfoTest.testSerialization()",1,1,10,53,1
"org.jfree.chart.ChartRenderingInfoTest.testSerialization2()",1,1,12,79,1
"org.jfree.chart.ChartTransferable.ChartTransferable(JFreeChart,int,int)",1,1,10,26,1
"org.jfree.chart.ChartTransferable.ChartTransferable(JFreeChart,int,int,boolean)",1,1,13,48,1
"org.jfree.chart.ChartTransferable.ChartTransferable(JFreeChart,int,int,int,int,int,int,boolean)",1,1,37,153,2
"org.jfree.chart.ChartTransferable.createBufferedImage(JFreeChart,int,int,int,int,int,int)",1,2,57,503,6
"org.jfree.chart.ChartTransferable.getTransferData(DataFlavor)",2,2,22,114,2
"org.jfree.chart.ChartTransferable.getTransferDataFlavors()",1,1,9,11,1
"org.jfree.chart.ChartTransferable.isDataFlavorSupported(DataFlavor)",1,1,11,19,1
"org.jfree.chart.ChartUtils.applyCurrentTheme(JFreeChart)",1,1,12,15,1
"org.jfree.chart.ChartUtils.encodeAsPNG(BufferedImage)",1,1,12,24,1
"org.jfree.chart.ChartUtils.encodeAsPNG(BufferedImage,boolean,int)",1,1,16,43,1
"org.jfree.chart.ChartUtils.getImageMap(String,ChartRenderingInfo)",1,1,16,22,1
"org.jfree.chart.ChartUtils.getImageMap(String,ChartRenderingInfo,ToolTipTagFragmentGenerator,URLTagFragmentGenerator)",1,1,22,24,1
"org.jfree.chart.ChartUtils.isJFreeSVGAvailable()",1,1,18,44,2
"org.jfree.chart.ChartUtils.isOrsonPDFAvailable()",1,1,18,44,2
"org.jfree.chart.ChartUtils.saveChartAsJPEG(File,JFreeChart,int,int)",1,1,15,41,1
"org.jfree.chart.ChartUtils.saveChartAsJPEG(File,JFreeChart,int,int,ChartRenderingInfo)",1,1,26,106,1
"org.jfree.chart.ChartUtils.saveChartAsJPEG(File,float,JFreeChart,int,int)",1,1,16,51,1
"org.jfree.chart.ChartUtils.saveChartAsJPEG(File,float,JFreeChart,int,int,ChartRenderingInfo)",1,1,29,118,1
"org.jfree.chart.ChartUtils.saveChartAsPNG(File,JFreeChart,int,int)",1,1,15,41,1
"org.jfree.chart.ChartUtils.saveChartAsPNG(File,JFreeChart,int,int,ChartRenderingInfo)",1,1,26,91,1
"org.jfree.chart.ChartUtils.saveChartAsPNG(File,JFreeChart,int,int,ChartRenderingInfo,boolean,int)",1,1,30,129,1
"org.jfree.chart.ChartUtils.writeBufferedImageAsJPEG(OutputStream,BufferedImage)",1,1,13,24,1
"org.jfree.chart.ChartUtils.writeBufferedImageAsJPEG(OutputStream,float,BufferedImage)",1,1,13,33,1
"org.jfree.chart.ChartUtils.writeBufferedImageAsPNG(OutputStream,BufferedImage)",1,1,12,24,1
"org.jfree.chart.ChartUtils.writeBufferedImageAsPNG(OutputStream,BufferedImage,boolean,int)",1,1,16,43,1
"org.jfree.chart.ChartUtils.writeChartAsJPEG(OutputStream,JFreeChart,int,int)",1,1,16,41,1
"org.jfree.chart.ChartUtils.writeChartAsJPEG(OutputStream,JFreeChart,int,int,ChartRenderingInfo)",1,1,23,91,1
"org.jfree.chart.ChartUtils.writeChartAsJPEG(OutputStream,float,JFreeChart,int,int)",1,1,18,51,1
"org.jfree.chart.ChartUtils.writeChartAsJPEG(OutputStream,float,JFreeChart,int,int,ChartRenderingInfo)",1,1,24,103,1
"org.jfree.chart.ChartUtils.writeChartAsPNG(OutputStream,JFreeChart,int,int)",1,1,15,41,1
"org.jfree.chart.ChartUtils.writeChartAsPNG(OutputStream,JFreeChart,int,int,ChartRenderingInfo)",1,1,22,72,1
"org.jfree.chart.ChartUtils.writeChartAsPNG(OutputStream,JFreeChart,int,int,ChartRenderingInfo,boolean,int)",1,1,27,108,1
"org.jfree.chart.ChartUtils.writeChartAsPNG(OutputStream,JFreeChart,int,int,boolean,int)",1,1,19,60,1
"org.jfree.chart.ChartUtils.writeImageMap(PrintWriter,String,ChartRenderingInfo,ToolTipTagFragmentGenerator,URLTagFragmentGenerator)",1,1,23,38,1
"org.jfree.chart.ChartUtils.writeImageMap(PrintWriter,String,ChartRenderingInfo,boolean)",1,1,27,68,2
"org.jfree.chart.ChartUtils.writeScaledChartAsPNG(OutputStream,JFreeChart,int,int,int,int)",1,2,45,519,4
"org.jfree.chart.GanttChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.GanttChartTest.createDataset()",1,1,85,"1,881",1
"org.jfree.chart.GanttChartTest.createGanttChart()",1,1,15,34,1
"org.jfree.chart.GanttChartTest.date(int,int,int)",1,1,15,53,1
"org.jfree.chart.GanttChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.GanttChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.GanttChartTest.testDrawWithNullInfo2()",1,1,12,46,1
"org.jfree.chart.GanttChartTest.testReplaceDataset()",1,1,11,64,1
"org.jfree.chart.GanttChartTest.testSetSeriesToolTipGenerator()",1,1,14,74,1
"org.jfree.chart.GanttChartTest.testSetSeriesURLGenerator()",1,1,14,74,1
"org.jfree.chart.HashUtils.hashCode(int,BooleanList)",2,4,35,273,5
"org.jfree.chart.HashUtils.hashCode(int,Comparable)",1,2,15,64,2
"org.jfree.chart.HashUtils.hashCode(int,Object)",1,2,15,64,2
"org.jfree.chart.HashUtils.hashCode(int,Paint)",1,1,13,36,1
"org.jfree.chart.HashUtils.hashCode(int,PaintList)",2,4,35,273,5
"org.jfree.chart.HashUtils.hashCode(int,String)",1,2,14,64,2
"org.jfree.chart.HashUtils.hashCode(int,Stroke)",1,2,14,64,2
"org.jfree.chart.HashUtils.hashCode(int,StrokeList)",2,4,35,273,5
"org.jfree.chart.HashUtils.hashCode(int,boolean)",1,1,14,46,2
"org.jfree.chart.HashUtils.hashCode(int,double)",1,1,15,76,1
"org.jfree.chart.HashUtils.hashCode(int,int)",1,1,14,34,1
"org.jfree.chart.HashUtils.hashCodeForDoubleArray(double[])",2,2,20,183,3
"org.jfree.chart.HashUtils.hashCodeForPaint(Paint)",2,2,30,247,3
"org.jfree.chart.HashUtilsTest.testHashCodeForDoubleArray()",1,1,14,126,1
"org.jfree.chart.JFreeChart.JFreeChart(Plot)",1,1,14,18,1
"org.jfree.chart.JFreeChart.JFreeChart(String,Font,Plot,boolean)",1,3,63,627,4
"org.jfree.chart.JFreeChart.JFreeChart(String,Plot)",1,1,15,19,1
"org.jfree.chart.JFreeChart.addChangeListener(ChartChangeListener)",1,1,11,31,1
"org.jfree.chart.JFreeChart.addLegend(LegendTitle)",1,1,11,8,1
"org.jfree.chart.JFreeChart.addProgressListener(ChartProgressListener)",1,1,11,19,1
"org.jfree.chart.JFreeChart.addSubtitle(Title)",1,1,14,48,1
"org.jfree.chart.JFreeChart.addSubtitle(int,Title)",2,2,19,114,3
"org.jfree.chart.JFreeChart.clearSubtitles()",1,2,13,38,2
"org.jfree.chart.JFreeChart.clone()",1,4,33,341,4
"org.jfree.chart.JFreeChart.createAlignedRectangle2D(Size2D,Rectangle2D,HorizontalAlignment,VerticalAlignment)",1,7,36,371,7
"org.jfree.chart.JFreeChart.createBufferedImage(int,int)",1,1,11,22,1
"org.jfree.chart.JFreeChart.createBufferedImage(int,int,ChartRenderingInfo)",1,1,15,26,1
"org.jfree.chart.JFreeChart.createBufferedImage(int,int,double,double,ChartRenderingInfo)",1,1,31,174,1
"org.jfree.chart.JFreeChart.createBufferedImage(int,int,int,ChartRenderingInfo)",1,1,19,89,1
"org.jfree.chart.JFreeChart.draw(Graphics2D,Rectangle2D)",1,1,13,18,1
"org.jfree.chart.JFreeChart.draw(Graphics2D,Rectangle2D,ChartRenderingInfo)",1,1,11,19,1
"org.jfree.chart.JFreeChart.draw(Graphics2D,Rectangle2D,Point2D,ChartRenderingInfo)",1,17,104,"1,618",20
"org.jfree.chart.JFreeChart.drawTitle(Title,Graphics2D,Rectangle2D,boolean)",7,6,74,"1,233",8
"org.jfree.chart.JFreeChart.equals(Object)",16,1,60,705,16
"org.jfree.chart.JFreeChart.fireChartChanged()",1,1,9,15,1
"org.jfree.chart.JFreeChart.getAntiAlias()",1,1,12,36,1
"org.jfree.chart.JFreeChart.getBackgroundImage()",1,1,11,8,1
"org.jfree.chart.JFreeChart.getBackgroundImageAlignment()",1,1,11,13,1
"org.jfree.chart.JFreeChart.getBackgroundImageAlpha()",1,1,10,13,1
"org.jfree.chart.JFreeChart.getBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.JFreeChart.getBorderPaint()",1,1,10,8,1
"org.jfree.chart.JFreeChart.getBorderStroke()",1,1,10,8,1
"org.jfree.chart.JFreeChart.getCategoryPlot()",1,1,13,8,1
"org.jfree.chart.JFreeChart.getElementHinting()",1,1,14,13,1
"org.jfree.chart.JFreeChart.getID()",1,1,10,8,1
"org.jfree.chart.JFreeChart.getLegend()",1,1,11,11,1
"org.jfree.chart.JFreeChart.getLegend(int)",4,1,23,84,4
"org.jfree.chart.JFreeChart.getPadding()",1,1,10,8,1
"org.jfree.chart.JFreeChart.getPlot()",1,1,10,8,1
"org.jfree.chart.JFreeChart.getRenderingHints()",1,1,10,8,1
"org.jfree.chart.JFreeChart.getSubtitle(int)",2,2,15,72,3
"org.jfree.chart.JFreeChart.getSubtitleCount()",1,1,10,15,1
"org.jfree.chart.JFreeChart.getSubtitles()",1,1,10,11,1
"org.jfree.chart.JFreeChart.getTextAntiAlias()",1,1,13,15,1
"org.jfree.chart.JFreeChart.getTitle()",1,1,13,8,1
"org.jfree.chart.JFreeChart.getXYPlot()",1,1,13,8,1
"org.jfree.chart.JFreeChart.handleClick(int,int,ChartRenderingInfo)",1,1,17,36,1
"org.jfree.chart.JFreeChart.isBorderVisible()",1,1,11,13,1
"org.jfree.chart.JFreeChart.isNotify()",1,1,11,13,1
"org.jfree.chart.JFreeChart.notifyListeners(ChartChangeEvent)",1,4,17,133,4
"org.jfree.chart.JFreeChart.notifyListeners(ChartProgressEvent)",1,3,14,118,3
"org.jfree.chart.JFreeChart.plotChanged(PlotChangeEvent)",1,1,11,18,1
"org.jfree.chart.JFreeChart.readObject(ObjectInputStream)",1,3,30,297,3
"org.jfree.chart.JFreeChart.removeChangeListener(ChartChangeListener)",1,1,11,31,1
"org.jfree.chart.JFreeChart.removeLegend()",1,1,9,8,1
"org.jfree.chart.JFreeChart.removeProgressListener(ChartProgressListener)",1,1,10,19,1
"org.jfree.chart.JFreeChart.removeSubtitle(Title)",1,1,12,19,1
"org.jfree.chart.JFreeChart.setAntiAlias(boolean)",1,1,16,43,2
"org.jfree.chart.JFreeChart.setBackgroundImage(Image)",1,4,22,93,4
"org.jfree.chart.JFreeChart.setBackgroundImageAlignment(int)",1,2,14,38,2
"org.jfree.chart.JFreeChart.setBackgroundImageAlpha(float)",1,2,14,38,2
"org.jfree.chart.JFreeChart.setBackgroundPaint(Paint)",1,4,22,93,4
"org.jfree.chart.JFreeChart.setBorderPaint(Paint)",1,1,11,15,1
"org.jfree.chart.JFreeChart.setBorderStroke(Stroke)",1,1,11,15,1
"org.jfree.chart.JFreeChart.setBorderVisible(boolean)",1,1,12,19,1
"org.jfree.chart.JFreeChart.setElementHinting(boolean)",1,1,14,15,1
"org.jfree.chart.JFreeChart.setID(String)",1,1,10,11,1
"org.jfree.chart.JFreeChart.setNotify(boolean)",1,2,15,34,2
"org.jfree.chart.JFreeChart.setPadding(RectangleInsets)",1,1,13,34,1
"org.jfree.chart.JFreeChart.setRenderingHints(RenderingHints)",1,1,14,26,1
"org.jfree.chart.JFreeChart.setSubtitles(List<Title>)",1,3,21,70,3
"org.jfree.chart.JFreeChart.setTextAntiAlias(Object)",1,1,16,36,1
"org.jfree.chart.JFreeChart.setTextAntiAlias(boolean)",1,2,22,31,2
"org.jfree.chart.JFreeChart.setTitle(String)",1,3,24,87,3
"org.jfree.chart.JFreeChart.setTitle(TextTitle)",1,3,20,76,3
"org.jfree.chart.JFreeChart.titleChanged(TitleChangeEvent)",1,1,11,18,1
"org.jfree.chart.JFreeChart.writeObject(ObjectOutputStream)",1,1,13,58,1
"org.jfree.chart.JFreeChartTest.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.JFreeChartTest.setUp()",1,1,11,89,1
"org.jfree.chart.JFreeChartTest.testAddSubtitle()",1,4,35,306,4
"org.jfree.chart.JFreeChartTest.testBug942()",1,1,6,41,1
"org.jfree.chart.JFreeChartTest.testEquals()",1,1,83,"1,157",1
"org.jfree.chart.JFreeChartTest.testEquals2()",1,1,13,96,1
"org.jfree.chart.JFreeChartTest.testGetSubtitle()",1,4,31,216,4
"org.jfree.chart.JFreeChartTest.testGetSubtitles()",1,1,13,76,1
"org.jfree.chart.JFreeChartTest.testLegendEvents()",1,1,13,80,1
"org.jfree.chart.JFreeChartTest.testSerialization1()",1,1,15,140,1
"org.jfree.chart.JFreeChartTest.testSerialization2()",1,1,13,94,1
"org.jfree.chart.JFreeChartTest.testSerialization3()",1,1,50,781,1
"org.jfree.chart.JFreeChartTest.testSerialization4()",1,1,17,129,1
"org.jfree.chart.JFreeChartTest.testSubtitleCount()",1,1,8,28,1
"org.jfree.chart.JFreeChartTest.testTitleChangeEvent()",1,1,30,272,1
"org.jfree.chart.LegendItem.LegendItem(AttributedString,String,String,String,Shape,Paint)",1,1,22,68,1
"org.jfree.chart.LegendItem.LegendItem(AttributedString,String,String,String,Shape,Paint,Stroke,Paint)",1,1,26,72,1
"org.jfree.chart.LegendItem.LegendItem(AttributedString,String,String,String,Shape,Stroke,Paint)",1,1,20,70,1
"org.jfree.chart.LegendItem.LegendItem(AttributedString,String,String,String,boolean,Shape,boolean,Paint,boolean,Paint,Stroke,boolean,Shape,Stroke,Paint)",1,1,58,436,1
"org.jfree.chart.LegendItem.LegendItem(String)",1,1,11,11,1
"org.jfree.chart.LegendItem.LegendItem(String,Paint)",1,1,13,49,1
"org.jfree.chart.LegendItem.LegendItem(String,String,String,String,Shape,Paint)",1,1,22,68,1
"org.jfree.chart.LegendItem.LegendItem(String,String,String,String,Shape,Paint,Stroke,Paint)",1,1,25,72,1
"org.jfree.chart.LegendItem.LegendItem(String,String,String,String,Shape,Stroke,Paint)",1,1,19,70,1
"org.jfree.chart.LegendItem.LegendItem(String,String,String,String,boolean,Shape,boolean,Paint,boolean,Paint,Stroke,boolean,Shape,Stroke,Paint)",1,1,57,403,1
"org.jfree.chart.LegendItem.characterIteratorToString(CharacterIterator)",2,2,24,190,3
"org.jfree.chart.LegendItem.clone()",1,3,26,155,3
"org.jfree.chart.LegendItem.equals(Object)",22,1,77,"1,067",22
"org.jfree.chart.LegendItem.getAttributedLabel()",1,1,8,8,1
"org.jfree.chart.LegendItem.getDataset()",1,1,12,11,1
"org.jfree.chart.LegendItem.getDatasetIndex()",1,1,13,13,1
"org.jfree.chart.LegendItem.getDescription()",1,1,10,8,1
"org.jfree.chart.LegendItem.getFillPaint()",1,1,8,8,1
"org.jfree.chart.LegendItem.getFillPaintTransformer()",1,1,13,8,1
"org.jfree.chart.LegendItem.getLabel()",1,1,8,8,1
"org.jfree.chart.LegendItem.getLabelFont()",1,1,10,8,1
"org.jfree.chart.LegendItem.getLabelPaint()",1,1,10,8,1
"org.jfree.chart.LegendItem.getLine()",1,1,11,8,1
"org.jfree.chart.LegendItem.getLinePaint()",1,1,8,8,1
"org.jfree.chart.LegendItem.getLineStroke()",1,1,8,8,1
"org.jfree.chart.LegendItem.getOutlinePaint()",1,1,8,8,1
"org.jfree.chart.LegendItem.getOutlineStroke()",1,1,10,8,1
"org.jfree.chart.LegendItem.getSeriesIndex()",1,1,10,11,1
"org.jfree.chart.LegendItem.getSeriesKey()",1,1,12,8,1
"org.jfree.chart.LegendItem.getShape()",1,1,11,8,1
"org.jfree.chart.LegendItem.getToolTipText()",1,1,10,8,1
"org.jfree.chart.LegendItem.getURLText()",1,1,10,8,1
"org.jfree.chart.LegendItem.isLineVisible()",1,1,10,13,1
"org.jfree.chart.LegendItem.isShapeFilled()",1,1,8,11,1
"org.jfree.chart.LegendItem.isShapeOutlineVisible()",1,1,9,11,1
"org.jfree.chart.LegendItem.isShapeVisible()",1,1,10,13,1
"org.jfree.chart.LegendItem.readObject(ObjectInputStream)",1,1,21,174,1
"org.jfree.chart.LegendItem.setDataset(Dataset)",1,1,10,11,1
"org.jfree.chart.LegendItem.setDatasetIndex(int)",1,1,12,15,1
"org.jfree.chart.LegendItem.setDescription(String)",1,1,11,11,1
"org.jfree.chart.LegendItem.setFillPaint(Paint)",1,1,11,22,1
"org.jfree.chart.LegendItem.setFillPaintTransformer(GradientPaintTransformer)",1,1,14,22,1
"org.jfree.chart.LegendItem.setLabelFont(Font)",1,1,10,11,1
"org.jfree.chart.LegendItem.setLabelPaint(Paint)",1,1,10,11,1
"org.jfree.chart.LegendItem.setLine(Shape)",1,1,12,22,1
"org.jfree.chart.LegendItem.setLinePaint(Paint)",1,1,11,22,1
"org.jfree.chart.LegendItem.setLineStroke(Stroke)",1,1,11,22,1
"org.jfree.chart.LegendItem.setLineVisible(boolean)",1,1,12,15,1
"org.jfree.chart.LegendItem.setOutlinePaint(Paint)",1,1,11,22,1
"org.jfree.chart.LegendItem.setOutlineStroke(Stroke)",1,1,13,22,1
"org.jfree.chart.LegendItem.setSeriesIndex(int)",1,1,10,15,1
"org.jfree.chart.LegendItem.setSeriesKey(Comparable)",1,1,10,11,1
"org.jfree.chart.LegendItem.setShape(Shape)",1,1,12,22,1
"org.jfree.chart.LegendItem.setShapeVisible(boolean)",1,1,13,15,1
"org.jfree.chart.LegendItem.setToolTipText(String)",1,1,11,11,1
"org.jfree.chart.LegendItem.setURLText(String)",1,1,12,11,1
"org.jfree.chart.LegendItem.writeObject(ObjectOutputStream)",1,1,19,174,1
"org.jfree.chart.LegendItemCollection.LegendItemCollection()",1,1,6,8,1
"org.jfree.chart.LegendItemCollection.add(LegendItem)",1,1,8,15,1
"org.jfree.chart.LegendItemCollection.addAll(LegendItemCollection)",1,1,9,19,1
"org.jfree.chart.LegendItemCollection.clone()",1,1,14,36,1
"org.jfree.chart.LegendItemCollection.equals(Object)",4,1,21,101,4
"org.jfree.chart.LegendItemCollection.get(int)",1,1,10,19,1
"org.jfree.chart.LegendItemCollection.getItemCount()",1,1,8,15,1
"org.jfree.chart.LegendItemCollection.iterator()",1,1,8,11,1
"org.jfree.chart.LegendItemCollectionTest.testCloning()",1,1,17,153,1
"org.jfree.chart.LegendItemCollectionTest.testEquals()",1,1,26,348,1
"org.jfree.chart.LegendItemCollectionTest.testSerialization()",1,1,11,85,1
"org.jfree.chart.LegendItemTest.testCloning()",1,1,13,85,1
"org.jfree.chart.LegendItemTest.testEquals()",1,1,216,"5,530",1
"org.jfree.chart.LegendItemTest.testSerialization()",1,1,19,260,1
"org.jfree.chart.LegendItemTest.testSerialization2()",1,1,12,120,1
"org.jfree.chart.LineChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.LineChartTest.createLineChart()",1,1,15,121,1
"org.jfree.chart.LineChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.LineChartTest.testDrawWithNullInfo()",1,1,14,82,1
"org.jfree.chart.LineChartTest.testReplaceDataset()",1,1,24,312,1
"org.jfree.chart.LineChartTest.testSetSeriesToolTipGenerator()",1,1,14,74,1
"org.jfree.chart.LineChartTest.testSetSeriesURLGenerator()",1,1,14,74,1
"org.jfree.chart.MeterChartTest.testDrawWithNullInfo()",1,1,16,138,1
"org.jfree.chart.MouseWheelHandler.MouseWheelHandler(ChartPanel)",1,1,10,30,1
"org.jfree.chart.MouseWheelHandler.getZoomFactor()",1,1,11,13,1
"org.jfree.chart.MouseWheelHandler.handleZoomable(Zoomable,MouseWheelEvent)",2,3,31,337,5
"org.jfree.chart.MouseWheelHandler.mouseWheelMoved(MouseWheelEvent)",2,3,21,121,4
"org.jfree.chart.MouseWheelHandler.setZoomFactor(double)",1,1,10,15,1
"org.jfree.chart.PaintMap.PaintMap()",1,1,6,8,1
"org.jfree.chart.PaintMap.clear()",1,1,6,11,1
"org.jfree.chart.PaintMap.clone()",1,1,16,48,1
"org.jfree.chart.PaintMap.containsKey(Comparable)",1,1,12,19,1
"org.jfree.chart.PaintMap.equals(Object)",6,2,31,235,6
"org.jfree.chart.PaintMap.getPaint(Comparable)",1,1,15,26,1
"org.jfree.chart.PaintMap.put(Comparable,Paint)",1,1,14,31,1
"org.jfree.chart.PaintMap.readObject(ObjectInputStream)",1,2,19,122,2
"org.jfree.chart.PaintMap.writeObject(ObjectOutputStream)",1,2,19,122,2
"org.jfree.chart.PaintMapTest.testCloning()",1,1,14,120,1
"org.jfree.chart.PaintMapTest.testEquals()",1,1,26,324,1
"org.jfree.chart.PaintMapTest.testGetPaint()",1,2,20,151,2
"org.jfree.chart.PaintMapTest.testKeysOfDifferentClasses()",1,1,12,62,1
"org.jfree.chart.PaintMapTest.testPut()",1,2,17,100,2
"org.jfree.chart.PaintMapTest.testSerialization1()",1,1,9,22,1
"org.jfree.chart.PaintMapTest.testSerialization2()",1,1,12,89,1
"org.jfree.chart.PieChart3DTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.PieChart3DTest.createPieChart3D(PieDataset)",1,1,10,15,1
"org.jfree.chart.PieChart3DTest.setUp()",1,1,12,83,1
"org.jfree.chart.PieChart3DTest.testNullValueInDataset()",1,1,18,158,1
"org.jfree.chart.PieChart3DTest.testReplaceDatasetOnPieChart()",1,1,14,80,1
"org.jfree.chart.PieChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.PieChartTest.createPieChart()",1,1,12,83,1
"org.jfree.chart.PieChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.PieChartTest.testReplaceDatasetOnPieChart()",1,1,14,80,1
"org.jfree.chart.PolarChartPanel.PolarChartPanel(JFreeChart)",1,1,8,11,1
"org.jfree.chart.PolarChartPanel.PolarChartPanel(JFreeChart,boolean)",1,1,14,59,1
"org.jfree.chart.PolarChartPanel.actionPerformed(ActionEvent)",1,4,24,169,4
"org.jfree.chart.PolarChartPanel.checkChart(JFreeChart)",2,1,11,38,2
"org.jfree.chart.PolarChartPanel.createPopupMenu(boolean,boolean,boolean,boolean)",1,5,57,612,5
"org.jfree.chart.PolarChartPanel.getPopupMenuItem(JPopupMenu,String)",1,4,21,158,5
"org.jfree.chart.PolarChartPanel.setChart(JFreeChart)",1,1,10,18,1
"org.jfree.chart.ScatterPlotTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.ScatterPlotTest.createChart()",1,1,14,93,1
"org.jfree.chart.ScatterPlotTest.setUp()",1,1,7,11,1
"org.jfree.chart.ScatterPlotTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.ScatterPlotTest.testReplaceDataset()",1,1,23,279,1
"org.jfree.chart.ScatterPlotTest.testSetSeriesToolTipGenerator()",1,1,13,80,1
"org.jfree.chart.StackedAreaChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.StackedAreaChartTest.createChart()",1,1,22,142,1
"org.jfree.chart.StackedAreaChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.StackedAreaChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.StackedAreaChartTest.testReplaceDataset()",1,1,23,312,1
"org.jfree.chart.StackedAreaChartTest.testSetSeriesToolTipGenerator()",1,1,14,80,1
"org.jfree.chart.StackedAreaChartTest.testSetSeriesURLGenerator()",1,1,14,80,1
"org.jfree.chart.StackedBarChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.StackedBarChartTest.createChart()",1,1,22,142,1
"org.jfree.chart.StackedBarChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.StackedBarChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.StackedBarChartTest.testReplaceDataset()",1,1,24,312,1
"org.jfree.chart.StackedBarChartTest.testSetSeriesToolTipGenerator()",1,1,14,80,1
"org.jfree.chart.StackedBarChartTest.testSetSeriesURLGenerator()",1,1,14,80,1
"org.jfree.chart.StandardChartTheme.StandardChartTheme(String)",1,1,8,11,1
"org.jfree.chart.StandardChartTheme.StandardChartTheme(String,boolean)",1,1,42,653,2
"org.jfree.chart.StandardChartTheme.apply(JFreeChart)",1,4,24,225,4
"org.jfree.chart.StandardChartTheme.applyToAbstractRenderer(AbstractRenderer)",1,3,13,44,3
"org.jfree.chart.StandardChartTheme.applyToBlock(Block)",1,3,15,74,3
"org.jfree.chart.StandardChartTheme.applyToBlockContainer(BlockContainer)",1,2,12,41,2
"org.jfree.chart.StandardChartTheme.applyToCategoryAxis(CategoryAxis)",1,2,16,122,2
"org.jfree.chart.StandardChartTheme.applyToCategoryItemRenderer(CategoryItemRenderer)",1,5,31,232,5
"org.jfree.chart.StandardChartTheme.applyToCategoryPlot(CategoryPlot)",1,13,56,659,13
"org.jfree.chart.StandardChartTheme.applyToFastScatterPlot(FastScatterPlot)",1,3,17,104,3
"org.jfree.chart.StandardChartTheme.applyToMeterPlot(MeterPlot)",1,1,14,125,1
"org.jfree.chart.StandardChartTheme.applyToMultiplePiePlot(MultiplePiePlot)",1,1,8,11,1
"org.jfree.chart.StandardChartTheme.applyToPeriodAxis(PeriodAxis)",1,2,17,176,2
"org.jfree.chart.StandardChartTheme.applyToPiePlot(PiePlot)",1,4,24,155,4
"org.jfree.chart.StandardChartTheme.applyToPlot(Plot)",1,12,46,379,12
"org.jfree.chart.StandardChartTheme.applyToPolarPlot(PolarPlot)",1,2,16,108,2
"org.jfree.chart.StandardChartTheme.applyToSpiderWebPlot(SpiderWebPlot)",1,1,10,44,1
"org.jfree.chart.StandardChartTheme.applyToSymbolAxis(SymbolAxis)",1,1,9,30,1
"org.jfree.chart.StandardChartTheme.applyToThermometerPlot(ThermometerPlot)",1,2,14,68,2
"org.jfree.chart.StandardChartTheme.applyToTitle(Title)",1,10,43,439,10
"org.jfree.chart.StandardChartTheme.applyToValueAxis(ValueAxis)",1,3,17,112,3
"org.jfree.chart.StandardChartTheme.applyToXYAnnotation(XYAnnotation)",1,2,13,62,2
"org.jfree.chart.StandardChartTheme.applyToXYItemRenderer(XYItemRenderer)",1,3,18,125,3
"org.jfree.chart.StandardChartTheme.applyToXYPlot(XYPlot)",1,14,65,809,14
"org.jfree.chart.StandardChartTheme.clone()",1,1,11,11,1
"org.jfree.chart.StandardChartTheme.createDarknessTheme()",1,1,40,598,1
"org.jfree.chart.StandardChartTheme.createJFreeTheme()",1,1,8,11,1
"org.jfree.chart.StandardChartTheme.createLegacyTheme()",1,1,4,22,1
"org.jfree.chart.StandardChartTheme.equals(Object)",33,1,117,"1,802",33
"org.jfree.chart.StandardChartTheme.getAxisLabelPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getAxisOffset()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getBarPainter()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getBaselinePaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getChartBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getCrosshairPaint()",1,1,8,8,1
"org.jfree.chart.StandardChartTheme.getDomainGridlinePaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getDrawingSupplier()",2,2,18,70,3
"org.jfree.chart.StandardChartTheme.getErrorIndicatorPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getExtraLargeFont()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getGridBandAlternatePaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getGridBandPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getItemLabelPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getLabelLinkPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getLabelLinkStyle()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getLargeFont()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getLegendBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getLegendItemPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getName()",1,1,8,8,1
"org.jfree.chart.StandardChartTheme.getPlotBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getPlotOutlinePaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getRangeGridlinePaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getRegularFont()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getShadowPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getSmallFont()",1,1,12,8,1
"org.jfree.chart.StandardChartTheme.getSubtitlePaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getThermometerPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getTickLabelPaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getTitlePaint()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.getXYBarPainter()",1,1,10,8,1
"org.jfree.chart.StandardChartTheme.isShadowVisible()",1,1,10,13,1
"org.jfree.chart.StandardChartTheme.readObject(ObjectInputStream)",1,1,32,404,1
"org.jfree.chart.StandardChartTheme.setAxisLabelPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setAxisOffset(RectangleInsets)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setBarPainter(BarPainter)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setBaselinePaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setChartBackgroundPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setCrosshairPaint(Paint)",1,1,9,22,1
"org.jfree.chart.StandardChartTheme.setDomainGridlinePaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setDrawingSupplier(DrawingSupplier)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setErrorIndicatorPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setExtraLargeFont(Font)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setGridBandAlternatePaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setGridBandPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setItemLabelPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setLabelLinkPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setLabelLinkStyle(PieLabelLinkStyle)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setLargeFont(Font)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setLegendBackgroundPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setLegendItemPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setPlotBackgroundPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setPlotOutlinePaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setRangeGridlinePaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setRegularFont(Font)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setShadowPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setShadowVisible(boolean)",1,1,10,15,1
"org.jfree.chart.StandardChartTheme.setSmallFont(Font)",1,1,13,22,1
"org.jfree.chart.StandardChartTheme.setSubtitlePaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setThermometerPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setTickLabelPaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setTitlePaint(Paint)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.setXYBarPainter(XYBarPainter)",1,1,11,22,1
"org.jfree.chart.StandardChartTheme.writeObject(ObjectOutputStream)",1,1,30,404,1
"org.jfree.chart.StandardChartThemeTest.testCloning()",1,1,11,77,1
"org.jfree.chart.StandardChartThemeTest.testEquals()",1,1,159,"4,014",1
"org.jfree.chart.StandardChartThemeTest.testSerialization()",1,1,9,31,1
"org.jfree.chart.StrokeMap.StrokeMap()",1,1,6,8,1
"org.jfree.chart.StrokeMap.clear()",1,1,6,11,1
"org.jfree.chart.StrokeMap.clone()",1,1,16,48,1
"org.jfree.chart.StrokeMap.containsKey(Comparable)",1,1,12,19,1
"org.jfree.chart.StrokeMap.equals(Object)",6,2,31,235,6
"org.jfree.chart.StrokeMap.getStroke(Comparable)",1,1,15,26,1
"org.jfree.chart.StrokeMap.put(Comparable,Stroke)",1,1,11,31,1
"org.jfree.chart.StrokeMap.readObject(ObjectInputStream)",1,2,19,122,2
"org.jfree.chart.StrokeMap.writeObject(ObjectOutputStream)",1,2,19,122,2
"org.jfree.chart.StrokeMapTest.testCloning()",1,1,13,102,1
"org.jfree.chart.StrokeMapTest.testEquals()",1,1,24,281,1
"org.jfree.chart.StrokeMapTest.testGetStroke()",1,1,21,159,2
"org.jfree.chart.StrokeMapTest.testPut()",1,1,18,110,2
"org.jfree.chart.StrokeMapTest.testSerialization1()",1,1,9,22,1
"org.jfree.chart.StrokeMapTest.testSerialization2()",1,1,11,64,1
"org.jfree.chart.TestUtils.containsInstanceOf(Collection,Class)",3,3,19,99,4
"org.jfree.chart.TestUtils.serialised(Object)",1,1,19,135,3
"org.jfree.chart.TimeSeriesChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.TimeSeriesChartTest.createChart()",1,1,21,108,1
"org.jfree.chart.TimeSeriesChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.TimeSeriesChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.TimeSeriesChartTest.testReplaceDataset()",1,1,23,279,1
"org.jfree.chart.TimeSeriesChartTest.testSetSeriesToolTipGenerator()",1,1,13,80,1
"org.jfree.chart.WaterfallChartTest.createWaterfallChart()",1,1,22,142,1
"org.jfree.chart.WaterfallChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.WaterfallChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.WaterfallChartTest.testSetSeriesToolTipGenerator()",1,1,14,80,1
"org.jfree.chart.WaterfallChartTest.testSetSeriesURLGenerator()",1,1,14,80,1
"org.jfree.chart.XYAreaChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.XYAreaChartTest.createChart()",1,1,14,93,1
"org.jfree.chart.XYAreaChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.XYAreaChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.XYAreaChartTest.testReplaceDataset()",1,1,23,279,1
"org.jfree.chart.XYAreaChartTest.testSetSeriesToolTipGenerator()",1,1,13,80,1
"org.jfree.chart.XYBarChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.XYBarChartTest.createChart()",1,1,15,108,1
"org.jfree.chart.XYBarChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.XYBarChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.XYBarChartTest.testReplaceDataset()",1,1,23,279,1
"org.jfree.chart.XYBarChartTest.testSetSeriesToolTipGenerator()",1,1,13,80,1
"org.jfree.chart.XYLineChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.XYLineChartTest.createChart()",1,1,14,93,1
"org.jfree.chart.XYLineChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.XYLineChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.XYLineChartTest.testReplaceDataset()",1,1,23,279,1
"org.jfree.chart.XYLineChartTest.testSetSeriesToolTipGenerator()",1,1,13,80,1
"org.jfree.chart.XYStepAreaChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.XYStepAreaChartTest.createChart()",1,1,14,93,1
"org.jfree.chart.XYStepAreaChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.XYStepAreaChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.XYStepAreaChartTest.testReplaceDataset()",1,1,23,279,1
"org.jfree.chart.XYStepAreaChartTest.testSetSeriesToolTipGenerator()",1,1,13,80,1
"org.jfree.chart.XYStepChartTest.LocalListener.chartChanged(ChartChangeEvent)",1,1,9,11,1
"org.jfree.chart.XYStepChartTest.createChart()",1,1,24,114,1
"org.jfree.chart.XYStepChartTest.setUp()",1,1,7,11,1
"org.jfree.chart.XYStepChartTest.testDrawWithNullInfo()",1,2,18,106,2
"org.jfree.chart.XYStepChartTest.testReplaceDataset()",1,1,23,279,1
"org.jfree.chart.XYStepChartTest.testSetSeriesToolTipGenerator()",1,1,13,80,1
"org.jfree.chart.annotations.AbstractAnnotation.AbstractAnnotation()",1,1,6,8,1
"org.jfree.chart.annotations.AbstractAnnotation.addChangeListener(AnnotationChangeListener)",1,1,12,19,1
"org.jfree.chart.annotations.AbstractAnnotation.clone()",1,1,16,26,1
"org.jfree.chart.annotations.AbstractAnnotation.fireAnnotationChanged()",1,2,10,22,2
"org.jfree.chart.annotations.AbstractAnnotation.getNotify()",1,1,11,13,1
"org.jfree.chart.annotations.AbstractAnnotation.hasListener(EventListener)",1,1,16,33,1
"org.jfree.chart.annotations.AbstractAnnotation.notifyListeners(AnnotationChangeEvent)",1,3,18,118,3
"org.jfree.chart.annotations.AbstractAnnotation.readObject(ObjectInputStream)",1,1,13,24,1
"org.jfree.chart.annotations.AbstractAnnotation.removeChangeListener(AnnotationChangeListener)",1,1,12,19,1
"org.jfree.chart.annotations.AbstractAnnotation.setNotify(boolean)",1,2,14,28,2
"org.jfree.chart.annotations.AbstractAnnotation.writeObject(ObjectOutputStream)",1,1,10,11,1
"org.jfree.chart.annotations.AbstractXYAnnotation.AbstractXYAnnotation()",1,1,8,25,1
"org.jfree.chart.annotations.AbstractXYAnnotation.addEntity(PlotRenderingInfo,Shape,int,String,String)",3,1,24,100,3
"org.jfree.chart.annotations.AbstractXYAnnotation.equals(Object)",5,1,24,143,5
"org.jfree.chart.annotations.AbstractXYAnnotation.getToolTipText()",1,1,12,8,1
"org.jfree.chart.annotations.AbstractXYAnnotation.getURL()",1,1,11,8,1
"org.jfree.chart.annotations.AbstractXYAnnotation.hashCode()",1,3,16,125,3
"org.jfree.chart.annotations.AbstractXYAnnotation.setToolTipText(String)",1,1,10,11,1
"org.jfree.chart.annotations.AbstractXYAnnotation.setURL(String)",1,1,10,11,1
"org.jfree.chart.annotations.CategoryLineAnnotation.CategoryLineAnnotation(Comparable,double,Comparable,double,Paint,Stroke)",1,1,26,156,1
"org.jfree.chart.annotations.CategoryLineAnnotation.clone()",1,1,12,11,1
"org.jfree.chart.annotations.CategoryLineAnnotation.draw(Graphics2D,CategoryPlot,Rectangle2D,CategoryAxis,ValueAxis)",1,3,49,677,3
"org.jfree.chart.annotations.CategoryLineAnnotation.equals(Object)",9,1,36,331,9
"org.jfree.chart.annotations.CategoryLineAnnotation.getCategory1()",1,1,10,8,1
"org.jfree.chart.annotations.CategoryLineAnnotation.getCategory2()",1,1,10,8,1
"org.jfree.chart.annotations.CategoryLineAnnotation.getPaint()",1,1,10,8,1
"org.jfree.chart.annotations.CategoryLineAnnotation.getStroke()",1,1,10,8,1
"org.jfree.chart.annotations.CategoryLineAnnotation.getValue1()",1,1,10,13,1
"org.jfree.chart.annotations.CategoryLineAnnotation.getValue2()",1,1,10,13,1
"org.jfree.chart.annotations.CategoryLineAnnotation.hashCode()",1,1,18,307,1
"org.jfree.chart.annotations.CategoryLineAnnotation.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.annotations.CategoryLineAnnotation.setCategory1(Comparable)",1,1,13,26,1
"org.jfree.chart.annotations.CategoryLineAnnotation.setCategory2(Comparable)",1,1,13,26,1
"org.jfree.chart.annotations.CategoryLineAnnotation.setPaint(Paint)",1,1,13,26,1
"org.jfree.chart.annotations.CategoryLineAnnotation.setStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.annotations.CategoryLineAnnotation.setValue1(double)",1,1,12,19,1
"org.jfree.chart.annotations.CategoryLineAnnotation.setValue2(double)",1,1,12,19,1
"org.jfree.chart.annotations.CategoryLineAnnotation.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.annotations.CategoryLineAnnotationTest.testCloning()",1,1,12,112,1
"org.jfree.chart.annotations.CategoryLineAnnotationTest.testEquals()",1,1,44,538,1
"org.jfree.chart.annotations.CategoryLineAnnotationTest.testHashcode()",1,1,14,129,1
"org.jfree.chart.annotations.CategoryLineAnnotationTest.testPublicCloneable()",1,1,10,46,1
"org.jfree.chart.annotations.CategoryLineAnnotationTest.testSerialization()",1,1,10,55,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.CategoryPointerAnnotation(String,Comparable,double,double)",1,1,20,153,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.clone()",1,1,11,11,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.draw(Graphics2D,CategoryPlot,Rectangle2D,CategoryAxis,ValueAxis)",1,1,63,"1,437",2
"org.jfree.chart.annotations.CategoryPointerAnnotation.equals(Object)",12,1,45,453,12
"org.jfree.chart.annotations.CategoryPointerAnnotation.getAngle()",1,1,10,13,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.getArrowLength()",1,1,10,13,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.getArrowPaint()",1,1,10,8,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.getArrowStroke()",1,1,10,8,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.getArrowWidth()",1,1,10,13,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.getBaseRadius()",1,1,10,13,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.getLabelOffset()",1,1,10,13,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.getTipRadius()",1,1,10,13,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.hashCode()",1,1,24,520,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.setAngle(double)",1,1,12,19,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.setArrowLength(double)",1,1,12,19,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.setArrowPaint(Paint)",1,1,13,26,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.setArrowStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.setArrowWidth(double)",1,1,12,19,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.setBaseRadius(double)",1,1,12,19,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.setLabelOffset(double)",1,1,13,19,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.setTipRadius(double)",1,1,12,19,1
"org.jfree.chart.annotations.CategoryPointerAnnotation.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.annotations.CategoryPointerAnnotationTest.testCloning()",1,1,12,96,1
"org.jfree.chart.annotations.CategoryPointerAnnotationTest.testEquals()",1,1,64,925,1
"org.jfree.chart.annotations.CategoryPointerAnnotationTest.testHashCode()",1,1,14,100,1
"org.jfree.chart.annotations.CategoryPointerAnnotationTest.testPublicCloneable()",1,1,9,33,1
"org.jfree.chart.annotations.CategoryPointerAnnotationTest.testSerialization()",1,1,11,41,1
"org.jfree.chart.annotations.CategoryTextAnnotation.CategoryTextAnnotation(String,Comparable,double)",1,1,15,64,1
"org.jfree.chart.annotations.CategoryTextAnnotation.clone()",1,1,12,11,1
"org.jfree.chart.annotations.CategoryTextAnnotation.draw(Graphics2D,CategoryPlot,Rectangle2D,CategoryAxis,ValueAxis)",1,3,41,469,3
"org.jfree.chart.annotations.CategoryTextAnnotation.equals(Object)",7,1,30,226,7
"org.jfree.chart.annotations.CategoryTextAnnotation.getCategory()",1,1,10,8,1
"org.jfree.chart.annotations.CategoryTextAnnotation.getCategoryAnchor()",1,1,10,8,1
"org.jfree.chart.annotations.CategoryTextAnnotation.getValue()",1,1,10,13,1
"org.jfree.chart.annotations.CategoryTextAnnotation.hashCode()",1,1,14,166,1
"org.jfree.chart.annotations.CategoryTextAnnotation.setCategory(Comparable)",1,1,13,26,1
"org.jfree.chart.annotations.CategoryTextAnnotation.setCategoryAnchor(CategoryAnchor)",1,1,13,26,1
"org.jfree.chart.annotations.CategoryTextAnnotation.setValue(double)",1,1,12,19,1
"org.jfree.chart.annotations.CategoryTextAnnotationTest.testCloning()",1,1,12,89,1
"org.jfree.chart.annotations.CategoryTextAnnotationTest.testEquals()",1,1,26,228,1
"org.jfree.chart.annotations.CategoryTextAnnotationTest.testHashcode()",1,1,14,89,1
"org.jfree.chart.annotations.CategoryTextAnnotationTest.testPublicCloneable()",1,1,9,28,1
"org.jfree.chart.annotations.CategoryTextAnnotationTest.testSerialization()",1,1,10,36,1
"org.jfree.chart.annotations.TextAnnotation.TextAnnotation(String)",1,1,15,100,1
"org.jfree.chart.annotations.TextAnnotation.equals(Object)",9,1,39,332,9
"org.jfree.chart.annotations.TextAnnotation.getFont()",1,1,10,8,1
"org.jfree.chart.annotations.TextAnnotation.getPaint()",1,1,10,8,1
"org.jfree.chart.annotations.TextAnnotation.getRotationAnchor()",1,1,10,8,1
"org.jfree.chart.annotations.TextAnnotation.getRotationAngle()",1,1,10,13,1
"org.jfree.chart.annotations.TextAnnotation.getText()",1,1,10,8,1
"org.jfree.chart.annotations.TextAnnotation.getTextAnchor()",1,1,10,8,1
"org.jfree.chart.annotations.TextAnnotation.hashCode()",1,1,17,283,1
"org.jfree.chart.annotations.TextAnnotation.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.annotations.TextAnnotation.setFont(Font)",1,1,13,26,1
"org.jfree.chart.annotations.TextAnnotation.setPaint(Paint)",1,1,13,26,1
"org.jfree.chart.annotations.TextAnnotation.setRotationAnchor(TextAnchor)",1,1,13,26,1
"org.jfree.chart.annotations.TextAnnotation.setRotationAngle(double)",1,1,12,19,1
"org.jfree.chart.annotations.TextAnnotation.setText(String)",1,1,13,26,1
"org.jfree.chart.annotations.TextAnnotation.setTextAnchor(TextAnchor)",1,1,14,26,1
"org.jfree.chart.annotations.TextAnnotation.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.annotations.TextAnnotationTest.annotationChanged(AnnotationChangeEvent)",1,1,9,11,1
"org.jfree.chart.annotations.TextAnnotationTest.testChangeEvents()",1,1,29,348,1
"org.jfree.chart.annotations.TextAnnotationTest.testEquals()",1,1,41,563,1
"org.jfree.chart.annotations.TextAnnotationTest.testHashCode()",1,1,12,89,1
"org.jfree.chart.annotations.TextAnnotationTest.testSetRotationAnchor()",1,1,13,48,2
"org.jfree.chart.annotations.XYBoxAnnotation.XYBoxAnnotation(double,double,double,double)",1,1,12,48,1
"org.jfree.chart.annotations.XYBoxAnnotation.XYBoxAnnotation(double,double,double,double,Stroke,Paint)",1,1,15,48,1
"org.jfree.chart.annotations.XYBoxAnnotation.XYBoxAnnotation(double,double,double,double,Stroke,Paint,Paint)",1,1,23,118,1
"org.jfree.chart.annotations.XYBoxAnnotation.clone()",1,1,12,11,1
"org.jfree.chart.annotations.XYBoxAnnotation.draw(Graphics2D,XYPlot,Rectangle2D,ValueAxis,ValueAxis,int,PlotRenderingInfo)",1,3,47,620,6
"org.jfree.chart.annotations.XYBoxAnnotation.equals(Object)",11,1,44,426,11
"org.jfree.chart.annotations.XYBoxAnnotation.hashCode()",1,1,19,258,1
"org.jfree.chart.annotations.XYBoxAnnotation.readObject(ObjectInputStream)",1,1,15,58,1
"org.jfree.chart.annotations.XYBoxAnnotation.writeObject(ObjectOutputStream)",1,1,13,58,1
"org.jfree.chart.annotations.XYBoxAnnotationTest.testCloning()",1,1,12,118,1
"org.jfree.chart.annotations.XYBoxAnnotationTest.testDrawWithNullInfo()",1,2,33,412,2
"org.jfree.chart.annotations.XYBoxAnnotationTest.testEquals()",1,1,48,824,1
"org.jfree.chart.annotations.XYBoxAnnotationTest.testHashCode()",1,1,14,140,1
"org.jfree.chart.annotations.XYBoxAnnotationTest.testPublicCloneable()",1,1,9,51,1
"org.jfree.chart.annotations.XYBoxAnnotationTest.testSerialization()",1,1,10,60,1
"org.jfree.chart.annotations.XYDataImageAnnotation.XYDataImageAnnotation(Image,double,double,double,double)",1,1,13,43,1
"org.jfree.chart.annotations.XYDataImageAnnotation.XYDataImageAnnotation(Image,double,double,double,double,boolean)",1,1,24,125,1
"org.jfree.chart.annotations.XYDataImageAnnotation.clone()",1,1,11,11,1
"org.jfree.chart.annotations.XYDataImageAnnotation.draw(Graphics2D,XYPlot,Rectangle2D,ValueAxis,ValueAxis,int,PlotRenderingInfo)",1,2,58,754,5
"org.jfree.chart.annotations.XYDataImageAnnotation.equals(Object)",10,1,41,350,10
"org.jfree.chart.annotations.XYDataImageAnnotation.getHeight()",1,1,9,11,1
"org.jfree.chart.annotations.XYDataImageAnnotation.getImage()",1,1,8,8,1
"org.jfree.chart.annotations.XYDataImageAnnotation.getIncludeInDataBounds()",1,1,12,11,1
"org.jfree.chart.annotations.XYDataImageAnnotation.getWidth()",1,1,9,11,1
"org.jfree.chart.annotations.XYDataImageAnnotation.getX()",1,1,8,11,1
"org.jfree.chart.annotations.XYDataImageAnnotation.getXRange()",1,1,11,28,1
"org.jfree.chart.annotations.XYDataImageAnnotation.getY()",1,1,8,11,1
"org.jfree.chart.annotations.XYDataImageAnnotation.getYRange()",1,1,11,28,1
"org.jfree.chart.annotations.XYDataImageAnnotation.hashCode()",1,1,9,15,1
"org.jfree.chart.annotations.XYDataImageAnnotation.readObject(ObjectInputStream)",1,1,14,11,1
"org.jfree.chart.annotations.XYDataImageAnnotation.writeObject(ObjectOutputStream)",1,1,12,11,1
"org.jfree.chart.annotations.XYDrawableAnnotation.XYDrawableAnnotation(double,double,double,double,Drawable)",1,1,13,43,1
"org.jfree.chart.annotations.XYDrawableAnnotation.XYDrawableAnnotation(double,double,double,double,double,Drawable)",1,1,26,123,1
"org.jfree.chart.annotations.XYDrawableAnnotation.clone()",1,1,11,11,1
"org.jfree.chart.annotations.XYDrawableAnnotation.draw(Graphics2D,XYPlot,Rectangle2D,ValueAxis,ValueAxis,int,PlotRenderingInfo)",1,2,48,658,3
"org.jfree.chart.annotations.XYDrawableAnnotation.equals(Object)",10,1,41,350,10
"org.jfree.chart.annotations.XYDrawableAnnotation.hashCode()",1,1,19,258,1
"org.jfree.chart.annotations.XYDrawableAnnotationTest.TestDrawable.TestDrawable()",1,1,5,0,1
"org.jfree.chart.annotations.XYDrawableAnnotationTest.TestDrawable.clone()",1,1,11,11,1
"org.jfree.chart.annotations.XYDrawableAnnotationTest.TestDrawable.draw(Graphics2D,Rectangle2D)",1,1,9,2,1
"org.jfree.chart.annotations.XYDrawableAnnotationTest.TestDrawable.equals(Object)",3,1,15,55,3
"org.jfree.chart.annotations.XYDrawableAnnotationTest.testCloning()",1,1,12,100,1
"org.jfree.chart.annotations.XYDrawableAnnotationTest.testEquals()",1,1,41,531,1
"org.jfree.chart.annotations.XYDrawableAnnotationTest.testHashCode()",1,1,14,108,1
"org.jfree.chart.annotations.XYDrawableAnnotationTest.testPublicCloneable()",1,1,9,36,1
"org.jfree.chart.annotations.XYDrawableAnnotationTest.testSerialization()",1,1,10,44,1
"org.jfree.chart.annotations.XYImageAnnotation.XYImageAnnotation(double,double,Image)",1,1,11,26,1
"org.jfree.chart.annotations.XYImageAnnotation.XYImageAnnotation(double,double,Image,RectangleAnchor)",1,1,21,92,1
"org.jfree.chart.annotations.XYImageAnnotation.clone()",1,1,11,11,1
"org.jfree.chart.annotations.XYImageAnnotation.draw(Graphics2D,XYPlot,Rectangle2D,ValueAxis,ValueAxis,int,PlotRenderingInfo)",1,2,54,656,5
"org.jfree.chart.annotations.XYImageAnnotation.equals(Object)",8,1,35,269,8
"org.jfree.chart.annotations.XYImageAnnotation.getImage()",1,1,10,8,1
"org.jfree.chart.annotations.XYImageAnnotation.getImageAnchor()",1,1,10,8,1
"org.jfree.chart.annotations.XYImageAnnotation.getX()",1,1,10,11,1
"org.jfree.chart.annotations.XYImageAnnotation.getY()",1,1,10,11,1
"org.jfree.chart.annotations.XYImageAnnotation.hashCode()",1,1,9,15,1
"org.jfree.chart.annotations.XYImageAnnotation.readObject(ObjectInputStream)",1,1,13,11,1
"org.jfree.chart.annotations.XYImageAnnotation.writeObject(ObjectOutputStream)",1,1,11,11,1
"org.jfree.chart.annotations.XYLineAnnotation.XYLineAnnotation(double,double,double,double)",1,1,13,48,1
"org.jfree.chart.annotations.XYLineAnnotation.XYLineAnnotation(double,double,double,double,Stroke,Paint)",1,1,24,133,1
"org.jfree.chart.annotations.XYLineAnnotation.clone()",1,1,11,11,1
"org.jfree.chart.annotations.XYLineAnnotation.draw(Graphics2D,XYPlot,Rectangle2D,ValueAxis,ValueAxis,int,PlotRenderingInfo)",1,5,63,774,6
"org.jfree.chart.annotations.XYLineAnnotation.equals(Object)",10,1,40,359,10
"org.jfree.chart.annotations.XYLineAnnotation.hashCode()",1,1,19,258,1
"org.jfree.chart.annotations.XYLineAnnotation.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.annotations.XYLineAnnotation.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.annotations.XYLineAnnotationTest.testCloning()",1,1,13,118,1
"org.jfree.chart.annotations.XYLineAnnotationTest.testEquals()",1,1,42,894,1
"org.jfree.chart.annotations.XYLineAnnotationTest.testHashCode()",1,1,15,131,1
"org.jfree.chart.annotations.XYLineAnnotationTest.testPublicCloneable()",1,1,10,51,1
"org.jfree.chart.annotations.XYLineAnnotationTest.testSerialization()",1,1,11,60,1
"org.jfree.chart.annotations.XYPointerAnnotation.XYPointerAnnotation(String,double,double,double)",1,1,19,157,1
"org.jfree.chart.annotations.XYPointerAnnotation.clone()",1,1,11,11,1
"org.jfree.chart.annotations.XYPointerAnnotation.draw(Graphics2D,XYPlot,Rectangle2D,ValueAxis,ValueAxis,int,PlotRenderingInfo)",1,4,79,"1,739",6
"org.jfree.chart.annotations.XYPointerAnnotation.equals(Object)",11,1,42,428,11
"org.jfree.chart.annotations.XYPointerAnnotation.getAngle()",1,1,10,13,1
"org.jfree.chart.annotations.XYPointerAnnotation.getArrowLength()",1,1,10,13,1
"org.jfree.chart.annotations.XYPointerAnnotation.getArrowPaint()",1,1,10,8,1
"org.jfree.chart.annotations.XYPointerAnnotation.getArrowStroke()",1,1,10,8,1
"org.jfree.chart.annotations.XYPointerAnnotation.getArrowWidth()",1,1,10,13,1
"org.jfree.chart.annotations.XYPointerAnnotation.getBaseRadius()",1,1,10,13,1
"org.jfree.chart.annotations.XYPointerAnnotation.getLabelOffset()",1,1,10,13,1
"org.jfree.chart.annotations.XYPointerAnnotation.getTipRadius()",1,1,10,13,1
"org.jfree.chart.annotations.XYPointerAnnotation.hashCode()",1,1,24,531,1
"org.jfree.chart.annotations.XYPointerAnnotation.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.annotations.XYPointerAnnotation.setAngle(double)",1,1,12,19,1
"org.jfree.chart.annotations.XYPointerAnnotation.setArrowLength(double)",1,1,12,19,1
"org.jfree.chart.annotations.XYPointerAnnotation.setArrowPaint(Paint)",1,1,13,26,1
"org.jfree.chart.annotations.XYPointerAnnotation.setArrowStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.annotations.XYPointerAnnotation.setArrowWidth(double)",1,1,12,19,1
"org.jfree.chart.annotations.XYPointerAnnotation.setBaseRadius(double)",1,1,12,19,1
"org.jfree.chart.annotations.XYPointerAnnotation.setLabelOffset(double)",1,1,13,19,1
"org.jfree.chart.annotations.XYPointerAnnotation.setTipRadius(double)",1,1,12,19,1
"org.jfree.chart.annotations.XYPointerAnnotation.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.annotations.XYPointerAnnotationTest.testCloning()",1,1,12,100,1
"org.jfree.chart.annotations.XYPointerAnnotationTest.testEquals()",1,1,64,918,1
"org.jfree.chart.annotations.XYPointerAnnotationTest.testHashCode()",1,1,14,100,1
"org.jfree.chart.annotations.XYPointerAnnotationTest.testPublicCloneable()",1,1,9,33,1
"org.jfree.chart.annotations.XYPointerAnnotationTest.testSerialization()",1,1,10,41,1
"org.jfree.chart.annotations.XYPolygonAnnotation.XYPolygonAnnotation(double[])",1,1,12,24,1
"org.jfree.chart.annotations.XYPolygonAnnotation.XYPolygonAnnotation(double[],Stroke,Paint)",1,1,16,24,1
"org.jfree.chart.annotations.XYPolygonAnnotation.XYPolygonAnnotation(double[],Stroke,Paint,Paint)",2,1,26,150,2
"org.jfree.chart.annotations.XYPolygonAnnotation.clone()",1,1,12,11,1
"org.jfree.chart.annotations.XYPolygonAnnotation.draw(Graphics2D,XYPlot,Rectangle2D,ValueAxis,ValueAxis,int,PlotRenderingInfo)",2,7,63,989,9
"org.jfree.chart.annotations.XYPolygonAnnotation.equals(Object)",8,1,35,278,8
"org.jfree.chart.annotations.XYPolygonAnnotation.getFillPaint()",1,1,10,8,1
"org.jfree.chart.annotations.XYPolygonAnnotation.getOutlinePaint()",1,1,10,8,1
"org.jfree.chart.annotations.XYPolygonAnnotation.getOutlineStroke()",1,1,10,8,1
"org.jfree.chart.annotations.XYPolygonAnnotation.getPolygonCoordinates()",1,1,12,18,1
"org.jfree.chart.annotations.XYPolygonAnnotation.hashCode()",1,2,18,182,2
"org.jfree.chart.annotations.XYPolygonAnnotation.readObject(ObjectInputStream)",1,1,15,58,1
"org.jfree.chart.annotations.XYPolygonAnnotation.writeObject(ObjectOutputStream)",1,1,13,58,1
"org.jfree.chart.annotations.XYPolygonAnnotationTest.testCloning()",1,1,13,149,1
"org.jfree.chart.annotations.XYPolygonAnnotationTest.testEquals()",1,1,46,"1,010",1
"org.jfree.chart.annotations.XYPolygonAnnotationTest.testHashCode()",1,1,15,185,1
"org.jfree.chart.annotations.XYPolygonAnnotationTest.testPublicCloneable()",1,1,10,77,1
"org.jfree.chart.annotations.XYPolygonAnnotationTest.testSerialization()",1,1,11,87,1
"org.jfree.chart.annotations.XYShapeAnnotation.XYShapeAnnotation(Shape)",1,1,10,19,1
"org.jfree.chart.annotations.XYShapeAnnotation.XYShapeAnnotation(Shape,Stroke,Paint)",1,1,11,19,1
"org.jfree.chart.annotations.XYShapeAnnotation.XYShapeAnnotation(Shape,Stroke,Paint,Paint)",1,1,18,68,1
"org.jfree.chart.annotations.XYShapeAnnotation.clone()",1,1,11,11,1
"org.jfree.chart.annotations.XYShapeAnnotation.draw(Graphics2D,XYPlot,Rectangle2D,ValueAxis,ValueAxis,int,PlotRenderingInfo)",1,5,62,"1,005",6
"org.jfree.chart.annotations.XYShapeAnnotation.equals(Object)",8,1,35,278,8
"org.jfree.chart.annotations.XYShapeAnnotation.hashCode()",1,2,17,179,2
"org.jfree.chart.annotations.XYShapeAnnotation.readObject(ObjectInputStream)",1,1,16,77,1
"org.jfree.chart.annotations.XYShapeAnnotation.writeObject(ObjectOutputStream)",1,1,14,77,1
"org.jfree.chart.annotations.XYShapeAnnotationTest.testCloning()",1,1,13,123,1
"org.jfree.chart.annotations.XYShapeAnnotationTest.testEquals()",1,1,58,873,1
"org.jfree.chart.annotations.XYShapeAnnotationTest.testHashCode()",1,1,16,148,1
"org.jfree.chart.annotations.XYShapeAnnotationTest.testPublicCloneable()",1,1,10,55,1
"org.jfree.chart.annotations.XYShapeAnnotationTest.testSerialization()",1,1,11,64,1
"org.jfree.chart.annotations.XYTextAnnotation.XYTextAnnotation(String,double,double)",1,1,26,225,1
"org.jfree.chart.annotations.XYTextAnnotation.clone()",1,1,11,11,1
"org.jfree.chart.annotations.XYTextAnnotation.draw(Graphics2D,XYPlot,Rectangle2D,ValueAxis,ValueAxis,int,PlotRenderingInfo)",1,4,52,595,6
"org.jfree.chart.annotations.XYTextAnnotation.equals(Object)",15,1,54,671,15
"org.jfree.chart.annotations.XYTextAnnotation.getBackgroundPaint()",1,1,12,8,1
"org.jfree.chart.annotations.XYTextAnnotation.getFont()",1,1,10,8,1
"org.jfree.chart.annotations.XYTextAnnotation.getOutlinePaint()",1,1,12,8,1
"org.jfree.chart.annotations.XYTextAnnotation.getOutlineStroke()",1,1,12,8,1
"org.jfree.chart.annotations.XYTextAnnotation.getPaint()",1,1,10,8,1
"org.jfree.chart.annotations.XYTextAnnotation.getRotationAnchor()",1,1,10,8,1
"org.jfree.chart.annotations.XYTextAnnotation.getRotationAngle()",1,1,10,13,1
"org.jfree.chart.annotations.XYTextAnnotation.getText()",1,1,10,8,1
"org.jfree.chart.annotations.XYTextAnnotation.getTextAnchor()",1,1,10,8,1
"org.jfree.chart.annotations.XYTextAnnotation.getX()",1,1,11,13,1
"org.jfree.chart.annotations.XYTextAnnotation.getY()",1,1,11,13,1
"org.jfree.chart.annotations.XYTextAnnotation.hashCode()",1,1,21,432,1
"org.jfree.chart.annotations.XYTextAnnotation.isOutlineVisible()",1,1,10,11,1
"org.jfree.chart.annotations.XYTextAnnotation.readObject(ObjectInputStream)",1,1,16,75,1
"org.jfree.chart.annotations.XYTextAnnotation.setBackgroundPaint(Paint)",1,1,14,15,1
"org.jfree.chart.annotations.XYTextAnnotation.setFont(Font)",1,1,13,26,1
"org.jfree.chart.annotations.XYTextAnnotation.setOutlinePaint(Paint)",1,1,15,26,1
"org.jfree.chart.annotations.XYTextAnnotation.setOutlineStroke(Stroke)",1,1,15,26,1
"org.jfree.chart.annotations.XYTextAnnotation.setOutlineVisible(boolean)",1,1,12,19,1
"org.jfree.chart.annotations.XYTextAnnotation.setPaint(Paint)",1,1,13,26,1
"org.jfree.chart.annotations.XYTextAnnotation.setRotationAnchor(TextAnchor)",1,1,13,26,1
"org.jfree.chart.annotations.XYTextAnnotation.setRotationAngle(double)",1,1,12,19,1
"org.jfree.chart.annotations.XYTextAnnotation.setText(String)",1,1,12,26,1
"org.jfree.chart.annotations.XYTextAnnotation.setTextAnchor(TextAnchor)",1,1,14,26,1
"org.jfree.chart.annotations.XYTextAnnotation.setX(double)",1,1,13,19,1
"org.jfree.chart.annotations.XYTextAnnotation.setY(double)",1,1,13,19,1
"org.jfree.chart.annotations.XYTextAnnotation.writeObject(ObjectOutputStream)",1,1,14,75,1
"org.jfree.chart.annotations.XYTextAnnotationTest.testCloning()",1,1,11,89,1
"org.jfree.chart.annotations.XYTextAnnotationTest.testEquals()",1,1,69,"1,157",1
"org.jfree.chart.annotations.XYTextAnnotationTest.testHashCode()",1,1,12,89,1
"org.jfree.chart.annotations.XYTextAnnotationTest.testPublicCloneable()",1,1,8,28,1
"org.jfree.chart.annotations.XYTextAnnotationTest.testSerialization()",1,1,11,81,1
"org.jfree.chart.annotations.XYTitleAnnotation.XYTitleAnnotation(double,double,Title)",1,1,11,26,1
"org.jfree.chart.annotations.XYTitleAnnotation.XYTitleAnnotation(double,double,Title,RectangleAnchor)",1,1,22,140,1
"org.jfree.chart.annotations.XYTitleAnnotation.clone()",1,1,11,11,1
"org.jfree.chart.annotations.XYTitleAnnotation.draw(Graphics2D,XYPlot,Rectangle2D,ValueAxis,ValueAxis,int,PlotRenderingInfo)",1,7,95,"1,535",14
"org.jfree.chart.annotations.XYTitleAnnotation.equals(Object)",10,1,39,381,10
"org.jfree.chart.annotations.XYTitleAnnotation.getCoordinateType()",1,1,8,8,1
"org.jfree.chart.annotations.XYTitleAnnotation.getMaxHeight()",1,1,8,11,1
"org.jfree.chart.annotations.XYTitleAnnotation.getMaxWidth()",1,1,8,11,1
"org.jfree.chart.annotations.XYTitleAnnotation.getTitle()",1,1,8,8,1
"org.jfree.chart.annotations.XYTitleAnnotation.getTitleAnchor()",1,1,8,8,1
"org.jfree.chart.annotations.XYTitleAnnotation.getX()",1,1,8,11,1
"org.jfree.chart.annotations.XYTitleAnnotation.getY()",1,1,8,11,1
"org.jfree.chart.annotations.XYTitleAnnotation.hashCode()",1,1,17,164,1
"org.jfree.chart.annotations.XYTitleAnnotation.setMaxHeight(double)",1,1,10,19,1
"org.jfree.chart.annotations.XYTitleAnnotation.setMaxWidth(double)",1,1,10,19,1
"org.jfree.chart.annotations.XYTitleAnnotationTest.testCloning()",1,1,12,100,1
"org.jfree.chart.annotations.XYTitleAnnotationTest.testDrawWithNullInfo()",1,2,33,379,2
"org.jfree.chart.annotations.XYTitleAnnotationTest.testEquals()",1,1,23,288,1
"org.jfree.chart.annotations.XYTitleAnnotationTest.testHashCode()",1,1,13,100,1
"org.jfree.chart.annotations.XYTitleAnnotationTest.testSerialization()",1,1,10,44,1
"org.jfree.chart.axis.Axis.Axis(String)",1,1,31,412,1
"org.jfree.chart.axis.Axis.addChangeListener(AxisChangeListener)",1,1,10,19,1
"org.jfree.chart.axis.Axis.clone()",1,1,16,39,1
"org.jfree.chart.axis.Axis.createAndAddEntity(double,AxisState,Rectangle2D,RectangleEdge,PlotRenderingInfo)",2,7,43,459,8
"org.jfree.chart.axis.Axis.createAttributedLabel(String)",2,1,18,72,2
"org.jfree.chart.axis.Axis.drawAttributedLabel(AttributedString,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState)",2,5,92,"1,521",6
"org.jfree.chart.axis.Axis.drawAxisLine(Graphics2D,double,Rectangle2D,RectangleEdge)",1,5,30,401,5
"org.jfree.chart.axis.Axis.drawLabel(String,Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState)",2,6,90,"1,545",7
"org.jfree.chart.axis.Axis.equals(Object)",27,1,94,"1,336",27
"org.jfree.chart.axis.Axis.fireChangeEvent()",1,1,8,11,1
"org.jfree.chart.axis.Axis.getAttributedLabel()",2,2,16,46,2
"org.jfree.chart.axis.Axis.getAxisLinePaint()",1,1,10,8,1
"org.jfree.chart.axis.Axis.getAxisLineStroke()",1,1,10,8,1
"org.jfree.chart.axis.Axis.getFixedDimension()",1,1,10,13,1
"org.jfree.chart.axis.Axis.getLabel()",1,1,12,8,1
"org.jfree.chart.axis.Axis.getLabelAngle()",1,1,10,13,1
"org.jfree.chart.axis.Axis.getLabelEnclosure(Graphics2D,RectangleEdge)",1,5,40,445,7
"org.jfree.chart.axis.Axis.getLabelFont()",1,1,10,8,1
"org.jfree.chart.axis.Axis.getLabelInsets()",1,1,11,8,1
"org.jfree.chart.axis.Axis.getLabelLocation()",1,1,11,8,1
"org.jfree.chart.axis.Axis.getLabelPaint()",1,1,10,8,1
"org.jfree.chart.axis.Axis.getMinorTickMarkInsideLength()",1,1,13,13,1
"org.jfree.chart.axis.Axis.getMinorTickMarkOutsideLength()",1,1,13,13,1
"org.jfree.chart.axis.Axis.getPlot()",1,1,11,8,1
"org.jfree.chart.axis.Axis.getTickLabelFont()",1,1,10,8,1
"org.jfree.chart.axis.Axis.getTickLabelInsets()",1,1,10,8,1
"org.jfree.chart.axis.Axis.getTickLabelPaint()",1,1,10,8,1
"org.jfree.chart.axis.Axis.getTickMarkInsideLength()",1,1,11,13,1
"org.jfree.chart.axis.Axis.getTickMarkOutsideLength()",1,1,11,13,1
"org.jfree.chart.axis.Axis.getTickMarkPaint()",1,1,10,8,1
"org.jfree.chart.axis.Axis.getTickMarkStroke()",1,1,10,8,1
"org.jfree.chart.axis.Axis.hasListener(EventListener)",1,1,13,33,1
"org.jfree.chart.axis.Axis.hashCode()",1,2,13,72,2
"org.jfree.chart.axis.Axis.isAxisLineVisible()",1,1,12,13,1
"org.jfree.chart.axis.Axis.isMinorTickMarksVisible()",1,1,14,13,1
"org.jfree.chart.axis.Axis.isTickLabelsVisible()",1,1,12,13,1
"org.jfree.chart.axis.Axis.isTickMarksVisible()",1,1,12,13,1
"org.jfree.chart.axis.Axis.isVisible()",1,1,11,13,1
"org.jfree.chart.axis.Axis.labelAnchorH(AxisLabelLocation)",4,1,12,93,4
"org.jfree.chart.axis.Axis.labelAnchorV(AxisLabelLocation)",4,1,12,93,4
"org.jfree.chart.axis.Axis.labelLocationX(AxisLabelLocation,Rectangle2D)",4,4,13,114,4
"org.jfree.chart.axis.Axis.labelLocationY(AxisLabelLocation,Rectangle2D)",4,4,13,114,4
"org.jfree.chart.axis.Axis.notifyListeners(AxisChangeEvent)",1,3,14,118,3
"org.jfree.chart.axis.Axis.readObject(ObjectInputStream)",1,1,20,150,1
"org.jfree.chart.axis.Axis.removeChangeListener(AxisChangeListener)",1,1,10,19,1
"org.jfree.chart.axis.Axis.setAttributedLabel(AttributedString)",1,2,16,57,2
"org.jfree.chart.axis.Axis.setAttributedLabel(String)",1,1,13,11,1
"org.jfree.chart.axis.Axis.setAxisLinePaint(Paint)",1,1,13,26,1
"org.jfree.chart.axis.Axis.setAxisLineStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.axis.Axis.setAxisLineVisible(boolean)",1,1,14,19,1
"org.jfree.chart.axis.Axis.setFixedDimension(double)",1,1,16,15,1
"org.jfree.chart.axis.Axis.setLabel(String)",1,1,14,15,1
"org.jfree.chart.axis.Axis.setLabelAngle(double)",1,1,12,19,1
"org.jfree.chart.axis.Axis.setLabelFont(Font)",1,2,15,51,2
"org.jfree.chart.axis.Axis.setLabelInsets(RectangleInsets)",1,1,11,11,1
"org.jfree.chart.axis.Axis.setLabelInsets(RectangleInsets,boolean)",1,3,18,66,3
"org.jfree.chart.axis.Axis.setLabelLocation(AxisLabelLocation)",1,1,13,26,1
"org.jfree.chart.axis.Axis.setLabelPaint(Paint)",1,1,13,26,1
"org.jfree.chart.axis.Axis.setMinorTickMarkInsideLength(float)",1,1,14,19,1
"org.jfree.chart.axis.Axis.setMinorTickMarkOutsideLength(float)",1,1,14,19,1
"org.jfree.chart.axis.Axis.setMinorTickMarksVisible(boolean)",1,2,17,38,2
"org.jfree.chart.axis.Axis.setPlot(Plot)",1,1,13,15,1
"org.jfree.chart.axis.Axis.setTickLabelFont(Font)",1,2,15,51,2
"org.jfree.chart.axis.Axis.setTickLabelInsets(RectangleInsets)",1,2,15,51,2
"org.jfree.chart.axis.Axis.setTickLabelPaint(Paint)",1,1,13,26,1
"org.jfree.chart.axis.Axis.setTickLabelsVisible(boolean)",1,2,17,38,2
"org.jfree.chart.axis.Axis.setTickMarkInsideLength(float)",1,1,12,19,1
"org.jfree.chart.axis.Axis.setTickMarkOutsideLength(float)",1,1,12,19,1
"org.jfree.chart.axis.Axis.setTickMarkPaint(Paint)",1,1,13,26,1
"org.jfree.chart.axis.Axis.setTickMarkStroke(Stroke)",1,2,15,51,2
"org.jfree.chart.axis.Axis.setTickMarksVisible(boolean)",1,2,14,38,2
"org.jfree.chart.axis.Axis.setVisible(boolean)",1,2,14,38,2
"org.jfree.chart.axis.Axis.writeObject(ObjectOutputStream)",1,1,17,132,1
"org.jfree.chart.axis.AxisCollection.AxisCollection()",1,1,9,36,1
"org.jfree.chart.axis.AxisCollection.add(Axis,RectangleEdge)",1,5,23,185,5
"org.jfree.chart.axis.AxisCollection.getAxesAtBottom()",1,1,9,8,1
"org.jfree.chart.axis.AxisCollection.getAxesAtLeft()",1,1,9,8,1
"org.jfree.chart.axis.AxisCollection.getAxesAtRight()",1,1,9,8,1
"org.jfree.chart.axis.AxisCollection.getAxesAtTop()",1,1,9,8,1
"org.jfree.chart.axis.AxisLocation.getOpposite()",1,1,10,8,1
"org.jfree.chart.axis.AxisLocation.getOpposite(AxisLocation)",5,1,27,162,5
"org.jfree.chart.axis.AxisLocationTest.testEquals()",1,1,11,39,1
"org.jfree.chart.axis.AxisLocationTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.axis.AxisLocationTest.testSerialization()",1,1,11,51,1
"org.jfree.chart.axis.AxisSpace.AxisSpace()",1,1,9,36,1
"org.jfree.chart.axis.AxisSpace.add(double,RectangleEdge)",5,1,24,182,5
"org.jfree.chart.axis.AxisSpace.clone()",1,1,12,11,1
"org.jfree.chart.axis.AxisSpace.ensureAtLeast(AxisSpace)",1,1,11,111,1
"org.jfree.chart.axis.AxisSpace.ensureAtLeast(double,RectangleEdge)",5,1,34,254,9
"org.jfree.chart.axis.AxisSpace.equals(Object)",7,1,30,215,7
"org.jfree.chart.axis.AxisSpace.expand(Rectangle2D,Rectangle2D)",1,1,20,140,2
"org.jfree.chart.axis.AxisSpace.getBottom()",1,1,8,11,1
"org.jfree.chart.axis.AxisSpace.getLeft()",1,1,8,11,1
"org.jfree.chart.axis.AxisSpace.getRight()",1,1,8,11,1
"org.jfree.chart.axis.AxisSpace.getTop()",1,1,8,11,1
"org.jfree.chart.axis.AxisSpace.hashCode()",1,1,18,280,1
"org.jfree.chart.axis.AxisSpace.reserved(Rectangle2D,RectangleEdge)",1,5,34,324,5
"org.jfree.chart.axis.AxisSpace.setBottom(double)",1,1,8,15,1
"org.jfree.chart.axis.AxisSpace.setLeft(double)",1,1,8,15,1
"org.jfree.chart.axis.AxisSpace.setRight(double)",1,1,8,15,1
"org.jfree.chart.axis.AxisSpace.setTop(double)",1,1,8,15,1
"org.jfree.chart.axis.AxisSpace.shrink(Rectangle2D,Rectangle2D)",1,1,20,140,2
"org.jfree.chart.axis.AxisSpace.toString()",1,1,10,64,1
"org.jfree.chart.axis.AxisSpaceTest.testCloning()",1,1,11,71,1
"org.jfree.chart.axis.AxisSpaceTest.testEquals()",1,1,25,257,1
"org.jfree.chart.axis.AxisSpaceTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.axis.AxisState.AxisState()",1,1,6,8,1
"org.jfree.chart.axis.AxisState.AxisState(double)",1,1,9,22,1
"org.jfree.chart.axis.AxisState.cursorDown(double)",1,1,8,25,1
"org.jfree.chart.axis.AxisState.cursorLeft(double)",1,1,8,25,1
"org.jfree.chart.axis.AxisState.cursorRight(double)",1,1,8,25,1
"org.jfree.chart.axis.AxisState.cursorUp(double)",1,1,8,25,1
"org.jfree.chart.axis.AxisState.getCursor()",1,1,8,11,1
"org.jfree.chart.axis.AxisState.getMax()",1,1,8,11,1
"org.jfree.chart.axis.AxisState.getTicks()",1,1,8,8,1
"org.jfree.chart.axis.AxisState.moveCursor(double,RectangleEdge)",1,5,20,120,5
"org.jfree.chart.axis.AxisState.setCursor(double)",1,1,8,15,1
"org.jfree.chart.axis.AxisState.setMax(double)",1,1,8,15,1
"org.jfree.chart.axis.AxisState.setTicks(List)",1,1,8,11,1
"org.jfree.chart.axis.AxisTest.testCloning()",1,1,12,79,1
"org.jfree.chart.axis.AxisTest.testEquals()",1,1,145,"2,442",1
"org.jfree.chart.axis.AxisTest.testHashCode()",1,1,12,64,1
"org.jfree.chart.axis.AxisTest.testSerialization()",1,1,13,80,1
"org.jfree.chart.axis.CategoryAnchorTest.testEquals()",1,1,11,57,1
"org.jfree.chart.axis.CategoryAnchorTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.axis.CategoryAnchorTest.testSerialization()",1,1,10,38,1
"org.jfree.chart.axis.CategoryAxis.CategoryAxis()",1,1,6,8,1
"org.jfree.chart.axis.CategoryAxis.CategoryAxis(String)",1,1,19,167,1
"org.jfree.chart.axis.CategoryAxis.addCategoryLabelToolTip(Comparable,String)",1,1,14,36,1
"org.jfree.chart.axis.CategoryAxis.addCategoryLabelURL(Comparable,String)",1,1,16,36,1
"org.jfree.chart.axis.CategoryAxis.calculateCategoryGapSize(int,Rectangle2D,RectangleEdge)",1,4,26,206,6
"org.jfree.chart.axis.CategoryAxis.calculateCategorySize(int,Rectangle2D,RectangleEdge)",1,4,31,252,6
"org.jfree.chart.axis.CategoryAxis.calculateTextBlockHeight(TextBlock,CategoryLabelPosition,Graphics2D)",1,1,21,132,1
"org.jfree.chart.axis.CategoryAxis.calculateTextBlockWidth(TextBlock,CategoryLabelPosition,Graphics2D)",1,1,21,132,1
"org.jfree.chart.axis.CategoryAxis.clearCategoryLabelToolTips()",1,1,11,15,1
"org.jfree.chart.axis.CategoryAxis.clearCategoryLabelURLs()",1,1,13,15,1
"org.jfree.chart.axis.CategoryAxis.clone()",1,1,17,101,1
"org.jfree.chart.axis.CategoryAxis.configure()",1,1,7,2,1
"org.jfree.chart.axis.CategoryAxis.createLabel(Comparable,float,RectangleEdge,Graphics2D)",1,1,17,60,1
"org.jfree.chart.axis.CategoryAxis.draw(Graphics2D,double,Rectangle2D,Rectangle2D,RectangleEdge,PlotRenderingInfo)",2,4,43,294,5
"org.jfree.chart.axis.CategoryAxis.drawCategoryLabels(Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)",2,13,110,"1,995",14
"org.jfree.chart.axis.CategoryAxis.drawTickMarks(Graphics2D,double,Rectangle2D,RectangleEdge,AxisState)",2,9,74,"1,196",10
"org.jfree.chart.axis.CategoryAxis.equalPaintMaps(Map,Map)",4,2,25,157,4
"org.jfree.chart.axis.CategoryAxis.equals(Object)",14,1,57,567,14
"org.jfree.chart.axis.CategoryAxis.getCategoryEnd(int,int,Rectangle2D,RectangleEdge)",1,1,18,65,1
"org.jfree.chart.axis.CategoryAxis.getCategoryJava2DCoordinate(CategoryAnchor,int,int,Rectangle2D,RectangleEdge)",1,4,26,172,4
"org.jfree.chart.axis.CategoryAxis.getCategoryLabelPositionOffset()",1,1,11,13,1
"org.jfree.chart.axis.CategoryAxis.getCategoryLabelPositions()",1,1,11,8,1
"org.jfree.chart.axis.CategoryAxis.getCategoryLabelToolTip(Comparable)",1,1,15,26,1
"org.jfree.chart.axis.CategoryAxis.getCategoryLabelURL(Comparable)",1,1,16,26,1
"org.jfree.chart.axis.CategoryAxis.getCategoryMargin()",1,1,10,13,1
"org.jfree.chart.axis.CategoryAxis.getCategoryMiddle(Comparable,List,Rectangle2D,RectangleEdge)",1,1,24,74,1
"org.jfree.chart.axis.CategoryAxis.getCategoryMiddle(int,int,Rectangle2D,RectangleEdge)",2,1,22,149,3
"org.jfree.chart.axis.CategoryAxis.getCategorySeriesMiddle(Comparable,Comparable,CategoryDataset,double,Rectangle2D,RectangleEdge)",2,1,35,356,2
"org.jfree.chart.axis.CategoryAxis.getCategorySeriesMiddle(int,int,int,int,double,Rectangle2D,RectangleEdge)",2,1,32,285,2
"org.jfree.chart.axis.CategoryAxis.getCategoryStart(int,int,Rectangle2D,RectangleEdge)",1,3,29,306,5
"org.jfree.chart.axis.CategoryAxis.getLowerMargin()",1,1,11,13,1
"org.jfree.chart.axis.CategoryAxis.getMaximumCategoryLabelLines()",1,1,10,13,1
"org.jfree.chart.axis.CategoryAxis.getMaximumCategoryLabelWidthRatio()",1,1,10,13,1
"org.jfree.chart.axis.CategoryAxis.getTickLabelFont(Comparable)",1,2,18,59,2
"org.jfree.chart.axis.CategoryAxis.getTickLabelPaint(Comparable)",1,2,18,59,2
"org.jfree.chart.axis.CategoryAxis.getUpperMargin()",1,1,11,13,1
"org.jfree.chart.axis.CategoryAxis.hashCode()",1,1,9,11,1
"org.jfree.chart.axis.CategoryAxis.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.axis.CategoryAxis.readPaintMap(ObjectInputStream)",2,2,28,142,3
"org.jfree.chart.axis.CategoryAxis.refreshTicks(Graphics2D,AxisState,Rectangle2D,RectangleEdge)",2,9,66,827,12
"org.jfree.chart.axis.CategoryAxis.removeCategoryLabelToolTip(Comparable)",1,2,16,46,2
"org.jfree.chart.axis.CategoryAxis.removeCategoryLabelURL(Comparable)",1,2,18,46,2
"org.jfree.chart.axis.CategoryAxis.reserveSpace(Graphics2D,Plot,Rectangle2D,RectangleEdge,AxisSpace)",2,8,58,477,10
"org.jfree.chart.axis.CategoryAxis.setCategoryLabelPositionOffset(int)",1,1,13,19,1
"org.jfree.chart.axis.CategoryAxis.setCategoryLabelPositions(CategoryLabelPositions)",1,1,13,26,1
"org.jfree.chart.axis.CategoryAxis.setCategoryMargin(double)",1,1,14,19,1
"org.jfree.chart.axis.CategoryAxis.setLowerMargin(double)",1,1,13,19,1
"org.jfree.chart.axis.CategoryAxis.setMaximumCategoryLabelLines(int)",1,1,12,19,1
"org.jfree.chart.axis.CategoryAxis.setMaximumCategoryLabelWidthRatio(float)",1,1,12,19,1
"org.jfree.chart.axis.CategoryAxis.setTickLabelFont(Comparable,Font)",1,2,19,78,2
"org.jfree.chart.axis.CategoryAxis.setTickLabelPaint(Comparable,Paint)",1,2,19,78,2
"org.jfree.chart.axis.CategoryAxis.setUpperMargin(double)",1,1,13,19,1
"org.jfree.chart.axis.CategoryAxis.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.axis.CategoryAxis.writePaintMap(Map,ObjectOutputStream)",1,3,29,175,3
"org.jfree.chart.axis.CategoryAxisTest.testCloning()",1,1,11,77,1
"org.jfree.chart.axis.CategoryAxisTest.testCloning2()",1,1,30,421,1
"org.jfree.chart.axis.CategoryAxisTest.testEquals()",1,1,66,984,1
"org.jfree.chart.axis.CategoryAxisTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.axis.CategoryAxisTest.testSerialization()",1,1,11,76,1
"org.jfree.chart.axis.CategoryLabelPosition.CategoryLabelPosition()",1,1,7,28,1
"org.jfree.chart.axis.CategoryLabelPosition.CategoryLabelPosition(RectangleAnchor,TextBlockAnchor)",1,1,13,28,1
"org.jfree.chart.axis.CategoryLabelPosition.CategoryLabelPosition(RectangleAnchor,TextBlockAnchor,CategoryLabelWidthType,float)",1,1,17,33,1
"org.jfree.chart.axis.CategoryLabelPosition.CategoryLabelPosition(RectangleAnchor,TextBlockAnchor,TextAnchor,double,CategoryLabelWidthType,float)",1,1,30,144,1
"org.jfree.chart.axis.CategoryLabelPosition.equals(Object)",9,1,36,323,9
"org.jfree.chart.axis.CategoryLabelPosition.getAngle()",1,1,8,11,1
"org.jfree.chart.axis.CategoryLabelPosition.getCategoryAnchor()",1,1,8,8,1
"org.jfree.chart.axis.CategoryLabelPosition.getLabelAnchor()",1,1,8,8,1
"org.jfree.chart.axis.CategoryLabelPosition.getRotationAnchor()",1,1,8,8,1
"org.jfree.chart.axis.CategoryLabelPosition.getWidthRatio()",1,1,8,11,1
"org.jfree.chart.axis.CategoryLabelPosition.getWidthType()",1,1,8,8,1
"org.jfree.chart.axis.CategoryLabelPosition.hashCode()",1,1,13,114,1
"org.jfree.chart.axis.CategoryLabelPositionTest.testEquals()",1,1,64,874,1
"org.jfree.chart.axis.CategoryLabelPositionTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.axis.CategoryLabelPositionTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.axis.CategoryLabelPositions.CategoryLabelPositions()",1,1,9,36,1
"org.jfree.chart.axis.CategoryLabelPositions.CategoryLabelPositions(CategoryLabelPosition,CategoryLabelPosition,CategoryLabelPosition,CategoryLabelPosition)",1,1,24,97,1
"org.jfree.chart.axis.CategoryLabelPositions.createDownRotationLabelPositions(double)",1,1,29,142,1
"org.jfree.chart.axis.CategoryLabelPositions.createUpRotationLabelPositions(double)",1,1,29,162,1
"org.jfree.chart.axis.CategoryLabelPositions.equals(Object)",7,1,32,232,7
"org.jfree.chart.axis.CategoryLabelPositions.getLabelPosition(RectangleEdge)",1,1,24,143,5
"org.jfree.chart.axis.CategoryLabelPositions.hashCode()",1,1,14,144,1
"org.jfree.chart.axis.CategoryLabelPositions.replaceBottomPosition(CategoryLabelPositions,CategoryLabelPosition)",1,1,19,74,1
"org.jfree.chart.axis.CategoryLabelPositions.replaceLeftPosition(CategoryLabelPositions,CategoryLabelPosition)",1,1,19,74,1
"org.jfree.chart.axis.CategoryLabelPositions.replaceRightPosition(CategoryLabelPositions,CategoryLabelPosition)",1,1,19,74,1
"org.jfree.chart.axis.CategoryLabelPositions.replaceTopPosition(CategoryLabelPositions,CategoryLabelPosition)",1,1,18,74,1
"org.jfree.chart.axis.CategoryLabelPositionsTest.testEquals()",1,1,84,662,1
"org.jfree.chart.axis.CategoryLabelPositionsTest.testHashCode()",1,1,20,156,1
"org.jfree.chart.axis.CategoryLabelPositionsTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.axis.CategoryLabelWidthTypeTest.testEquals()",1,1,10,18,1
"org.jfree.chart.axis.CategoryLabelWidthTypeTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.axis.CategoryLabelWidthTypeTest.testSerialization()",1,1,10,38,1
"org.jfree.chart.axis.CategoryTick.CategoryTick(Comparable,TextBlock,TextBlockAnchor,TextAnchor,double)",1,1,19,66,1
"org.jfree.chart.axis.CategoryTick.equals(Object)",6,3,27,209,7
"org.jfree.chart.axis.CategoryTick.getCategory()",1,1,8,8,1
"org.jfree.chart.axis.CategoryTick.getLabel()",1,1,8,8,1
"org.jfree.chart.axis.CategoryTick.getLabelAnchor()",1,1,8,8,1
"org.jfree.chart.axis.CategoryTick.hashCode()",1,1,13,117,1
"org.jfree.chart.axis.CategoryTickTest.testCloning()",1,1,12,100,1
"org.jfree.chart.axis.CategoryTickTest.testEquals()",1,1,39,684,1
"org.jfree.chart.axis.CategoryTickTest.testHashCode()",1,1,18,176,1
"org.jfree.chart.axis.CategoryTickTest.testSerialization()",1,1,10,44,1
"org.jfree.chart.axis.CompassFormat.CompassFormat()",1,1,6,19,1
"org.jfree.chart.axis.CompassFormat.CompassFormat(String,String,String,String)",1,1,17,139,1
"org.jfree.chart.axis.CompassFormat.CompassFormat(String[])",2,1,17,72,2
"org.jfree.chart.axis.CompassFormat.format(double,StringBuffer,FieldPosition)",1,1,14,19,1
"org.jfree.chart.axis.CompassFormat.format(long,StringBuffer,FieldPosition)",1,1,14,19,1
"org.jfree.chart.axis.CompassFormat.getDirectionCode(double)",1,1,15,114,2
"org.jfree.chart.axis.CompassFormat.parse(String,ParsePosition)",1,1,13,4,1
"org.jfree.chart.axis.CyclicNumberAxis.CycleBoundTick.CycleBoundTick(boolean,Number,String,TextAnchor,TextAnchor,double)",1,1,16,48,1
"org.jfree.chart.axis.CyclicNumberAxis.CyclicNumberAxis(double)",1,1,8,15,1
"org.jfree.chart.axis.CyclicNumberAxis.CyclicNumberAxis(double,String)",1,1,9,19,1
"org.jfree.chart.axis.CyclicNumberAxis.CyclicNumberAxis(double,double)",1,1,9,22,1
"org.jfree.chart.axis.CyclicNumberAxis.CyclicNumberAxis(double,double,String)",1,1,15,78,1
"org.jfree.chart.axis.CyclicNumberAxis.calculateAnchorPoint(ValueTick,double,Rectangle2D,RectangleEdge)",2,2,25,133,2
"org.jfree.chart.axis.CyclicNumberAxis.centerRange(double)",1,1,9,55,1
"org.jfree.chart.axis.CyclicNumberAxis.draw(Graphics2D,double,Rectangle2D,Rectangle2D,RectangleEdge,PlotRenderingInfo)",1,6,44,439,6
"org.jfree.chart.axis.CyclicNumberAxis.drawTickMarksAndLabels(Graphics2D,double,Rectangle2D,Rectangle2D,RectangleEdge)",2,3,52,627,8
"org.jfree.chart.axis.CyclicNumberAxis.equals(Object)",10,1,41,359,10
"org.jfree.chart.axis.CyclicNumberAxis.getAdvanceLinePaint()",1,1,9,8,1
"org.jfree.chart.axis.CyclicNumberAxis.getAdvanceLineStroke()",1,1,9,8,1
"org.jfree.chart.axis.CyclicNumberAxis.getCycleBound()",1,1,15,66,1
"org.jfree.chart.axis.CyclicNumberAxis.getOffset()",1,1,12,11,1
"org.jfree.chart.axis.CyclicNumberAxis.getPeriod()",1,1,12,11,1
"org.jfree.chart.axis.CyclicNumberAxis.isAdvanceLineVisible()",1,1,9,11,1
"org.jfree.chart.axis.CyclicNumberAxis.isBoundMappedToLastCycle()",1,1,17,11,1
"org.jfree.chart.axis.CyclicNumberAxis.java2DToValue(double,Rectangle2D,RectangleEdge)",4,3,44,620,6
"org.jfree.chart.axis.CyclicNumberAxis.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.axis.CyclicNumberAxis.refreshTicksHorizontal(Graphics2D,Rectangle2D,RectangleEdge)",1,11,137,"1,813",27
"org.jfree.chart.axis.CyclicNumberAxis.refreshVerticalTicks(Graphics2D,Rectangle2D,RectangleEdge)",1,13,153,"2,159",33
"org.jfree.chart.axis.CyclicNumberAxis.reserveSpace(Graphics2D,Plot,Rectangle2D,RectangleEdge,AxisSpace)",2,5,42,350,6
"org.jfree.chart.axis.CyclicNumberAxis.selectHorizontalAutoTickUnit(Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge)",1,1,19,83,1
"org.jfree.chart.axis.CyclicNumberAxis.selectVerticalAutoTickUnit(Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge)",1,1,19,83,1
"org.jfree.chart.axis.CyclicNumberAxis.setAdvanceLinePaint(Paint)",1,1,10,22,1
"org.jfree.chart.axis.CyclicNumberAxis.setAdvanceLineStroke(Stroke)",1,1,10,22,1
"org.jfree.chart.axis.CyclicNumberAxis.setAdvanceLineVisible(boolean)",1,1,9,15,1
"org.jfree.chart.axis.CyclicNumberAxis.setAutoRangeMinimumSize(double,boolean)",1,1,18,64,2
"org.jfree.chart.axis.CyclicNumberAxis.setBoundMappedToLastCycle(boolean)",1,1,16,15,1
"org.jfree.chart.axis.CyclicNumberAxis.setFixedAutoRange(double)",1,1,13,30,1
"org.jfree.chart.axis.CyclicNumberAxis.setOffset(double)",1,1,12,15,1
"org.jfree.chart.axis.CyclicNumberAxis.setPeriod(double)",1,1,12,15,1
"org.jfree.chart.axis.CyclicNumberAxis.setRange(Range,boolean,boolean)",1,1,19,102,2
"org.jfree.chart.axis.CyclicNumberAxis.valueToJava2D(double,Rectangle2D,RectangleEdge)",7,3,52,687,12
"org.jfree.chart.axis.CyclicNumberAxis.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.axis.CyclicNumberAxisTest.testCloning()",1,1,11,89,1
"org.jfree.chart.axis.CyclicNumberAxisTest.testEquals()",1,1,42,579,1
"org.jfree.chart.axis.CyclicNumberAxisTest.testHashCode()",1,1,12,89,1
"org.jfree.chart.axis.CyclicNumberAxisTest.testSerialization()",1,1,9,36,1
"org.jfree.chart.axis.DateAxis.DateAxis()",1,1,6,8,1
"org.jfree.chart.axis.DateAxis.DateAxis(String)",1,1,8,15,1
"org.jfree.chart.axis.DateAxis.DateAxis(String,TimeZone,Locale)",1,1,21,140,1
"org.jfree.chart.axis.DateAxis.DefaultTimeline.containsDomainRange(Date,Date)",1,1,13,8,1
"org.jfree.chart.axis.DateAxis.DefaultTimeline.containsDomainRange(long,long)",1,1,13,13,1
"org.jfree.chart.axis.DateAxis.DefaultTimeline.containsDomainValue(Date)",1,1,12,8,1
"org.jfree.chart.axis.DateAxis.DefaultTimeline.containsDomainValue(long)",1,1,12,11,1
"org.jfree.chart.axis.DateAxis.DefaultTimeline.equals(Object)",4,1,20,72,4
"org.jfree.chart.axis.DateAxis.DefaultTimeline.toMillisecond(long)",1,1,12,10,1
"org.jfree.chart.axis.DateAxis.DefaultTimeline.toTimelineValue(Date)",1,1,11,11,1
"org.jfree.chart.axis.DateAxis.DefaultTimeline.toTimelineValue(long)",1,1,11,10,1
"org.jfree.chart.axis.DateAxis.autoAdjustRange()",2,3,40,580,6
"org.jfree.chart.axis.DateAxis.calculateDateForPosition(RegularTimePeriod,DateTickMarkPosition)",1,4,24,137,4
"org.jfree.chart.axis.DateAxis.calculateHighestVisibleTickValue(DateTickUnit)",1,1,10,11,1
"org.jfree.chart.axis.DateAxis.calculateLowestVisibleTickValue(DateTickUnit)",1,1,10,11,1
"org.jfree.chart.axis.DateAxis.clone()",1,2,19,59,2
"org.jfree.chart.axis.DateAxis.configure()",1,2,10,11,2
"org.jfree.chart.axis.DateAxis.correctTickDateForPosition(Date,DateTickUnit,DateTickMarkPosition)",1,3,21,134,3
"org.jfree.chart.axis.DateAxis.createStandardDateTickUnits()",1,1,13,15,1
"org.jfree.chart.axis.DateAxis.createStandardDateTickUnits(TimeZone,Locale)",1,1,122,"2,093",1
"org.jfree.chart.axis.DateAxis.dateToJava2D(Date,Rectangle2D,RectangleEdge)",1,1,16,31,1
"org.jfree.chart.axis.DateAxis.draw(Graphics2D,double,Rectangle2D,Rectangle2D,RectangleEdge,PlotRenderingInfo)",2,3,43,244,3
"org.jfree.chart.axis.DateAxis.equals(Object)",9,1,38,347,9
"org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelHeight(Graphics2D,DateTickUnit)",1,3,47,363,3
"org.jfree.chart.axis.DateAxis.estimateMaximumTickLabelWidth(Graphics2D,DateTickUnit)",1,3,47,355,3
"org.jfree.chart.axis.DateAxis.getDateFormatOverride()",1,1,9,8,1
"org.jfree.chart.axis.DateAxis.getLocale()",1,1,10,8,1
"org.jfree.chart.axis.DateAxis.getMaximumDate()",1,2,20,62,2
"org.jfree.chart.axis.DateAxis.getMinimumDate()",1,2,20,62,2
"org.jfree.chart.axis.DateAxis.getTickMarkPosition()",1,1,8,8,1
"org.jfree.chart.axis.DateAxis.getTickUnit()",1,1,16,8,1
"org.jfree.chart.axis.DateAxis.getTimeZone()",1,1,12,8,1
"org.jfree.chart.axis.DateAxis.getTimeline()",1,1,8,8,1
"org.jfree.chart.axis.DateAxis.hashCode()",1,1,9,11,1
"org.jfree.chart.axis.DateAxis.isHiddenValue(long)",1,1,11,33,1
"org.jfree.chart.axis.DateAxis.java2DToValue(double,Rectangle2D,RectangleEdge)",1,3,39,391,4
"org.jfree.chart.axis.DateAxis.nextStandardDate(Date,DateTickUnit)",1,1,16,84,1
"org.jfree.chart.axis.DateAxis.previousStandardDate(Date,DateTickUnit)",8,16,178,"3,247",26
"org.jfree.chart.axis.DateAxis.refreshTicks(Graphics2D,AxisState,Rectangle2D,RectangleEdge)",1,3,23,77,3
"org.jfree.chart.axis.DateAxis.refreshTicksHorizontal(Graphics2D,Rectangle2D,RectangleEdge)",3,14,105,"1,375",17
"org.jfree.chart.axis.DateAxis.refreshTicksVertical(Graphics2D,Rectangle2D,RectangleEdge)",1,14,104,"1,369",17
"org.jfree.chart.axis.DateAxis.selectAutoTickUnit(Graphics2D,Rectangle2D,RectangleEdge)",1,3,18,58,3
"org.jfree.chart.axis.DateAxis.selectHorizontalAutoTickUnit(Graphics2D,Rectangle2D,RectangleEdge)",1,2,30,317,2
"org.jfree.chart.axis.DateAxis.selectVerticalAutoTickUnit(Graphics2D,Rectangle2D,RectangleEdge)",1,2,39,372,2
"org.jfree.chart.axis.DateAxis.setDateFormatOverride(DateFormat)",1,1,11,15,1
"org.jfree.chart.axis.DateAxis.setLocale(Locale)",1,1,13,51,1
"org.jfree.chart.axis.DateAxis.setMaximumDate(Date)",1,2,26,151,2
"org.jfree.chart.axis.DateAxis.setMinimumDate(Date)",1,2,26,153,2
"org.jfree.chart.axis.DateAxis.setRange(Date,Date)",2,1,13,51,2
"org.jfree.chart.axis.DateAxis.setRange(Range)",1,1,11,13,1
"org.jfree.chart.axis.DateAxis.setRange(Range,boolean,boolean)",1,1,22,72,2
"org.jfree.chart.axis.DateAxis.setRange(double,double)",2,1,14,51,2
"org.jfree.chart.axis.DateAxis.setTickMarkPosition(DateTickMarkPosition)",1,1,11,26,1
"org.jfree.chart.axis.DateAxis.setTickUnit(DateTickUnit)",1,1,13,20,1
"org.jfree.chart.axis.DateAxis.setTickUnit(DateTickUnit,boolean,boolean)",1,3,20,53,3
"org.jfree.chart.axis.DateAxis.setTimeZone(TimeZone)",1,1,16,48,1
"org.jfree.chart.axis.DateAxis.setTimeline(Timeline)",1,2,12,33,2
"org.jfree.chart.axis.DateAxis.valueToJava2D(double,Rectangle2D,RectangleEdge)",1,3,45,548,5
"org.jfree.chart.axis.DateAxis.zoomRange(double,double)",1,1,34,382,3
"org.jfree.chart.axis.DateAxisTest.MyDateAxis.MyDateAxis(String)",1,1,8,8,1
"org.jfree.chart.axis.DateAxisTest.MyDateAxis.previousStandardDate(Date,DateTickUnit)",1,1,4,15,1
"org.jfree.chart.axis.DateAxisTest.same(double,double,double)",1,1,12,39,1
"org.jfree.chart.axis.DateAxisTest.test1472942()",1,1,15,107,1
"org.jfree.chart.axis.DateAxisTest.testBug2201869()",1,1,41,704,1
"org.jfree.chart.axis.DateAxisTest.testBug25()",1,1,60,"1,255",1
"org.jfree.chart.axis.DateAxisTest.testBug3484403()",1,1,20,276,1
"org.jfree.chart.axis.DateAxisTest.testCloning()",1,1,11,77,1
"org.jfree.chart.axis.DateAxisTest.testEquals()",1,1,34,472,1
"org.jfree.chart.axis.DateAxisTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.axis.DateAxisTest.testJava2DToValue()",1,1,26,528,1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateDayA()",1,1,60,"1,210",1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateDayB()",1,1,60,"1,218",1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateHourA()",1,1,60,"1,229",1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateHourB()",1,1,60,"1,237",1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateMillisecondA()",1,1,35,604,1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateMillisecondB()",1,1,35,609,1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateMonthA()",1,1,60,"1,199",1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateMonthB()",1,1,60,"1,199",1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateSecondA()",1,1,60,"1,267",1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateSecondB()",1,1,60,"1,275",1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateYearA()",1,1,60,"1,180",1
"org.jfree.chart.axis.DateAxisTest.testPreviousStandardDateYearB()",1,1,60,"1,180",1
"org.jfree.chart.axis.DateAxisTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.axis.DateAxisTest.testSetMaximumDate()",1,1,19,150,1
"org.jfree.chart.axis.DateAxisTest.testSetMinimumDate()",1,1,17,128,1
"org.jfree.chart.axis.DateAxisTest.testSetRange()",1,1,16,144,1
"org.jfree.chart.axis.DateTick.DateTick(Date,String,TextAnchor,TextAnchor,double)",1,1,15,33,1
"org.jfree.chart.axis.DateTick.DateTick(TickType,Date,String,TextAnchor,TextAnchor,double)",1,1,21,66,1
"org.jfree.chart.axis.DateTick.equals(Object)",4,1,21,114,4
"org.jfree.chart.axis.DateTick.getDate()",1,1,8,8,1
"org.jfree.chart.axis.DateTick.hashCode()",1,1,9,15,1
"org.jfree.chart.axis.DateTickMarkPositionTest.testEquals()",1,1,14,72,1
"org.jfree.chart.axis.DateTickMarkPositionTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.axis.DateTickMarkPositionTest.testSerialization()",1,1,10,38,1
"org.jfree.chart.axis.DateTickTest.testCloning()",1,1,12,104,1
"org.jfree.chart.axis.DateTickTest.testEquals()",1,1,40,902,1
"org.jfree.chart.axis.DateTickTest.testHashCode()",1,1,15,153,1
"org.jfree.chart.axis.DateTickTest.testSerialization()",1,1,10,48,1
"org.jfree.chart.axis.DateTickUnit.DateTickUnit(DateTickUnitType,int)",1,1,11,24,1
"org.jfree.chart.axis.DateTickUnit.DateTickUnit(DateTickUnitType,int,DateFormat)",1,1,13,25,1
"org.jfree.chart.axis.DateTickUnit.DateTickUnit(DateTickUnitType,int,DateTickUnitType,int,DateFormat)",3,1,30,185,3
"org.jfree.chart.axis.DateTickUnit.addToDate(Date,TimeZone)",1,1,20,59,1
"org.jfree.chart.axis.DateTickUnit.dateToString(Date)",1,1,10,15,1
"org.jfree.chart.axis.DateTickUnit.equals(Object)",7,1,30,226,7
"org.jfree.chart.axis.DateTickUnit.getCalendarField()",1,1,9,15,1
"org.jfree.chart.axis.DateTickUnit.getMillisecondCount(DateTickUnitType,int)",8,7,41,399,8
"org.jfree.chart.axis.DateTickUnit.getMultiple()",1,1,8,11,1
"org.jfree.chart.axis.DateTickUnit.getRollMultiple()",1,1,10,11,1
"org.jfree.chart.axis.DateTickUnit.getRollUnitType()",1,1,10,8,1
"org.jfree.chart.axis.DateTickUnit.getUnitType()",1,1,10,8,1
"org.jfree.chart.axis.DateTickUnit.hashCode()",1,1,13,110,1
"org.jfree.chart.axis.DateTickUnit.rollDate(Date)",1,1,12,11,1
"org.jfree.chart.axis.DateTickUnit.rollDate(Date,TimeZone)",1,1,21,59,1
"org.jfree.chart.axis.DateTickUnit.toString()",1,1,11,31,1
"org.jfree.chart.axis.DateTickUnit.valueToString(double)",1,1,11,28,1
"org.jfree.chart.axis.DateTickUnitTest.testEquals()",1,1,9,38,1
"org.jfree.chart.axis.DateTickUnitTest.testHashCode()",1,1,12,79,1
"org.jfree.chart.axis.DateTickUnitTest.testSerialization()",1,1,9,31,1
"org.jfree.chart.axis.DateTickUnitType.DateTickUnitType(String,int)",1,1,10,22,1
"org.jfree.chart.axis.DateTickUnitType.equals(Object)",4,1,22,101,4
"org.jfree.chart.axis.DateTickUnitType.getCalendarField()",1,1,8,11,1
"org.jfree.chart.axis.DateTickUnitType.readResolve()",8,7,31,203,8
"org.jfree.chart.axis.DateTickUnitType.toString()",1,1,9,8,1
"org.jfree.chart.axis.ExtendedCategoryAxis.ExtendedCategoryAxis(String)",1,1,11,59,1
"org.jfree.chart.axis.ExtendedCategoryAxis.addSubLabel(Comparable,String)",1,1,9,19,1
"org.jfree.chart.axis.ExtendedCategoryAxis.clone()",1,1,13,36,1
"org.jfree.chart.axis.ExtendedCategoryAxis.createLabel(Comparable,float,RectangleEdge,Graphics2D)",1,5,33,302,7
"org.jfree.chart.axis.ExtendedCategoryAxis.equals(Object)",6,1,27,208,6
"org.jfree.chart.axis.ExtendedCategoryAxis.getSubLabelFont()",1,1,10,8,1
"org.jfree.chart.axis.ExtendedCategoryAxis.getSubLabelPaint()",1,1,10,8,1
"org.jfree.chart.axis.ExtendedCategoryAxis.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.axis.ExtendedCategoryAxis.setSubLabelFont(Font)",1,1,13,34,1
"org.jfree.chart.axis.ExtendedCategoryAxis.setSubLabelPaint(Paint)",1,1,13,34,1
"org.jfree.chart.axis.ExtendedCategoryAxis.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.axis.ExtendedCategoryAxisTest.testCloning()",1,1,16,151,1
"org.jfree.chart.axis.ExtendedCategoryAxisTest.testCloning2()",1,1,30,421,1
"org.jfree.chart.axis.ExtendedCategoryAxisTest.testEquals()",1,1,21,250,1
"org.jfree.chart.axis.ExtendedCategoryAxisTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.axis.ExtendedCategoryAxisTest.testSerialization()",1,1,12,70,1
"org.jfree.chart.axis.LogAxis.LogAxis()",1,1,6,8,1
"org.jfree.chart.axis.LogAxis.LogAxis(String)",1,1,10,57,1
"org.jfree.chart.axis.LogAxis.autoAdjustRange()",2,4,44,563,6
"org.jfree.chart.axis.LogAxis.calculateLog(double)",1,1,13,30,1
"org.jfree.chart.axis.LogAxis.calculateValue(double)",1,1,13,25,1
"org.jfree.chart.axis.LogAxis.calculateValueNoINF(double)",1,1,10,68,3
"org.jfree.chart.axis.LogAxis.configure()",1,2,10,11,2
"org.jfree.chart.axis.LogAxis.createTickLabel(double)",2,3,30,292,3
"org.jfree.chart.axis.LogAxis.draw(Graphics2D,double,Rectangle2D,Rectangle2D,RectangleEdge,PlotRenderingInfo)",2,3,38,253,3
"org.jfree.chart.axis.LogAxis.equals(Object)",8,1,34,294,8
"org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelHeight(Graphics2D)",1,1,17,81,1
"org.jfree.chart.axis.LogAxis.estimateMaximumTickLabelWidth(Graphics2D,TickUnit)",1,2,39,244,2
"org.jfree.chart.axis.LogAxis.exponentLengthToJava2D(double,Rectangle2D,RectangleEdge)",1,1,18,83,1
"org.jfree.chart.axis.LogAxis.getBase()",1,1,11,13,1
"org.jfree.chart.axis.LogAxis.getBaseFormatter()",1,1,12,8,1
"org.jfree.chart.axis.LogAxis.getBaseSymbol()",1,1,12,8,1
"org.jfree.chart.axis.LogAxis.getNumberFormatOverride()",1,1,11,8,1
"org.jfree.chart.axis.LogAxis.getSmallestValue()",1,1,10,13,1
"org.jfree.chart.axis.LogAxis.getTickUnit()",1,1,10,8,1
"org.jfree.chart.axis.LogAxis.hashCode()",1,2,18,261,2
"org.jfree.chart.axis.LogAxis.java2DToValue(double,Rectangle2D,RectangleEdge)",1,3,38,371,4
"org.jfree.chart.axis.LogAxis.pan(double)",1,1,20,159,1
"org.jfree.chart.axis.LogAxis.refreshTicks(Graphics2D,AxisState,Rectangle2D,RectangleEdge)",1,3,23,77,3
"org.jfree.chart.axis.LogAxis.refreshTicksHorizontal(Graphics2D,Rectangle2D,RectangleEdge)",1,7,54,742,9
"org.jfree.chart.axis.LogAxis.refreshTicksVertical(Graphics2D,Rectangle2D,RectangleEdge)",1,7,55,742,9
"org.jfree.chart.axis.LogAxis.resizeRange(double)",1,1,20,98,1
"org.jfree.chart.axis.LogAxis.resizeRange(double,double)",1,1,4,18,1
"org.jfree.chart.axis.LogAxis.resizeRange2(double,double)",1,2,34,233,2
"org.jfree.chart.axis.LogAxis.selectAutoTickUnit(Graphics2D,Rectangle2D,RectangleEdge)",1,3,21,58,3
"org.jfree.chart.axis.LogAxis.selectHorizontalAutoTickUnit(Graphics2D,Rectangle2D,RectangleEdge)",1,4,48,403,5
"org.jfree.chart.axis.LogAxis.selectVerticalAutoTickUnit(Graphics2D,Rectangle2D,RectangleEdge)",1,4,47,398,5
"org.jfree.chart.axis.LogAxis.setBase(double)",2,1,16,70,2
"org.jfree.chart.axis.LogAxis.setBaseFormatter(Format)",1,1,14,26,1
"org.jfree.chart.axis.LogAxis.setBaseSymbol(String)",1,1,12,15,1
"org.jfree.chart.axis.LogAxis.setNumberFormatOverride(NumberFormat)",1,1,13,15,1
"org.jfree.chart.axis.LogAxis.setSmallestValue(double)",2,1,15,51,2
"org.jfree.chart.axis.LogAxis.setTickUnit(NumberTickUnit)",1,1,15,18,1
"org.jfree.chart.axis.LogAxis.setTickUnit(NumberTickUnit,boolean,boolean)",1,3,24,72,3
"org.jfree.chart.axis.LogAxis.valueToJava2D(double,Rectangle2D,RectangleEdge)",2,3,35,335,4
"org.jfree.chart.axis.LogAxis.zoomRange(double,double)",1,2,29,317,2
"org.jfree.chart.axis.LogAxisTest.testAutoRange1()",1,1,17,164,1
"org.jfree.chart.axis.LogAxisTest.testAutoRange3()",1,1,26,320,1
"org.jfree.chart.axis.LogAxisTest.testCloning()",1,1,11,77,1
"org.jfree.chart.axis.LogAxisTest.testEquals()",1,1,21,203,1
"org.jfree.chart.axis.LogAxisTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.axis.LogAxisTest.testRefreshTicksWithZeroTickUnit()",1,1,13,82,1
"org.jfree.chart.axis.LogAxisTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.axis.LogAxisTest.testSetLowerBound()",1,1,13,113,1
"org.jfree.chart.axis.LogAxisTest.testTickMarksVisibleDefault()",1,1,8,19,1
"org.jfree.chart.axis.LogAxisTest.testTranslateJava2DToValue()",1,1,26,483,1
"org.jfree.chart.axis.LogAxisTest.testXYAutoRange1()",1,1,20,199,1
"org.jfree.chart.axis.LogAxisTest.testXYAutoRange2()",1,1,20,199,1
"org.jfree.chart.axis.LogTick.LogTick(TickType,double,AttributedString,TextAnchor)",1,1,14,46,1
"org.jfree.chart.axis.LogTick.getAttributedLabel()",1,1,9,8,1
"org.jfree.chart.axis.LogarithmicAxis.LogarithmicAxis(String)",1,1,9,11,1
"org.jfree.chart.axis.LogarithmicAxis.adjustedLog10(double)",1,1,26,128,4
"org.jfree.chart.axis.LogarithmicAxis.adjustedPow10(double)",1,2,28,161,4
"org.jfree.chart.axis.LogarithmicAxis.autoAdjustRange()",5,14,100,"1,455",26
"org.jfree.chart.axis.LogarithmicAxis.computeLogCeil(double)",1,5,51,316,5
"org.jfree.chart.axis.LogarithmicAxis.computeLogFloor(double)",1,5,48,316,5
"org.jfree.chart.axis.LogarithmicAxis.getAllowNegativesFlag()",1,1,10,11,1
"org.jfree.chart.axis.LogarithmicAxis.getAutoRangeNextLogFlag()",1,1,9,11,1
"org.jfree.chart.axis.LogarithmicAxis.getExpTickLabelsFlag()",1,1,9,11,1
"org.jfree.chart.axis.LogarithmicAxis.getLog10TickLabelsFlag()",1,1,10,11,1
"org.jfree.chart.axis.LogarithmicAxis.getStrictValuesFlag()",1,1,11,11,1
"org.jfree.chart.axis.LogarithmicAxis.java2DToValue(double,Rectangle2D,RectangleEdge)",2,4,36,333,4
"org.jfree.chart.axis.LogarithmicAxis.makeTickLabel(double)",1,1,9,15,1
"org.jfree.chart.axis.LogarithmicAxis.makeTickLabel(double,boolean)",2,2,17,70,3
"org.jfree.chart.axis.LogarithmicAxis.refreshTicksHorizontal(Graphics2D,Rectangle2D,RectangleEdge)",4,15,138,"1,736",40
"org.jfree.chart.axis.LogarithmicAxis.refreshTicksVertical(Graphics2D,Rectangle2D,RectangleEdge)",4,21,181,"1,933",32
"org.jfree.chart.axis.LogarithmicAxis.setAllowNegativesFlag(boolean)",1,1,10,15,1
"org.jfree.chart.axis.LogarithmicAxis.setAutoRangeNextLogFlag(boolean)",1,1,12,15,1
"org.jfree.chart.axis.LogarithmicAxis.setExpTickLabelsFlag(boolean)",1,1,12,19,1
"org.jfree.chart.axis.LogarithmicAxis.setLog10TickLabelsFlag(boolean)",1,1,9,15,1
"org.jfree.chart.axis.LogarithmicAxis.setRange(Range)",1,1,11,15,1
"org.jfree.chart.axis.LogarithmicAxis.setStrictValuesFlag(boolean)",1,1,11,15,1
"org.jfree.chart.axis.LogarithmicAxis.setupNumberFmtObj()",1,2,12,43,3
"org.jfree.chart.axis.LogarithmicAxis.setupSmallLogFlag()",1,1,11,60,3
"org.jfree.chart.axis.LogarithmicAxis.switchedLog10(double)",1,2,17,43,2
"org.jfree.chart.axis.LogarithmicAxis.switchedPow10(double)",1,2,17,38,2
"org.jfree.chart.axis.LogarithmicAxis.valueToJava2D(double,Rectangle2D,RectangleEdge)",2,3,38,335,4
"org.jfree.chart.axis.LogarithmicAxis.zoomRange(double,double)",1,2,23,227,2
"org.jfree.chart.axis.LogarithmicAxisTest.MyLogarithmicAxis.MyLogarithmicAxis(String)",1,1,8,8,1
"org.jfree.chart.axis.LogarithmicAxisTest.MyLogarithmicAxis.switchedLog10(double)",1,1,7,18,1
"org.jfree.chart.axis.LogarithmicAxisTest.checkLogPowRoundTrip(double)",1,1,6,89,1
"org.jfree.chart.axis.LogarithmicAxisTest.checkPointsToJava2D(RectangleEdge,Rectangle2D)",1,1,14,241,1
"org.jfree.chart.axis.LogarithmicAxisTest.checkPointsToValue(RectangleEdge,Rectangle2D)",1,1,21,245,1
"org.jfree.chart.axis.LogarithmicAxisTest.checkSwitchedLogPowRoundTrip(double)",1,1,6,89,1
"org.jfree.chart.axis.LogarithmicAxisTest.setUp()",1,1,15,126,1
"org.jfree.chart.axis.LogarithmicAxisTest.testAdjustedLog10()",1,1,14,62,1
"org.jfree.chart.axis.LogarithmicAxisTest.testJava2DToValue()",1,1,20,166,1
"org.jfree.chart.axis.LogarithmicAxisTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.axis.LogarithmicAxisTest.testSwitchedLog10()",1,1,18,147,1
"org.jfree.chart.axis.LogarithmicAxisTest.testValueToJava2D()",1,1,20,166,1
"org.jfree.chart.axis.MarkerAxisBand.MarkerAxisBand(NumberAxis,double,double,double,double,Font)",1,1,22,106,1
"org.jfree.chart.axis.MarkerAxisBand.addMarker(IntervalMarker)",1,1,8,15,1
"org.jfree.chart.axis.MarkerAxisBand.draw(Graphics2D,Rectangle2D,Rectangle2D,double,double)",1,2,44,533,2
"org.jfree.chart.axis.MarkerAxisBand.drawStringInRect(Graphics2D,Rectangle2D,Font,String)",1,2,25,235,2
"org.jfree.chart.axis.MarkerAxisBand.equals(Object)",9,1,37,314,9
"org.jfree.chart.axis.MarkerAxisBand.getHeight(Graphics2D)",1,2,18,129,2
"org.jfree.chart.axis.MarkerAxisBand.hashCode()",1,1,12,81,1
"org.jfree.chart.axis.MarkerAxisBandTest.testEquals()",1,1,31,645,1
"org.jfree.chart.axis.MarkerAxisBandTest.testHashCode()",1,1,13,137,1
"org.jfree.chart.axis.MarkerAxisBandTest.testSerialization()",1,1,9,44,1
"org.jfree.chart.axis.ModuloAxis.ModuloAxis(String,Range)",1,1,12,44,1
"org.jfree.chart.axis.ModuloAxis.autoAdjustRange()",1,1,8,18,1
"org.jfree.chart.axis.ModuloAxis.equals(Object)",6,1,27,196,6
"org.jfree.chart.axis.ModuloAxis.getDisplayCentralValue()",1,1,9,33,1
"org.jfree.chart.axis.ModuloAxis.getDisplayEnd()",1,1,8,11,1
"org.jfree.chart.axis.ModuloAxis.getDisplayLength()",2,2,14,110,2
"org.jfree.chart.axis.ModuloAxis.getDisplayStart()",1,1,8,11,1
"org.jfree.chart.axis.ModuloAxis.java2DToValue(double,Rectangle2D,RectangleEdge)",1,2,20,80,2
"org.jfree.chart.axis.ModuloAxis.lengthToJava2D(double,Rectangle2D,RectangleEdge)",1,3,30,227,3
"org.jfree.chart.axis.ModuloAxis.mapValueToFixedRange(double)",2,1,17,128,2
"org.jfree.chart.axis.ModuloAxis.resizeRange(double)",1,1,14,15,1
"org.jfree.chart.axis.ModuloAxis.resizeRange(double,double)",1,2,21,101,2
"org.jfree.chart.axis.ModuloAxis.setDisplayRange(double,double)",1,2,19,172,2
"org.jfree.chart.axis.ModuloAxis.trans(double,Rectangle2D,RectangleEdge)",2,3,29,320,4
"org.jfree.chart.axis.ModuloAxis.transEnd(double,Rectangle2D,RectangleEdge,double,double)",2,4,37,418,4
"org.jfree.chart.axis.ModuloAxis.transStart(double,Rectangle2D,RectangleEdge,double,double)",2,4,37,408,4
"org.jfree.chart.axis.ModuloAxis.valueToJava2D(double,Rectangle2D,RectangleEdge)",1,3,31,301,3
"org.jfree.chart.axis.ModuloAxisTest.testCloning()",1,1,11,93,1
"org.jfree.chart.axis.ModuloAxisTest.testEquals()",1,1,13,121,1
"org.jfree.chart.axis.ModuloAxisTest.testHashCode()",1,1,12,97,1
"org.jfree.chart.axis.ModuloAxisTest.testSerialization()",1,1,9,39,1
"org.jfree.chart.axis.MonthDateFormat.MonthDateFormat()",1,1,6,8,1
"org.jfree.chart.axis.MonthDateFormat.MonthDateFormat(Locale)",1,1,9,24,1
"org.jfree.chart.axis.MonthDateFormat.MonthDateFormat(Locale,int)",1,1,12,28,1
"org.jfree.chart.axis.MonthDateFormat.MonthDateFormat(TimeZone)",1,1,8,24,1
"org.jfree.chart.axis.MonthDateFormat.MonthDateFormat(TimeZone,Locale,int,boolean,boolean)",1,1,23,96,1
"org.jfree.chart.axis.MonthDateFormat.MonthDateFormat(TimeZone,Locale,int,boolean[],DateFormat)",1,3,37,287,3
"org.jfree.chart.axis.MonthDateFormat.MonthDateFormat(TimeZone,int)",1,1,12,28,1
"org.jfree.chart.axis.MonthDateFormat.equals(Object)",7,1,30,227,7
"org.jfree.chart.axis.MonthDateFormat.format(Date,StringBuffer,FieldPosition)",1,2,20,110,2
"org.jfree.chart.axis.MonthDateFormat.parse(String,ParsePosition)",1,1,12,4,1
"org.jfree.chart.axis.MonthDateFormatTest.testCloning()",1,1,12,75,1
"org.jfree.chart.axis.MonthDateFormatTest.testEquals()",1,1,49,695,1
"org.jfree.chart.axis.MonthDateFormatTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.axis.MonthDateFormatTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.axis.NumberAxis.NumberAxis()",1,1,6,8,1
"org.jfree.chart.axis.NumberAxis.NumberAxis(String)",1,1,14,94,1
"org.jfree.chart.axis.NumberAxis.autoAdjustRange()",2,12,82,"1,168",17
"org.jfree.chart.axis.NumberAxis.calculateHighestVisibleTickValue()",1,1,12,53,1
"org.jfree.chart.axis.NumberAxis.calculateLowestVisibleTickValue()",1,1,12,53,1
"org.jfree.chart.axis.NumberAxis.calculateVisibleTickCount()",1,1,11,85,1
"org.jfree.chart.axis.NumberAxis.clone()",1,2,17,59,2
"org.jfree.chart.axis.NumberAxis.configure()",1,2,10,11,2
"org.jfree.chart.axis.NumberAxis.createIntegerTickUnits()",1,1,11,11,1
"org.jfree.chart.axis.NumberAxis.createIntegerTickUnits(Locale)",1,1,14,24,1
"org.jfree.chart.axis.NumberAxis.createStandardTickUnits()",1,1,15,8,1
"org.jfree.chart.axis.NumberAxis.createStandardTickUnits(Locale)",1,1,19,24,1
"org.jfree.chart.axis.NumberAxis.draw(Graphics2D,double,Rectangle2D,Rectangle2D,RectangleEdge,PlotRenderingInfo)",2,3,41,253,3
"org.jfree.chart.axis.NumberAxis.equals(Object)",8,1,34,294,8
"org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelHeight(Graphics2D)",1,1,15,81,1
"org.jfree.chart.axis.NumberAxis.estimateMaximumTickLabelWidth(Graphics2D,TickUnit)",1,3,46,358,3
"org.jfree.chart.axis.NumberAxis.getAutoRangeIncludesZero()",1,1,9,11,1
"org.jfree.chart.axis.NumberAxis.getAutoRangeStickyZero()",1,1,11,13,1
"org.jfree.chart.axis.NumberAxis.getMarkerBand()",1,1,10,8,1
"org.jfree.chart.axis.NumberAxis.getNumberFormatOverride()",1,1,11,8,1
"org.jfree.chart.axis.NumberAxis.getRangeType()",1,1,10,8,1
"org.jfree.chart.axis.NumberAxis.getTickUnit()",1,1,16,8,1
"org.jfree.chart.axis.NumberAxis.hashCode()",1,1,9,11,1
"org.jfree.chart.axis.NumberAxis.java2DToValue(double,Rectangle2D,RectangleEdge)",2,3,37,312,4
"org.jfree.chart.axis.NumberAxis.refreshTicks(Graphics2D,AxisState,Rectangle2D,RectangleEdge)",1,3,23,77,3
"org.jfree.chart.axis.NumberAxis.refreshTicksHorizontal(Graphics2D,Rectangle2D,RectangleEdge)",1,10,87,"1,072",13
"org.jfree.chart.axis.NumberAxis.refreshTicksVertical(Graphics2D,Rectangle2D,RectangleEdge)",1,10,91,"1,116",13
"org.jfree.chart.axis.NumberAxis.selectAutoTickUnit(Graphics2D,Rectangle2D,RectangleEdge)",1,3,18,58,3
"org.jfree.chart.axis.NumberAxis.selectHorizontalAutoTickUnit(Graphics2D,Rectangle2D,RectangleEdge)",1,3,34,377,4
"org.jfree.chart.axis.NumberAxis.selectVerticalAutoTickUnit(Graphics2D,Rectangle2D,RectangleEdge)",1,3,31,285,3
"org.jfree.chart.axis.NumberAxis.setAutoRangeIncludesZero(boolean)",1,3,22,60,3
"org.jfree.chart.axis.NumberAxis.setAutoRangeStickyZero(boolean)",1,3,17,60,3
"org.jfree.chart.axis.NumberAxis.setMarkerBand(MarkerAxisBand)",1,1,14,22,1
"org.jfree.chart.axis.NumberAxis.setNumberFormatOverride(NumberFormat)",1,1,12,22,1
"org.jfree.chart.axis.NumberAxis.setRangeType(RangeType)",1,1,12,34,1
"org.jfree.chart.axis.NumberAxis.setTickUnit(NumberTickUnit)",1,1,16,23,1
"org.jfree.chart.axis.NumberAxis.setTickUnit(NumberTickUnit,boolean,boolean)",1,3,22,82,3
"org.jfree.chart.axis.NumberAxis.valueToJava2D(double,Rectangle2D,RectangleEdge)",2,3,39,312,4
"org.jfree.chart.axis.NumberAxisTest.testAutoRange1()",1,1,16,148,1
"org.jfree.chart.axis.NumberAxisTest.testAutoRange2()",1,1,19,187,1
"org.jfree.chart.axis.NumberAxisTest.testAutoRange3()",1,1,27,320,1
"org.jfree.chart.axis.NumberAxisTest.testAutoRange4()",1,1,42,712,1
"org.jfree.chart.axis.NumberAxisTest.testCloning()",1,1,11,77,1
"org.jfree.chart.axis.NumberAxisTest.testEquals()",1,1,33,350,1
"org.jfree.chart.axis.NumberAxisTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.axis.NumberAxisTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.axis.NumberAxisTest.testSetLowerBound()",1,1,16,113,1
"org.jfree.chart.axis.NumberAxisTest.testTranslateJava2DToValue()",1,1,26,483,1
"org.jfree.chart.axis.NumberAxisTest.testXYAutoRange1()",1,1,20,201,1
"org.jfree.chart.axis.NumberAxisTest.testXYAutoRange2()",1,1,20,201,1
"org.jfree.chart.axis.NumberTick.NumberTick(Number,String,TextAnchor,TextAnchor,double)",1,1,16,46,1
"org.jfree.chart.axis.NumberTick.NumberTick(TickType,double,String,TextAnchor,TextAnchor,double)",1,1,19,55,1
"org.jfree.chart.axis.NumberTick.getNumber()",1,1,8,8,1
"org.jfree.chart.axis.NumberTickUnit.NumberTickUnit(double)",1,1,8,15,1
"org.jfree.chart.axis.NumberTickUnit.NumberTickUnit(double,NumberFormat)",1,1,12,36,1
"org.jfree.chart.axis.NumberTickUnit.NumberTickUnit(double,NumberFormat,int)",1,1,16,46,1
"org.jfree.chart.axis.NumberTickUnit.equals(Object)",5,1,24,134,5
"org.jfree.chart.axis.NumberTickUnit.hashCode()",1,2,12,78,2
"org.jfree.chart.axis.NumberTickUnit.toString()",1,1,9,22,1
"org.jfree.chart.axis.NumberTickUnit.valueToString(double)",1,1,11,19,1
"org.jfree.chart.axis.NumberTickUnitSource.NumberTickUnitSource()",1,1,6,8,1
"org.jfree.chart.axis.NumberTickUnitSource.NumberTickUnitSource(boolean)",1,1,8,15,1
"org.jfree.chart.axis.NumberTickUnitSource.NumberTickUnitSource(boolean,NumberFormat)",1,1,13,48,1
"org.jfree.chart.axis.NumberTickUnitSource.equals(Object)",7,1,23,222,7
"org.jfree.chart.axis.NumberTickUnitSource.getCeilingTickUnit(TickUnit)",1,1,4,11,1
"org.jfree.chart.axis.NumberTickUnitSource.getCeilingTickUnit(double)",2,4,23,225,5
"org.jfree.chart.axis.NumberTickUnitSource.getLargerTickUnit(TickUnit)",1,2,10,53,2
"org.jfree.chart.axis.NumberTickUnitSource.getMinorTickCount()",3,1,8,58,3
"org.jfree.chart.axis.NumberTickUnitSource.getTickLabelFormat()",7,1,21,227,8
"org.jfree.chart.axis.NumberTickUnitSource.getTickSize()",1,1,3,31,1
"org.jfree.chart.axis.NumberTickUnitSource.next()",5,1,19,151,5
"org.jfree.chart.axis.NumberTickUnitSource.previous()",5,1,19,203,7
"org.jfree.chart.axis.NumberTickUnitTest.testCloning()",1,1,8,26,1
"org.jfree.chart.axis.NumberTickUnitTest.testEquals()",1,1,18,193,1
"org.jfree.chart.axis.NumberTickUnitTest.testHashCode()",1,1,11,68,1
"org.jfree.chart.axis.NumberTickUnitTest.testSerialization()",1,1,9,34,1
"org.jfree.chart.axis.PeriodAxis.PeriodAxis(String)",1,1,8,13,1
"org.jfree.chart.axis.PeriodAxis.PeriodAxis(String,RegularTimePeriod,RegularTimePeriod)",1,1,13,24,1
"org.jfree.chart.axis.PeriodAxis.PeriodAxis(String,RegularTimePeriod,RegularTimePeriod,TimeZone,Locale)",1,1,39,447,1
"org.jfree.chart.axis.PeriodAxis.autoAdjustRange()",2,3,24,267,4
"org.jfree.chart.axis.PeriodAxis.clone()",1,1,15,59,1
"org.jfree.chart.axis.PeriodAxis.configure()",1,2,10,15,2
"org.jfree.chart.axis.PeriodAxis.createInstance(Class,Date,TimeZone,Locale)",1,2,34,117,3
"org.jfree.chart.axis.PeriodAxis.draw(Graphics2D,double,Rectangle2D,Rectangle2D,RectangleEdge,PlotRenderingInfo)",1,6,39,302,6
"org.jfree.chart.axis.PeriodAxis.drawTickLabels(int,Graphics2D,AxisState,Rectangle2D,RectangleEdge)",1,17,139,"2,818",19
"org.jfree.chart.axis.PeriodAxis.drawTickMarks(Graphics2D,AxisState,Rectangle2D,RectangleEdge)",1,3,17,68,3
"org.jfree.chart.axis.PeriodAxis.drawTickMarksHorizontal(Graphics2D,AxisState,Rectangle2D,RectangleEdge)",1,9,87,"1,513",13
"org.jfree.chart.axis.PeriodAxis.drawTickMarksVertical(Graphics2D,AxisState,Rectangle2D,RectangleEdge)",1,1,12,2,1
"org.jfree.chart.axis.PeriodAxis.equals(Object)",14,1,54,614,14
"org.jfree.chart.axis.PeriodAxis.getAutoRangeTimePeriodClass()",1,1,9,8,1
"org.jfree.chart.axis.PeriodAxis.getFirst()",1,1,8,8,1
"org.jfree.chart.axis.PeriodAxis.getLabelInfo()",1,1,8,8,1
"org.jfree.chart.axis.PeriodAxis.getLast()",1,1,8,8,1
"org.jfree.chart.axis.PeriodAxis.getLocale()",1,1,10,8,1
"org.jfree.chart.axis.PeriodAxis.getMajorTickTimePeriodClass()",1,1,8,8,1
"org.jfree.chart.axis.PeriodAxis.getMinorTickMarkInsideLength()",1,1,9,11,1
"org.jfree.chart.axis.PeriodAxis.getMinorTickMarkOutsideLength()",1,1,9,11,1
"org.jfree.chart.axis.PeriodAxis.getMinorTickMarkPaint()",1,1,9,8,1
"org.jfree.chart.axis.PeriodAxis.getMinorTickMarkStroke()",1,1,9,8,1
"org.jfree.chart.axis.PeriodAxis.getMinorTickTimePeriodClass()",1,1,8,8,1
"org.jfree.chart.axis.PeriodAxis.getTimeZone()",1,1,9,8,1
"org.jfree.chart.axis.PeriodAxis.hashCode()",1,1,9,11,1
"org.jfree.chart.axis.PeriodAxis.isMinorTickMarksVisible()",1,1,10,11,1
"org.jfree.chart.axis.PeriodAxis.java2DToValue(double,Rectangle2D,RectangleEdge)",1,3,36,333,4
"org.jfree.chart.axis.PeriodAxis.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.axis.PeriodAxis.refreshTicks(Graphics2D,AxisState,Rectangle2D,RectangleEdge)",1,1,16,4,1
"org.jfree.chart.axis.PeriodAxis.reserveSpace(Graphics2D,Plot,Rectangle2D,RectangleEdge,AxisSpace)",2,7,59,544,9
"org.jfree.chart.axis.PeriodAxis.setAutoRangeTimePeriodClass(Class)",1,1,12,26,1
"org.jfree.chart.axis.PeriodAxis.setFirst(RegularTimePeriod)",1,1,12,46,1
"org.jfree.chart.axis.PeriodAxis.setLabelInfo(PeriodAxisLabelInfo[])",1,1,10,15,1
"org.jfree.chart.axis.PeriodAxis.setLast(RegularTimePeriod)",1,1,12,46,1
"org.jfree.chart.axis.PeriodAxis.setMajorTickTimePeriodClass(Class)",1,1,12,26,1
"org.jfree.chart.axis.PeriodAxis.setMinorTickMarkInsideLength(float)",1,1,11,19,1
"org.jfree.chart.axis.PeriodAxis.setMinorTickMarkOutsideLength(float)",1,1,11,19,1
"org.jfree.chart.axis.PeriodAxis.setMinorTickMarkPaint(Paint)",1,1,12,26,1
"org.jfree.chart.axis.PeriodAxis.setMinorTickMarkStroke(Stroke)",1,1,12,26,1
"org.jfree.chart.axis.PeriodAxis.setMinorTickMarksVisible(boolean)",1,1,12,19,1
"org.jfree.chart.axis.PeriodAxis.setMinorTickTimePeriodClass(Class)",1,1,12,26,1
"org.jfree.chart.axis.PeriodAxis.setRange(Range,boolean,boolean)",1,1,24,220,1
"org.jfree.chart.axis.PeriodAxis.setTimeZone(TimeZone)",1,1,14,95,1
"org.jfree.chart.axis.PeriodAxis.valueToJava2D(double,Rectangle2D,RectangleEdge)",1,3,44,480,5
"org.jfree.chart.axis.PeriodAxis.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.PeriodAxisLabelInfo(Class,DateFormat)",1,1,12,38,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.PeriodAxisLabelInfo(Class,DateFormat,RectangleInsets,Font,Paint,boolean,Stroke,Paint)",1,1,35,230,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.clone()",1,1,12,15,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.createInstance(Date,TimeZone,Locale)",1,1,26,80,2
"org.jfree.chart.axis.PeriodAxisLabelInfo.equals(Object)",11,2,42,438,11
"org.jfree.chart.axis.PeriodAxisLabelInfo.getDateFormat()",1,1,8,11,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.getDividerPaint()",1,1,8,8,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.getDividerStroke()",1,1,8,8,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.getDrawDividers()",1,1,8,11,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.getLabelFont()",1,1,8,8,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.getLabelPaint()",1,1,8,8,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.getPadding()",1,1,8,8,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.getPeriodClass()",1,1,9,8,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.hashCode()",1,1,12,81,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.readObject(ObjectInputStream)",1,1,15,58,1
"org.jfree.chart.axis.PeriodAxisLabelInfo.writeObject(ObjectOutputStream)",1,1,13,58,1
"org.jfree.chart.axis.PeriodAxisLabelInfoTest.testCloning()",1,1,12,87,1
"org.jfree.chart.axis.PeriodAxisLabelInfoTest.testCreateInstance()",1,1,14,145,1
"org.jfree.chart.axis.PeriodAxisLabelInfoTest.testEquals()",1,1,61,"1,562",1
"org.jfree.chart.axis.PeriodAxisLabelInfoTest.testHashCode()",1,1,14,87,1
"org.jfree.chart.axis.PeriodAxisLabelInfoTest.testSerialization()",1,1,10,34,1
"org.jfree.chart.axis.PeriodAxisTest.axisChanged(AxisChangeEvent)",1,1,9,11,1
"org.jfree.chart.axis.PeriodAxisTest.test1932146()",1,1,11,76,1
"org.jfree.chart.axis.PeriodAxisTest.test2490803()",1,1,34,267,1
"org.jfree.chart.axis.PeriodAxisTest.testCloning()",1,1,40,635,1
"org.jfree.chart.axis.PeriodAxisTest.testEquals()",1,1,54,872,1
"org.jfree.chart.axis.PeriodAxisTest.testEqualsWithLocale()",1,1,19,197,1
"org.jfree.chart.axis.PeriodAxisTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.axis.PeriodAxisTest.testSerialization()",1,1,10,41,1
"org.jfree.chart.axis.QuarterDateFormat.QuarterDateFormat()",1,1,6,8,1
"org.jfree.chart.axis.QuarterDateFormat.QuarterDateFormat(TimeZone)",1,1,8,11,1
"org.jfree.chart.axis.QuarterDateFormat.QuarterDateFormat(TimeZone,String[])",1,1,9,15,1
"org.jfree.chart.axis.QuarterDateFormat.QuarterDateFormat(TimeZone,String[],boolean)",1,1,21,68,1
"org.jfree.chart.axis.QuarterDateFormat.equals(Object)",5,1,24,155,5
"org.jfree.chart.axis.QuarterDateFormat.format(Date,StringBuffer,FieldPosition)",1,2,28,212,2
"org.jfree.chart.axis.QuarterDateFormat.parse(String,ParsePosition)",1,1,12,4,1
"org.jfree.chart.axis.QuarterDateFormatTest.testCloning()",1,1,13,116,1
"org.jfree.chart.axis.QuarterDateFormatTest.testEquals()",1,1,30,433,1
"org.jfree.chart.axis.QuarterDateFormatTest.testHashCode()",1,1,14,129,1
"org.jfree.chart.axis.QuarterDateFormatTest.testSerialization()",1,1,10,55,1
"org.jfree.chart.axis.StandardTickUnitSource.StandardTickUnitSource()",1,1,6,4,1
"org.jfree.chart.axis.StandardTickUnitSource.equals(Object)",2,1,14,34,2
"org.jfree.chart.axis.StandardTickUnitSource.getCeilingTickUnit(TickUnit)",1,1,12,8,1
"org.jfree.chart.axis.StandardTickUnitSource.getCeilingTickUnit(double)",1,1,15,64,1
"org.jfree.chart.axis.StandardTickUnitSource.getLargerTickUnit(TickUnit)",1,1,15,76,1
"org.jfree.chart.axis.StandardTickUnitSource.hashCode()",1,1,9,8,1
"org.jfree.chart.axis.StandardTickUnitSourceTest.testEquals()",1,1,9,22,1
"org.jfree.chart.axis.StandardTickUnitSourceTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.axis.SubCategoryAxis.SubCategoryAxis(String)",1,1,9,19,1
"org.jfree.chart.axis.SubCategoryAxis.addSubCategory(Comparable)",1,1,11,39,1
"org.jfree.chart.axis.SubCategoryAxis.draw(Graphics2D,double,Rectangle2D,Rectangle2D,RectangleEdge,PlotRenderingInfo)",2,3,41,260,4
"org.jfree.chart.axis.SubCategoryAxis.drawSubCategoryLabels(Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,AxisState,PlotRenderingInfo)",1,13,103,"1,618",13
"org.jfree.chart.axis.SubCategoryAxis.equals(Object)",6,3,27,215,7
"org.jfree.chart.axis.SubCategoryAxis.getMaxDim(Graphics2D,RectangleEdge)",1,3,29,201,3
"org.jfree.chart.axis.SubCategoryAxis.getSubLabelFont()",1,1,10,8,1
"org.jfree.chart.axis.SubCategoryAxis.getSubLabelPaint()",1,1,10,8,1
"org.jfree.chart.axis.SubCategoryAxis.hashCode()",1,1,9,11,1
"org.jfree.chart.axis.SubCategoryAxis.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.axis.SubCategoryAxis.reserveSpace(Graphics2D,Plot,Rectangle2D,RectangleEdge,AxisSpace)",2,3,32,182,5
"org.jfree.chart.axis.SubCategoryAxis.setSubLabelFont(Font)",1,1,13,34,1
"org.jfree.chart.axis.SubCategoryAxis.setSubLabelPaint(Paint)",1,1,13,34,1
"org.jfree.chart.axis.SubCategoryAxis.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.axis.SubCategoryAxisTest.test2275695()",1,2,21,189,2
"org.jfree.chart.axis.SubCategoryAxisTest.testCloning()",1,1,12,93,1
"org.jfree.chart.axis.SubCategoryAxisTest.testEquals()",1,1,25,253,1
"org.jfree.chart.axis.SubCategoryAxisTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.axis.SubCategoryAxisTest.testSerialization()",1,1,10,39,1
"org.jfree.chart.axis.SymbolAxis.SymbolAxis(String,String[])",1,1,17,89,1
"org.jfree.chart.axis.SymbolAxis.autoAdjustRange()",2,7,59,723,11
"org.jfree.chart.axis.SymbolAxis.draw(Graphics2D,double,Rectangle2D,Rectangle2D,RectangleEdge,PlotRenderingInfo)",1,3,29,114,3
"org.jfree.chart.axis.SymbolAxis.drawGridBands(Graphics2D,Rectangle2D,Rectangle2D,RectangleEdge,List)",1,3,24,120,3
"org.jfree.chart.axis.SymbolAxis.drawGridBandsHorizontal(Graphics2D,Rectangle2D,Rectangle2D,boolean,List)",1,4,47,446,5
"org.jfree.chart.axis.SymbolAxis.drawGridBandsVertical(Graphics2D,Rectangle2D,Rectangle2D,boolean,List)",1,4,47,446,5
"org.jfree.chart.axis.SymbolAxis.equals(Object)",7,1,31,250,7
"org.jfree.chart.axis.SymbolAxis.getGridBandAlternatePaint()",1,1,15,8,1
"org.jfree.chart.axis.SymbolAxis.getGridBandPaint()",1,1,14,8,1
"org.jfree.chart.axis.SymbolAxis.getSymbols()",1,1,10,35,1
"org.jfree.chart.axis.SymbolAxis.isGridBandsVisible()",1,1,11,13,1
"org.jfree.chart.axis.SymbolAxis.readObject(ObjectInputStream)",1,1,14,41,1
"org.jfree.chart.axis.SymbolAxis.refreshTicks(Graphics2D,AxisState,Rectangle2D,RectangleEdge)",1,3,22,77,3
"org.jfree.chart.axis.SymbolAxis.refreshTicksHorizontal(Graphics2D,Rectangle2D,RectangleEdge)",1,6,85,869,11
"org.jfree.chart.axis.SymbolAxis.refreshTicksVertical(Graphics2D,Rectangle2D,RectangleEdge)",1,6,85,869,11
"org.jfree.chart.axis.SymbolAxis.selectAutoTickUnit(Graphics2D,Rectangle2D,RectangleEdge)",1,1,12,8,1
"org.jfree.chart.axis.SymbolAxis.setGridBandAlternatePaint(Paint)",1,1,17,31,1
"org.jfree.chart.axis.SymbolAxis.setGridBandPaint(Paint)",1,1,14,31,1
"org.jfree.chart.axis.SymbolAxis.setGridBandsVisible(boolean)",1,1,16,19,1
"org.jfree.chart.axis.SymbolAxis.valueToString(double)",1,1,17,50,2
"org.jfree.chart.axis.SymbolAxis.writeObject(ObjectOutputStream)",1,1,12,41,1
"org.jfree.chart.axis.SymbolAxisTest.testCloning()",1,1,11,93,1
"org.jfree.chart.axis.SymbolAxisTest.testEquals()",1,1,30,433,1
"org.jfree.chart.axis.SymbolAxisTest.testSerialization()",1,1,10,50,1
"org.jfree.chart.axis.Tick.Tick(String,TextAnchor,TextAnchor,double)",1,1,18,76,1
"org.jfree.chart.axis.Tick.clone()",1,1,12,15,1
"org.jfree.chart.axis.Tick.equals(Object)",7,2,30,228,7
"org.jfree.chart.axis.Tick.getAngle()",1,1,8,11,1
"org.jfree.chart.axis.Tick.getRotationAnchor()",1,1,9,8,1
"org.jfree.chart.axis.Tick.getText()",1,1,8,8,1
"org.jfree.chart.axis.Tick.getTextAnchor()",1,1,8,8,1
"org.jfree.chart.axis.Tick.toString()",1,1,9,8,1
"org.jfree.chart.axis.TickUnit.TickUnit(double)",1,1,8,11,1
"org.jfree.chart.axis.TickUnit.TickUnit(double,int)",1,1,12,26,1
"org.jfree.chart.axis.TickUnit.compareTo(Object)",4,3,27,126,4
"org.jfree.chart.axis.TickUnit.equals(Object)",5,1,24,134,5
"org.jfree.chart.axis.TickUnit.getMinorTickCount()",1,1,10,11,1
"org.jfree.chart.axis.TickUnit.getSize()",1,1,8,11,1
"org.jfree.chart.axis.TickUnit.hashCode()",1,2,11,74,2
"org.jfree.chart.axis.TickUnit.valueToString(double)",1,1,12,11,1
"org.jfree.chart.axis.TickUnits.TickUnits()",1,1,6,8,1
"org.jfree.chart.axis.TickUnits.add(TickUnit)",2,1,13,59,2
"org.jfree.chart.axis.TickUnits.clone()",1,1,14,36,1
"org.jfree.chart.axis.TickUnits.equals(Object)",3,1,18,82,3
"org.jfree.chart.axis.TickUnits.get(int)",1,1,12,19,1
"org.jfree.chart.axis.TickUnits.getCeilingTickUnit(TickUnit)",2,2,20,133,2
"org.jfree.chart.axis.TickUnits.getCeilingTickUnit(double)",1,1,13,19,1
"org.jfree.chart.axis.TickUnits.getLargerTickUnit(TickUnit)",1,1,19,120,2
"org.jfree.chart.axis.TickUnits.size()",1,1,10,15,1
"org.jfree.chart.axis.TickUnitsTest.testCloning()",1,1,12,101,1
"org.jfree.chart.axis.TickUnitsTest.testEquals()",1,1,12,79,1
"org.jfree.chart.axis.TickUnitsTest.testSerialization()",1,1,10,46,1
"org.jfree.chart.axis.ValueAxis.ValueAxis(String,TickUnitSource)",1,1,44,640,1
"org.jfree.chart.axis.ValueAxis.calculateAnchorPoint(ValueTick,double,Rectangle2D,RectangleEdge)",1,5,32,432,5
"org.jfree.chart.axis.ValueAxis.centerRange(double)",1,1,12,93,1
"org.jfree.chart.axis.ValueAxis.clone()",1,1,13,15,1
"org.jfree.chart.axis.ValueAxis.drawAxisLine(Graphics2D,double,Rectangle2D,RectangleEdge)",1,11,93,"1,230",19
"org.jfree.chart.axis.ValueAxis.drawTickMarksAndLabels(Graphics2D,double,Rectangle2D,Rectangle2D,RectangleEdge)",6,16,105,"1,681",22
"org.jfree.chart.axis.ValueAxis.equals(Object)",17,2,62,762,18
"org.jfree.chart.axis.ValueAxis.findMaximumTickLabelHeight(List,Graphics2D,Rectangle2D,boolean)",1,8,47,455,8
"org.jfree.chart.axis.ValueAxis.findMaximumTickLabelWidth(List,Graphics2D,Rectangle2D,boolean)",1,8,47,450,8
"org.jfree.chart.axis.ValueAxis.getAutoRangeMinimumSize()",1,1,11,13,1
"org.jfree.chart.axis.ValueAxis.getAutoTickIndex()",1,1,10,13,1
"org.jfree.chart.axis.ValueAxis.getDefaultAutoRange()",1,1,12,8,1
"org.jfree.chart.axis.ValueAxis.getDownArrow()",1,1,11,8,1
"org.jfree.chart.axis.ValueAxis.getFixedAutoRange()",1,1,10,13,1
"org.jfree.chart.axis.ValueAxis.getLeftArrow()",1,1,11,8,1
"org.jfree.chart.axis.ValueAxis.getLowerBound()",1,1,10,18,1
"org.jfree.chart.axis.ValueAxis.getLowerMargin()",1,1,13,13,1
"org.jfree.chart.axis.ValueAxis.getMinorTickCount()",1,1,12,13,1
"org.jfree.chart.axis.ValueAxis.getRange()",1,1,10,8,1
"org.jfree.chart.axis.ValueAxis.getRightArrow()",1,1,11,8,1
"org.jfree.chart.axis.ValueAxis.getStandardTickUnits()",1,1,10,8,1
"org.jfree.chart.axis.ValueAxis.getUpArrow()",1,1,11,8,1
"org.jfree.chart.axis.ValueAxis.getUpperBound()",1,1,10,18,1
"org.jfree.chart.axis.ValueAxis.getUpperMargin()",1,1,13,13,1
"org.jfree.chart.axis.ValueAxis.isAutoRange()",1,1,11,13,1
"org.jfree.chart.axis.ValueAxis.isAutoTickUnitSelection()",1,1,12,13,1
"org.jfree.chart.axis.ValueAxis.isInverted()",1,1,14,13,1
"org.jfree.chart.axis.ValueAxis.isNegativeArrowVisible()",1,1,11,13,1
"org.jfree.chart.axis.ValueAxis.isPositiveArrowVisible()",1,1,11,13,1
"org.jfree.chart.axis.ValueAxis.isVerticalTickLabels()",1,1,11,13,1
"org.jfree.chart.axis.ValueAxis.lengthToJava2D(double,Rectangle2D,RectangleEdge)",1,1,16,64,1
"org.jfree.chart.axis.ValueAxis.pan(double)",1,1,15,98,1
"org.jfree.chart.axis.ValueAxis.readObject(ObjectInputStream)",1,1,16,72,1
"org.jfree.chart.axis.ValueAxis.reserveSpace(Graphics2D,Plot,Rectangle2D,RectangleEdge,AxisSpace)",3,7,56,456,9
"org.jfree.chart.axis.ValueAxis.resizeRange(double)",1,1,15,30,1
"org.jfree.chart.axis.ValueAxis.resizeRange(double,double)",1,2,24,131,2
"org.jfree.chart.axis.ValueAxis.resizeRange2(double,double)",1,2,27,144,2
"org.jfree.chart.axis.ValueAxis.setAutoRange(boolean)",1,1,12,15,1
"org.jfree.chart.axis.ValueAxis.setAutoRange(boolean,boolean)",1,3,18,46,3
"org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize(double)",1,1,11,15,1
"org.jfree.chart.axis.ValueAxis.setAutoRangeMinimumSize(double,boolean)",2,4,25,108,5
"org.jfree.chart.axis.ValueAxis.setAutoTickIndex(int)",1,1,10,15,1
"org.jfree.chart.axis.ValueAxis.setAutoTickUnitSelection(boolean)",1,1,12,15,1
"org.jfree.chart.axis.ValueAxis.setAutoTickUnitSelection(boolean,boolean)",1,3,17,49,3
"org.jfree.chart.axis.ValueAxis.setDefaultAutoRange(Range)",1,1,15,26,1
"org.jfree.chart.axis.ValueAxis.setDownArrow(Shape)",1,1,14,26,1
"org.jfree.chart.axis.ValueAxis.setFixedAutoRange(double)",1,2,14,33,2
"org.jfree.chart.axis.ValueAxis.setInverted(boolean)",1,2,14,38,2
"org.jfree.chart.axis.ValueAxis.setLeftArrow(Shape)",1,1,14,26,1
"org.jfree.chart.axis.ValueAxis.setLowerBound(double)",1,2,16,83,2
"org.jfree.chart.axis.ValueAxis.setLowerMargin(double)",1,2,18,36,2
"org.jfree.chart.axis.ValueAxis.setMinorTickCount(int)",1,1,14,19,1
"org.jfree.chart.axis.ValueAxis.setNegativeArrowVisible(boolean)",1,1,13,22,1
"org.jfree.chart.axis.ValueAxis.setPositiveArrowVisible(boolean)",1,1,13,19,1
"org.jfree.chart.axis.ValueAxis.setRange(Range)",1,1,13,13,1
"org.jfree.chart.axis.ValueAxis.setRange(Range,boolean,boolean)",2,2,30,122,4
"org.jfree.chart.axis.ValueAxis.setRange(double,double)",1,1,14,22,1
"org.jfree.chart.axis.ValueAxis.setRangeAboutValue(double,double)",1,1,10,55,1
"org.jfree.chart.axis.ValueAxis.setRangeWithMargins(Range)",1,1,10,13,1
"org.jfree.chart.axis.ValueAxis.setRangeWithMargins(Range,boolean,boolean)",1,1,19,50,1
"org.jfree.chart.axis.ValueAxis.setRangeWithMargins(double,double)",1,1,11,22,1
"org.jfree.chart.axis.ValueAxis.setRightArrow(Shape)",1,1,14,26,1
"org.jfree.chart.axis.ValueAxis.setStandardTickUnits(TickUnitSource)",1,1,16,19,1
"org.jfree.chart.axis.ValueAxis.setUpArrow(Shape)",1,1,14,26,1
"org.jfree.chart.axis.ValueAxis.setUpperBound(double)",1,2,16,82,2
"org.jfree.chart.axis.ValueAxis.setUpperMargin(double)",1,2,18,36,2
"org.jfree.chart.axis.ValueAxis.setVerticalTickLabels(boolean)",1,2,16,38,2
"org.jfree.chart.axis.ValueAxis.writeObject(ObjectOutputStream)",1,1,14,72,1
"org.jfree.chart.axis.ValueAxis.zoomRange(double,double)",1,3,22,272,4
"org.jfree.chart.axis.ValueAxisTest.test3555275()",1,1,24,280,1
"org.jfree.chart.axis.ValueAxisTest.testAxisMargins()",1,1,21,227,1
"org.jfree.chart.axis.ValueAxisTest.testCloning()",1,1,11,77,1
"org.jfree.chart.axis.ValueAxisTest.testEquals()",1,1,96,"1,271",1
"org.jfree.chart.axis.ValueTick.ValueTick(TickType,double,String,TextAnchor,TextAnchor,double)",1,1,21,55,1
"org.jfree.chart.axis.ValueTick.ValueTick(double,String,TextAnchor,TextAnchor,double)",1,1,16,48,1
"org.jfree.chart.axis.ValueTick.equals(Object)",5,1,24,155,5
"org.jfree.chart.axis.ValueTick.getTickType()",1,1,10,8,1
"org.jfree.chart.axis.ValueTick.getValue()",1,1,8,11,1
"org.jfree.chart.block.AbstractBlock.AbstractBlock()",1,1,12,83,1
"org.jfree.chart.block.AbstractBlock.arrange(Graphics2D)",1,1,11,11,1
"org.jfree.chart.block.AbstractBlock.arrange(Graphics2D,RectangleConstraint)",1,1,13,24,1
"org.jfree.chart.block.AbstractBlock.calculateTotalHeight(double)",1,1,14,79,1
"org.jfree.chart.block.AbstractBlock.calculateTotalWidth(double)",1,1,14,79,1
"org.jfree.chart.block.AbstractBlock.clone()",1,2,18,84,2
"org.jfree.chart.block.AbstractBlock.drawBorder(Graphics2D,Rectangle2D)",1,1,9,19,1
"org.jfree.chart.block.AbstractBlock.equals(Object)",10,1,39,386,10
"org.jfree.chart.block.AbstractBlock.getBounds()",1,1,10,8,1
"org.jfree.chart.block.AbstractBlock.getContentXOffset()",1,1,11,41,1
"org.jfree.chart.block.AbstractBlock.getContentYOffset()",1,1,11,41,1
"org.jfree.chart.block.AbstractBlock.getFrame()",1,1,11,8,1
"org.jfree.chart.block.AbstractBlock.getHeight()",1,1,12,13,1
"org.jfree.chart.block.AbstractBlock.getID()",1,1,10,8,1
"org.jfree.chart.block.AbstractBlock.getMargin()",1,1,10,8,1
"org.jfree.chart.block.AbstractBlock.getPadding()",1,1,10,8,1
"org.jfree.chart.block.AbstractBlock.getWidth()",1,1,12,13,1
"org.jfree.chart.block.AbstractBlock.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.block.AbstractBlock.setBorder(double,double,double,double)",1,1,12,38,1
"org.jfree.chart.block.AbstractBlock.setBounds(Rectangle2D)",1,1,11,22,1
"org.jfree.chart.block.AbstractBlock.setFrame(BlockFrame)",1,1,12,22,1
"org.jfree.chart.block.AbstractBlock.setHeight(double)",1,1,10,15,1
"org.jfree.chart.block.AbstractBlock.setID(String)",1,1,10,11,1
"org.jfree.chart.block.AbstractBlock.setMargin(RectangleInsets)",1,1,12,22,1
"org.jfree.chart.block.AbstractBlock.setMargin(double,double,double,double)",1,1,14,38,1
"org.jfree.chart.block.AbstractBlock.setPadding(RectangleInsets)",1,1,12,22,1
"org.jfree.chart.block.AbstractBlock.setPadding(double,double,double,double)",1,1,12,38,1
"org.jfree.chart.block.AbstractBlock.setWidth(double)",1,1,10,15,1
"org.jfree.chart.block.AbstractBlock.toContentConstraint(RectangleConstraint)",2,1,24,192,2
"org.jfree.chart.block.AbstractBlock.trimBorder(Rectangle2D)",1,1,13,22,1
"org.jfree.chart.block.AbstractBlock.trimMargin(Rectangle2D)",1,1,13,18,1
"org.jfree.chart.block.AbstractBlock.trimPadding(Rectangle2D)",1,1,13,18,1
"org.jfree.chart.block.AbstractBlock.trimToContentHeight(Range)",2,3,14,134,4
"org.jfree.chart.block.AbstractBlock.trimToContentHeight(double)",1,1,17,88,1
"org.jfree.chart.block.AbstractBlock.trimToContentWidth(Range)",2,3,14,134,4
"org.jfree.chart.block.AbstractBlock.trimToContentWidth(double)",1,1,17,88,1
"org.jfree.chart.block.AbstractBlock.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.block.AbstractBlockTest.testCloning()",1,2,23,271,2
"org.jfree.chart.block.AbstractBlockTest.testEquals()",1,1,46,817,1
"org.jfree.chart.block.AbstractBlockTest.testSerialization()",1,1,9,31,1
"org.jfree.chart.block.BlockBorder.BlockBorder()",1,1,6,8,1
"org.jfree.chart.block.BlockBorder.BlockBorder(Paint)",1,1,8,23,1
"org.jfree.chart.block.BlockBorder.BlockBorder(RectangleInsets,Paint)",1,1,12,41,1
"org.jfree.chart.block.BlockBorder.BlockBorder(double,double,double,double)",1,1,11,43,1
"org.jfree.chart.block.BlockBorder.BlockBorder(double,double,double,double,Paint)",1,1,13,43,1
"org.jfree.chart.block.BlockBorder.draw(Graphics2D,Rectangle2D)",1,5,37,524,5
"org.jfree.chart.block.BlockBorder.equals(Object)",5,1,24,145,5
"org.jfree.chart.block.BlockBorder.getInsets()",1,1,9,8,1
"org.jfree.chart.block.BlockBorder.getPaint()",1,1,8,8,1
"org.jfree.chart.block.BlockBorder.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.block.BlockBorder.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.block.BlockBorderTest.testCloning()",1,1,8,15,1
"org.jfree.chart.block.BlockBorderTest.testEquals()",1,1,26,289,1
"org.jfree.chart.block.BlockBorderTest.testSerialization()",1,1,11,81,1
"org.jfree.chart.block.BlockContainer.BlockContainer()",1,1,6,8,1
"org.jfree.chart.block.BlockContainer.BlockContainer(Arrangement)",1,1,11,30,1
"org.jfree.chart.block.BlockContainer.add(Block)",1,1,8,11,1
"org.jfree.chart.block.BlockContainer.add(Block,Object)",1,1,10,34,1
"org.jfree.chart.block.BlockContainer.arrange(Graphics2D,RectangleConstraint)",1,1,13,22,1
"org.jfree.chart.block.BlockContainer.clear()",1,1,7,22,1
"org.jfree.chart.block.BlockContainer.clone()",1,1,13,15,1
"org.jfree.chart.block.BlockContainer.draw(Graphics2D,Rectangle2D)",1,1,10,15,1
"org.jfree.chart.block.BlockContainer.draw(Graphics2D,Rectangle2D,Object)",1,6,49,439,7
"org.jfree.chart.block.BlockContainer.equals(Object)",6,1,27,181,6
"org.jfree.chart.block.BlockContainer.getArrangement()",1,1,8,8,1
"org.jfree.chart.block.BlockContainer.getBlocks()",1,1,9,11,1
"org.jfree.chart.block.BlockContainer.isEmpty()",1,1,9,15,1
"org.jfree.chart.block.BlockContainer.setArrangement(Arrangement)",1,1,9,22,1
"org.jfree.chart.block.BlockContainerTest.testCloning()",1,1,12,101,1
"org.jfree.chart.block.BlockContainerTest.testEquals()",1,1,18,164,1
"org.jfree.chart.block.BlockContainerTest.testSerialization()",1,1,10,43,1
"org.jfree.chart.block.BlockParams.BlockParams()",1,1,8,28,1
"org.jfree.chart.block.BlockParams.getGenerateEntities()",1,1,10,11,1
"org.jfree.chart.block.BlockParams.getTranslateX()",1,1,9,11,1
"org.jfree.chart.block.BlockParams.getTranslateY()",1,1,9,11,1
"org.jfree.chart.block.BlockParams.setGenerateEntities(boolean)",1,1,8,15,1
"org.jfree.chart.block.BlockParams.setTranslateX(double)",1,1,9,15,1
"org.jfree.chart.block.BlockParams.setTranslateY(double)",1,1,9,15,1
"org.jfree.chart.block.BlockResult.BlockResult()",1,1,6,8,1
"org.jfree.chart.block.BlockResult.getEntityCollection()",1,1,9,8,1
"org.jfree.chart.block.BlockResult.setEntityCollection(EntityCollection)",1,1,8,11,1
"org.jfree.chart.block.BorderArrangement.BorderArrangement()",1,1,5,0,1
"org.jfree.chart.block.BorderArrangement.add(Block,Object)",1,1,30,181,6
"org.jfree.chart.block.BorderArrangement.arrange(BlockContainer,Graphics2D,RectangleConstraint)",9,11,56,615,13
"org.jfree.chart.block.BorderArrangement.arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)",1,11,76,"1,376",11
"org.jfree.chart.block.BorderArrangement.arrangeFN(BlockContainer,Graphics2D,double)",1,6,58,954,6
"org.jfree.chart.block.BorderArrangement.arrangeFR(BlockContainer,Graphics2D,RectangleConstraint)",2,2,21,123,2
"org.jfree.chart.block.BorderArrangement.arrangeNN(BlockContainer,Graphics2D)",1,11,65,"1,144",11
"org.jfree.chart.block.BorderArrangement.arrangeRR(BlockContainer,Range,Range,Graphics2D)",1,11,81,"1,516",11
"org.jfree.chart.block.BorderArrangement.clear()",1,1,11,53,1
"org.jfree.chart.block.BorderArrangement.equals(Object)",8,1,33,280,8
"org.jfree.chart.block.BorderArrangementTest.testBugX()",1,1,28,406,1
"org.jfree.chart.block.BorderArrangementTest.testCloning()",1,1,8,15,1
"org.jfree.chart.block.BorderArrangementTest.testEquals()",1,1,30,475,1
"org.jfree.chart.block.BorderArrangementTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.block.BorderArrangementTest.testSizing()",1,1,298,"6,091",1
"org.jfree.chart.block.BorderArrangementTest.testSizingWithWidthConstraint()",1,1,289,"5,884",1
"org.jfree.chart.block.CenterArrangement.CenterArrangement()",1,1,5,0,1
"org.jfree.chart.block.CenterArrangement.add(Block,Object)",1,1,13,2,1
"org.jfree.chart.block.CenterArrangement.arrange(BlockContainer,Graphics2D,RectangleConstraint)",13,9,52,458,13
"org.jfree.chart.block.CenterArrangement.arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)",1,1,15,15,1
"org.jfree.chart.block.CenterArrangement.arrangeFN(BlockContainer,Graphics2D,RectangleConstraint)",1,1,21,176,1
"org.jfree.chart.block.CenterArrangement.arrangeFR(BlockContainer,Graphics2D,RectangleConstraint)",2,2,22,106,2
"org.jfree.chart.block.CenterArrangement.arrangeNF(BlockContainer,Graphics2D,RectangleConstraint)",1,1,15,11,1
"org.jfree.chart.block.CenterArrangement.arrangeNN(BlockContainer,Graphics2D)",1,1,16,102,1
"org.jfree.chart.block.CenterArrangement.arrangeRF(BlockContainer,Graphics2D,RectangleConstraint)",2,2,22,106,2
"org.jfree.chart.block.CenterArrangement.arrangeRN(BlockContainer,Graphics2D,RectangleConstraint)",2,2,24,92,2
"org.jfree.chart.block.CenterArrangement.arrangeRR(BlockContainer,Graphics2D,RectangleConstraint)",2,2,24,92,2
"org.jfree.chart.block.CenterArrangement.clear()",1,1,7,2,1
"org.jfree.chart.block.CenterArrangement.equals(Object)",3,1,17,55,3
"org.jfree.chart.block.ColorBlock.ColorBlock(Paint,double,double)",1,1,13,44,1
"org.jfree.chart.block.ColorBlock.arrange(Graphics2D,RectangleConstraint)",1,1,14,19,1
"org.jfree.chart.block.ColorBlock.draw(Graphics2D,Rectangle2D)",1,1,15,75,1
"org.jfree.chart.block.ColorBlock.draw(Graphics2D,Rectangle2D,Object)",1,1,14,15,1
"org.jfree.chart.block.ColorBlock.equals(Object)",4,1,21,114,4
"org.jfree.chart.block.ColorBlock.getPaint()",1,1,10,8,1
"org.jfree.chart.block.ColorBlock.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.block.ColorBlock.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.block.ColorBlockTest.testCloning()",1,2,26,336,2
"org.jfree.chart.block.ColorBlockTest.testEquals()",1,1,22,274,1
"org.jfree.chart.block.ColorBlockTest.testSerialization()",1,1,11,72,1
"org.jfree.chart.block.ColumnArrangement.ColumnArrangement()",1,1,5,0,1
"org.jfree.chart.block.ColumnArrangement.ColumnArrangement(HorizontalAlignment,VerticalAlignment,double,double)",1,1,16,51,1
"org.jfree.chart.block.ColumnArrangement.add(Block,Object)",1,1,13,2,1
"org.jfree.chart.block.ColumnArrangement.arrange(BlockContainer,Graphics2D,RectangleConstraint)",13,10,52,432,13
"org.jfree.chart.block.ColumnArrangement.arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)",1,1,17,15,1
"org.jfree.chart.block.ColumnArrangement.arrangeNF(BlockContainer,Graphics2D,RectangleConstraint)",1,4,63,713,5
"org.jfree.chart.block.ColumnArrangement.arrangeNN(BlockContainer,Graphics2D)",1,4,48,598,8
"org.jfree.chart.block.ColumnArrangement.arrangeRF(BlockContainer,Graphics2D,RectangleConstraint)",2,2,23,106,2
"org.jfree.chart.block.ColumnArrangement.arrangeRR(BlockContainer,Graphics2D,RectangleConstraint)",2,2,25,92,2
"org.jfree.chart.block.ColumnArrangement.clear()",1,1,7,2,1
"org.jfree.chart.block.ColumnArrangement.equals(Object)",7,1,30,215,7
"org.jfree.chart.block.ColumnArrangementTest.testCloning()",1,1,8,15,1
"org.jfree.chart.block.ColumnArrangementTest.testEquals()",1,1,36,400,1
"org.jfree.chart.block.ColumnArrangementTest.testSerialization()",1,1,10,41,1
"org.jfree.chart.block.EmptyBlock.EmptyBlock(double,double)",1,1,10,18,1
"org.jfree.chart.block.EmptyBlock.arrange(Graphics2D,RectangleConstraint)",1,1,15,33,1
"org.jfree.chart.block.EmptyBlock.clone()",1,1,11,11,1
"org.jfree.chart.block.EmptyBlock.draw(Graphics2D,Rectangle2D)",1,1,11,15,1
"org.jfree.chart.block.EmptyBlock.draw(Graphics2D,Rectangle2D,Object)",1,1,16,25,1
"org.jfree.chart.block.EmptyBlockTest.testCloning()",1,2,17,118,2
"org.jfree.chart.block.EmptyBlockTest.testEquals()",1,1,18,172,1
"org.jfree.chart.block.EmptyBlockTest.testSerialization()",1,1,9,31,1
"org.jfree.chart.block.FlowArrangement.FlowArrangement()",1,1,6,18,1
"org.jfree.chart.block.FlowArrangement.FlowArrangement(HorizontalAlignment,VerticalAlignment,double,double)",1,1,15,51,1
"org.jfree.chart.block.FlowArrangement.add(Block,Object)",1,1,13,2,1
"org.jfree.chart.block.FlowArrangement.arrange(BlockContainer,Graphics2D,RectangleConstraint)",13,12,52,504,13
"org.jfree.chart.block.FlowArrangement.arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)",1,1,15,15,1
"org.jfree.chart.block.FlowArrangement.arrangeFN(BlockContainer,Graphics2D,RectangleConstraint)",1,4,58,676,4
"org.jfree.chart.block.FlowArrangement.arrangeFR(BlockContainer,Graphics2D,RectangleConstraint)",2,2,23,106,2
"org.jfree.chart.block.FlowArrangement.arrangeNF(BlockContainer,Graphics2D,RectangleConstraint)",1,1,15,11,1
"org.jfree.chart.block.FlowArrangement.arrangeNN(BlockContainer,Graphics2D)",1,4,47,598,8
"org.jfree.chart.block.FlowArrangement.arrangeRF(BlockContainer,Graphics2D,RectangleConstraint)",2,2,23,106,2
"org.jfree.chart.block.FlowArrangement.arrangeRN(BlockContainer,Graphics2D,RectangleConstraint)",2,2,25,92,2
"org.jfree.chart.block.FlowArrangement.arrangeRR(BlockContainer,Graphics2D,RectangleConstraint)",2,2,25,92,2
"org.jfree.chart.block.FlowArrangement.clear()",1,1,7,2,1
"org.jfree.chart.block.FlowArrangement.equals(Object)",7,1,30,215,7
"org.jfree.chart.block.FlowArrangementTest.testCloning()",1,1,8,15,1
"org.jfree.chart.block.FlowArrangementTest.testEquals()",1,1,36,400,1
"org.jfree.chart.block.FlowArrangementTest.testSerialization()",1,1,10,41,1
"org.jfree.chart.block.GridArrangement.GridArrangement(int,int)",1,1,10,25,1
"org.jfree.chart.block.GridArrangement.add(Block,Object)",1,1,13,2,1
"org.jfree.chart.block.GridArrangement.arrange(BlockContainer,Graphics2D,RectangleConstraint)",13,13,56,513,13
"org.jfree.chart.block.GridArrangement.arrangeFF(BlockContainer,Graphics2D,RectangleConstraint)",4,4,29,379,5
"org.jfree.chart.block.GridArrangement.arrangeFN(BlockContainer,Graphics2D,RectangleConstraint)",4,4,31,390,5
"org.jfree.chart.block.GridArrangement.arrangeFR(BlockContainer,Graphics2D,RectangleConstraint)",2,2,22,127,2
"org.jfree.chart.block.GridArrangement.arrangeNF(BlockContainer,Graphics2D,RectangleConstraint)",4,4,31,390,5
"org.jfree.chart.block.GridArrangement.arrangeNN(BlockContainer,Graphics2D)",1,3,26,254,3
"org.jfree.chart.block.GridArrangement.arrangeNR(BlockContainer,Graphics2D,RectangleConstraint)",2,2,22,127,2
"org.jfree.chart.block.GridArrangement.arrangeRF(BlockContainer,Graphics2D,RectangleConstraint)",2,2,22,127,2
"org.jfree.chart.block.GridArrangement.arrangeRN(BlockContainer,Graphics2D,RectangleConstraint)",2,2,22,127,2
"org.jfree.chart.block.GridArrangement.arrangeRR(BlockContainer,Graphics2D,RectangleConstraint)",4,4,44,347,4
"org.jfree.chart.block.GridArrangement.clear()",1,1,7,2,1
"org.jfree.chart.block.GridArrangement.equals(Object)",5,1,24,134,5
"org.jfree.chart.block.GridArrangementTest.createTestContainer1()",1,1,10,100,1
"org.jfree.chart.block.GridArrangementTest.testCloning()",1,1,8,24,1
"org.jfree.chart.block.GridArrangementTest.testEquals()",1,1,18,172,1
"org.jfree.chart.block.GridArrangementTest.testFN()",1,1,13,100,1
"org.jfree.chart.block.GridArrangementTest.testGridNotFull_FF()",1,1,12,121,1
"org.jfree.chart.block.GridArrangementTest.testGridNotFull_FN()",1,1,12,121,1
"org.jfree.chart.block.GridArrangementTest.testGridNotFull_FR()",1,1,13,127,1
"org.jfree.chart.block.GridArrangementTest.testGridNotFull_NN()",1,1,12,110,1
"org.jfree.chart.block.GridArrangementTest.testNF()",1,1,12,80,1
"org.jfree.chart.block.GridArrangementTest.testNN()",1,1,10,64,1
"org.jfree.chart.block.GridArrangementTest.testNR()",1,1,12,91,1
"org.jfree.chart.block.GridArrangementTest.testNullBlock_FF()",1,1,11,102,1
"org.jfree.chart.block.GridArrangementTest.testNullBlock_FN()",1,1,11,104,1
"org.jfree.chart.block.GridArrangementTest.testNullBlock_FR()",1,1,12,108,1
"org.jfree.chart.block.GridArrangementTest.testNullBlock_NN()",1,1,11,89,1
"org.jfree.chart.block.GridArrangementTest.testRF()",1,1,12,88,1
"org.jfree.chart.block.GridArrangementTest.testRN()",1,1,12,91,1
"org.jfree.chart.block.GridArrangementTest.testRR()",1,1,12,98,1
"org.jfree.chart.block.GridArrangementTest.testSerialization()",1,1,9,31,1
"org.jfree.chart.block.LabelBlock.LabelBlock(String)",1,1,8,28,1
"org.jfree.chart.block.LabelBlock.LabelBlock(String,Font)",1,1,9,15,1
"org.jfree.chart.block.LabelBlock.LabelBlock(String,Font,Paint)",1,1,17,118,1
"org.jfree.chart.block.LabelBlock.arrange(Graphics2D,RectangleConstraint)",1,1,16,64,1
"org.jfree.chart.block.LabelBlock.clone()",1,1,11,11,1
"org.jfree.chart.block.LabelBlock.draw(Graphics2D,Rectangle2D)",1,1,10,15,1
"org.jfree.chart.block.LabelBlock.draw(Graphics2D,Rectangle2D,Object)",1,5,43,471,7
"org.jfree.chart.block.LabelBlock.equals(Object)",9,1,36,376,9
"org.jfree.chart.block.LabelBlock.getContentAlignmentPoint()",1,1,10,8,1
"org.jfree.chart.block.LabelBlock.getFont()",1,1,10,8,1
"org.jfree.chart.block.LabelBlock.getPaint()",1,1,10,8,1
"org.jfree.chart.block.LabelBlock.getTextAnchor()",1,1,10,8,1
"org.jfree.chart.block.LabelBlock.getToolTipText()",1,1,10,8,1
"org.jfree.chart.block.LabelBlock.getURLText()",1,1,10,8,1
"org.jfree.chart.block.LabelBlock.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.block.LabelBlock.setContentAlignmentPoint(TextBlockAnchor)",1,1,12,22,1
"org.jfree.chart.block.LabelBlock.setFont(Font)",1,1,12,55,1
"org.jfree.chart.block.LabelBlock.setPaint(Paint)",1,1,13,58,1
"org.jfree.chart.block.LabelBlock.setTextAnchor(RectangleAnchor)",1,1,10,11,1
"org.jfree.chart.block.LabelBlock.setToolTipText(String)",1,1,10,11,1
"org.jfree.chart.block.LabelBlock.setURLText(String)",1,1,10,11,1
"org.jfree.chart.block.LabelBlock.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.block.LabelBlockTest.testCloning()",1,1,12,106,1
"org.jfree.chart.block.LabelBlockTest.testEquals()",1,1,46,696,1
"org.jfree.chart.block.LabelBlockTest.testSerialization()",1,1,12,87,1
"org.jfree.chart.block.LineBorder.LineBorder()",1,1,7,30,1
"org.jfree.chart.block.LineBorder.LineBorder(Paint,Stroke,RectangleInsets)",1,1,15,68,1
"org.jfree.chart.block.LineBorder.draw(Graphics2D,Rectangle2D)",2,5,48,795,7
"org.jfree.chart.block.LineBorder.equals(Object)",6,1,27,193,6
"org.jfree.chart.block.LineBorder.getInsets()",1,1,9,8,1
"org.jfree.chart.block.LineBorder.getPaint()",1,1,8,8,1
"org.jfree.chart.block.LineBorder.getStroke()",1,1,8,8,1
"org.jfree.chart.block.LineBorder.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.block.LineBorder.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.block.LineBorderTest.testCloning()",1,1,8,15,1
"org.jfree.chart.block.LineBorderTest.testEquals()",1,1,30,448,1
"org.jfree.chart.block.LineBorderTest.testSerialization()",1,1,11,83,1
"org.jfree.chart.block.RectangleConstraint.RectangleConstraint(Range,Range)",1,1,10,25,1
"org.jfree.chart.block.RectangleConstraint.RectangleConstraint(Range,double)",1,1,11,33,1
"org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double,Range)",1,1,11,33,1
"org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double,Range,LengthConstraintType,double,Range,LengthConstraintType)",1,1,23,112,1
"org.jfree.chart.block.RectangleConstraint.RectangleConstraint(double,double)",1,1,10,33,1
"org.jfree.chart.block.RectangleConstraint.calculateConstrainedSize(Size2D)",1,10,48,597,13
"org.jfree.chart.block.RectangleConstraint.getHeight()",1,1,8,11,1
"org.jfree.chart.block.RectangleConstraint.getHeightConstraintType()",1,1,8,8,1
"org.jfree.chart.block.RectangleConstraint.getHeightRange()",1,1,8,8,1
"org.jfree.chart.block.RectangleConstraint.getWidth()",1,1,8,11,1
"org.jfree.chart.block.RectangleConstraint.getWidthConstraintType()",1,1,8,8,1
"org.jfree.chart.block.RectangleConstraint.getWidthRange()",1,1,8,8,1
"org.jfree.chart.block.RectangleConstraint.toFixedHeight(double)",1,1,13,48,1
"org.jfree.chart.block.RectangleConstraint.toFixedWidth(double)",1,1,13,48,1
"org.jfree.chart.block.RectangleConstraint.toRangeHeight(Range)",1,1,14,57,1
"org.jfree.chart.block.RectangleConstraint.toRangeWidth(Range)",1,1,14,57,1
"org.jfree.chart.block.RectangleConstraint.toString()",1,1,12,44,1
"org.jfree.chart.block.RectangleConstraint.toUnconstrainedHeight()",2,1,16,79,2
"org.jfree.chart.block.RectangleConstraint.toUnconstrainedWidth()",2,1,16,83,2
"org.jfree.chart.block.RectangleConstraintTest.testCalculateConstrainedSize()",1,1,73,"1,034",1
"org.jfree.chart.date.SerialDate.SerialDate()",1,1,5,0,1
"org.jfree.chart.date.SerialDate.addDays(int,SerialDate)",1,1,13,36,1
"org.jfree.chart.date.SerialDate.addMonths(int,SerialDate)",2,1,22,257,3
"org.jfree.chart.date.SerialDate.addYears(int,SerialDate)",2,1,20,180,3
"org.jfree.chart.date.SerialDate.createInstance(Date)",1,1,13,70,1
"org.jfree.chart.date.SerialDate.createInstance(int)",1,1,11,15,1
"org.jfree.chart.date.SerialDate.createInstance(int,int,int)",1,1,13,30,1
"org.jfree.chart.date.SerialDate.getDescription()",1,1,10,8,1
"org.jfree.chart.date.SerialDate.getEndOfCurrentMonth(SerialDate)",1,1,11,44,1
"org.jfree.chart.date.SerialDate.getFollowingDayOfWeek(int)",1,1,12,15,1
"org.jfree.chart.date.SerialDate.getFollowingDayOfWeek(int,SerialDate)",2,2,28,169,3
"org.jfree.chart.date.SerialDate.getMonths()",1,1,8,11,1
"org.jfree.chart.date.SerialDate.getMonths(boolean)",2,2,16,39,2
"org.jfree.chart.date.SerialDate.getNearestDayOfWeek(int)",1,1,10,15,1
"org.jfree.chart.date.SerialDate.getNearestDayOfWeek(int,SerialDate)",2,1,26,190,4
"org.jfree.chart.date.SerialDate.getPreviousDayOfWeek(int)",1,1,12,15,1
"org.jfree.chart.date.SerialDate.getPreviousDayOfWeek(int,SerialDate)",2,2,26,174,3
"org.jfree.chart.date.SerialDate.isLeapYear(int)",4,1,21,134,4
"org.jfree.chart.date.SerialDate.isValidMonthCode(int)",3,2,27,158,3
"org.jfree.chart.date.SerialDate.isValidWeekInMonthCode(int)",3,2,18,84,3
"org.jfree.chart.date.SerialDate.isValidWeekdayCode(int)",3,2,23,104,3
"org.jfree.chart.date.SerialDate.lastDayOfMonth(int,int)",3,2,21,104,3
"org.jfree.chart.date.SerialDate.leapYearCount(int)",1,1,16,114,1
"org.jfree.chart.date.SerialDate.monthCodeToQuarter(int)",6,2,25,199,6
"org.jfree.chart.date.SerialDate.monthCodeToString(int)",1,1,13,19,1
"org.jfree.chart.date.SerialDate.monthCodeToString(int,boolean)",2,2,26,114,3
"org.jfree.chart.date.SerialDate.relativeToString(int)",5,2,17,78,5
"org.jfree.chart.date.SerialDate.setDescription(String)",1,1,9,11,1
"org.jfree.chart.date.SerialDate.stringToMonthCode(String)",5,3,39,295,7
"org.jfree.chart.date.SerialDate.stringToWeekdayCode(String)",4,2,26,192,4
"org.jfree.chart.date.SerialDate.toString()",1,1,9,22,1
"org.jfree.chart.date.SerialDate.weekInMonthToString(int)",7,2,20,118,7
"org.jfree.chart.date.SerialDate.weekdayCodeToString(int)",1,1,13,28,1
"org.jfree.chart.date.SpreadsheetDate.SpreadsheetDate(int)",2,3,52,716,7
"org.jfree.chart.date.SpreadsheetDate.SpreadsheetDate(int,int,int)",4,2,31,271,7
"org.jfree.chart.date.SpreadsheetDate.calcSerial(int,int,int)",1,2,22,162,3
"org.jfree.chart.date.SpreadsheetDate.compare(SerialDate)",1,1,13,24,1
"org.jfree.chart.date.SpreadsheetDate.compareTo(Object)",1,1,12,11,1
"org.jfree.chart.date.SpreadsheetDate.equals(Object)",2,2,19,55,2
"org.jfree.chart.date.SpreadsheetDate.getDayOfMonth()",1,1,9,11,1
"org.jfree.chart.date.SpreadsheetDate.getDayOfWeek()",1,1,14,36,1
"org.jfree.chart.date.SpreadsheetDate.getMonth()",1,1,9,11,1
"org.jfree.chart.date.SpreadsheetDate.getYYYY()",1,1,9,11,1
"org.jfree.chart.date.SpreadsheetDate.hashCode()",1,1,9,8,1
"org.jfree.chart.date.SpreadsheetDate.isAfter(SerialDate)",1,1,13,24,1
"org.jfree.chart.date.SpreadsheetDate.isBefore(SerialDate)",1,1,13,24,1
"org.jfree.chart.date.SpreadsheetDate.isInRange(SerialDate,SerialDate)",1,1,14,19,1
"org.jfree.chart.date.SpreadsheetDate.isInRange(SerialDate,SerialDate,int)",4,1,33,313,8
"org.jfree.chart.date.SpreadsheetDate.isOn(SerialDate)",1,1,13,24,1
"org.jfree.chart.date.SpreadsheetDate.isOnOrAfter(SerialDate)",1,1,13,24,1
"org.jfree.chart.date.SpreadsheetDate.isOnOrBefore(SerialDate)",1,1,12,24,1
"org.jfree.chart.date.SpreadsheetDate.toDate()",1,1,11,53,1
"org.jfree.chart.date.SpreadsheetDate.toSerial()",1,1,11,11,1
"org.jfree.chart.editor.ChartEditorManager.ChartEditorManager()",1,1,6,0,1
"org.jfree.chart.editor.ChartEditorManager.getChartEditor(JFreeChart)",1,1,10,15,1
"org.jfree.chart.editor.ChartEditorManager.getChartEditorFactory()",1,1,8,8,1
"org.jfree.chart.editor.ChartEditorManager.setChartEditorFactory(ChartEditorFactory)",1,1,9,22,1
"org.jfree.chart.editor.DefaultAxisEditor.DefaultAxisEditor(Axis)",1,1,103,"1,494",1
"org.jfree.chart.editor.DefaultAxisEditor.actionPerformed(ActionEvent)",1,4,25,79,4
"org.jfree.chart.editor.DefaultAxisEditor.attemptLabelFontSelection()",1,2,15,144,2
"org.jfree.chart.editor.DefaultAxisEditor.attemptModifyLabelPaint()",1,2,12,64,2
"org.jfree.chart.editor.DefaultAxisEditor.attemptTickLabelFontSelection()",1,2,16,144,2
"org.jfree.chart.editor.DefaultAxisEditor.getInstance(Axis)",4,1,27,83,4
"org.jfree.chart.editor.DefaultAxisEditor.getLabel()",1,1,8,11,1
"org.jfree.chart.editor.DefaultAxisEditor.getLabelFont()",1,1,8,8,1
"org.jfree.chart.editor.DefaultAxisEditor.getLabelInsets()",1,1,9,39,2
"org.jfree.chart.editor.DefaultAxisEditor.getLabelPaint()",1,1,8,11,1
"org.jfree.chart.editor.DefaultAxisEditor.getOtherTabs()",1,1,8,8,1
"org.jfree.chart.editor.DefaultAxisEditor.getTickLabelFont()",1,1,8,8,1
"org.jfree.chart.editor.DefaultAxisEditor.getTickLabelInsets()",1,1,10,39,2
"org.jfree.chart.editor.DefaultAxisEditor.getTickLabelPaint()",1,1,8,11,1
"org.jfree.chart.editor.DefaultAxisEditor.isTickLabelsVisible()",1,1,8,15,1
"org.jfree.chart.editor.DefaultAxisEditor.isTickMarksVisible()",1,1,9,15,1
"org.jfree.chart.editor.DefaultAxisEditor.setAxisProperties(Axis)",1,1,18,127,1
"org.jfree.chart.editor.DefaultChartEditor.DefaultChartEditor(JFreeChart)",1,1,88,"1,577",2
"org.jfree.chart.editor.DefaultChartEditor.actionPerformed(ActionEvent)",1,2,12,28,2
"org.jfree.chart.editor.DefaultChartEditor.attemptModifyBackgroundPaint()",1,2,13,64,2
"org.jfree.chart.editor.DefaultChartEditor.getAntiAlias()",1,1,8,15,1
"org.jfree.chart.editor.DefaultChartEditor.getBackgroundPaint()",1,1,8,11,1
"org.jfree.chart.editor.DefaultChartEditor.getPlotEditor()",1,1,8,8,1
"org.jfree.chart.editor.DefaultChartEditor.getTitleEditor()",1,1,8,8,1
"org.jfree.chart.editor.DefaultChartEditor.updateChart(JFreeChart)",1,1,13,62,1
"org.jfree.chart.editor.DefaultChartEditorFactory.DefaultChartEditorFactory()",1,1,5,0,1
"org.jfree.chart.editor.DefaultChartEditorFactory.createEditor(JFreeChart)",1,1,11,8,1
"org.jfree.chart.editor.DefaultLogAxisEditor.DefaultLogAxisEditor(LogAxis)",1,1,10,48,1
"org.jfree.chart.editor.DefaultLogAxisEditor.actionPerformed(ActionEvent)",1,2,16,46,2
"org.jfree.chart.editor.DefaultLogAxisEditor.createTickUnitPanel()",1,1,20,180,1
"org.jfree.chart.editor.DefaultLogAxisEditor.focusLost(FocusEvent)",1,2,7,41,2
"org.jfree.chart.editor.DefaultLogAxisEditor.setAxisProperties(Axis)",1,2,14,46,2
"org.jfree.chart.editor.DefaultLogAxisEditor.toggleAutoTick()",1,2,14,82,2
"org.jfree.chart.editor.DefaultLogAxisEditor.validateTickUnit()",1,1,16,104,3
"org.jfree.chart.editor.DefaultNumberAxisEditor.DefaultNumberAxisEditor(NumberAxis)",1,1,10,31,1
"org.jfree.chart.editor.DefaultNumberAxisEditor.actionPerformed(ActionEvent)",1,2,15,46,2
"org.jfree.chart.editor.DefaultNumberAxisEditor.createTickUnitPanel()",1,1,26,348,1
"org.jfree.chart.editor.DefaultNumberAxisEditor.focusLost(FocusEvent)",1,2,7,41,2
"org.jfree.chart.editor.DefaultNumberAxisEditor.setAxisProperties(Axis)",1,2,14,46,2
"org.jfree.chart.editor.DefaultNumberAxisEditor.toggleAutoTick()",1,2,11,82,2
"org.jfree.chart.editor.DefaultNumberAxisEditor.validateTickUnit()",1,1,13,104,3
"org.jfree.chart.editor.DefaultPlotEditor.DefaultPlotEditor(Plot)",1,1,15,11,1
"org.jfree.chart.editor.DefaultPlotEditor.actionPerformed(ActionEvent)",1,7,29,168,7
"org.jfree.chart.editor.DefaultPlotEditor.attemptBackgroundPaintSelection()",1,2,11,64,2
"org.jfree.chart.editor.DefaultPlotEditor.attemptDrawLinesSelection()",1,1,8,22,1
"org.jfree.chart.editor.DefaultPlotEditor.attemptDrawShapesSelection()",1,1,7,22,1
"org.jfree.chart.editor.DefaultPlotEditor.attemptOrientationSelection()",1,1,13,64,2
"org.jfree.chart.editor.DefaultPlotEditor.attemptOutlinePaintSelection()",1,2,12,64,2
"org.jfree.chart.editor.DefaultPlotEditor.attemptOutlineStrokeSelection()",1,2,13,108,2
"org.jfree.chart.editor.DefaultPlotEditor.createPlotPanel(Plot)",1,10,122,"2,295",11
"org.jfree.chart.editor.DefaultPlotEditor.createPlotTabs(Plot)",1,8,38,465,8
"org.jfree.chart.editor.DefaultPlotEditor.getBackgroundPaint()",1,1,8,11,1
"org.jfree.chart.editor.DefaultPlotEditor.getDomainAxisPropertyEditPanel()",1,1,9,8,1
"org.jfree.chart.editor.DefaultPlotEditor.getOutlinePaint()",1,1,8,11,1
"org.jfree.chart.editor.DefaultPlotEditor.getOutlineStroke()",1,1,8,11,1
"org.jfree.chart.editor.DefaultPlotEditor.getPlotInsets()",1,1,11,50,2
"org.jfree.chart.editor.DefaultPlotEditor.getRangeAxisPropertyEditPanel()",1,1,9,8,1
"org.jfree.chart.editor.DefaultPlotEditor.updatePlotProperties(Plot)",1,23,91,905,23
"org.jfree.chart.editor.DefaultPolarPlotEditor.DefaultPolarPlotEditor(PolarPlot)",1,1,13,95,1
"org.jfree.chart.editor.DefaultPolarPlotEditor.actionPerformed(ActionEvent)",1,3,14,53,3
"org.jfree.chart.editor.DefaultPolarPlotEditor.createPlotPanel()",1,1,23,343,1
"org.jfree.chart.editor.DefaultPolarPlotEditor.createPlotTabs(Plot)",1,1,16,68,1
"org.jfree.chart.editor.DefaultPolarPlotEditor.focusGained(FocusEvent)",1,1,9,2,1
"org.jfree.chart.editor.DefaultPolarPlotEditor.focusLost(FocusEvent)",1,3,14,60,3
"org.jfree.chart.editor.DefaultPolarPlotEditor.updatePlotProperties(Plot)",1,1,7,53,1
"org.jfree.chart.editor.DefaultPolarPlotEditor.validateAngleOffset()",1,1,14,81,2
"org.jfree.chart.editor.DefaultPolarPlotEditor.validateTickUnit()",1,1,16,127,4
"org.jfree.chart.editor.DefaultTitleEditor.DefaultTitleEditor(Title)",1,2,59,919,2
"org.jfree.chart.editor.DefaultTitleEditor.actionPerformed(ActionEvent)",1,4,19,79,4
"org.jfree.chart.editor.DefaultTitleEditor.attemptFontSelection()",1,2,17,144,2
"org.jfree.chart.editor.DefaultTitleEditor.attemptModifyShowTitle()",1,1,8,25,1
"org.jfree.chart.editor.DefaultTitleEditor.attemptPaintSelection()",1,2,16,95,3
"org.jfree.chart.editor.DefaultTitleEditor.enableOrDisableControls()",1,1,10,70,1
"org.jfree.chart.editor.DefaultTitleEditor.getTitleFont()",1,1,8,8,1
"org.jfree.chart.editor.DefaultTitleEditor.getTitlePaint()",1,1,8,11,1
"org.jfree.chart.editor.DefaultTitleEditor.getTitleText()",1,1,8,11,1
"org.jfree.chart.editor.DefaultTitleEditor.setTitleProperties(JFreeChart)",1,3,21,123,3
"org.jfree.chart.editor.DefaultValueAxisEditor.DefaultValueAxisEditor(ValueAxis)",1,1,54,"1,005",1
"org.jfree.chart.editor.DefaultValueAxisEditor.actionPerformed(ActionEvent)",1,7,30,191,7
"org.jfree.chart.editor.DefaultValueAxisEditor.attemptGridPaintSelection()",1,2,11,64,2
"org.jfree.chart.editor.DefaultValueAxisEditor.attemptGridStrokeSelection()",1,2,13,108,2
"org.jfree.chart.editor.DefaultValueAxisEditor.createTickUnitPanel()",1,1,13,162,1
"org.jfree.chart.editor.DefaultValueAxisEditor.focusGained(FocusEvent)",1,1,9,2,1
"org.jfree.chart.editor.DefaultValueAxisEditor.focusLost(FocusEvent)",1,3,14,60,3
"org.jfree.chart.editor.DefaultValueAxisEditor.getAutoTickUnitSelectionCheckBox()",1,1,8,4,1
"org.jfree.chart.editor.DefaultValueAxisEditor.getMaximumValue()",1,1,8,11,1
"org.jfree.chart.editor.DefaultValueAxisEditor.getMinimumValue()",1,1,8,11,1
"org.jfree.chart.editor.DefaultValueAxisEditor.isAutoRange()",1,1,8,11,1
"org.jfree.chart.editor.DefaultValueAxisEditor.isAutoTickUnitSelection()",1,1,8,8,1
"org.jfree.chart.editor.DefaultValueAxisEditor.setAutoTickUnitSelection(boolean)",1,1,7,15,1
"org.jfree.chart.editor.DefaultValueAxisEditor.setAutoTickUnitSelectionCheckBox(JCheckBox)",1,1,9,11,1
"org.jfree.chart.editor.DefaultValueAxisEditor.setAxisProperties(Axis)",1,2,16,96,2
"org.jfree.chart.editor.DefaultValueAxisEditor.toggleAutoRange()",1,2,16,159,2
"org.jfree.chart.editor.DefaultValueAxisEditor.toggleAutoTick()",1,1,3,18,1
"org.jfree.chart.editor.DefaultValueAxisEditor.validateMaximum()",1,1,17,120,3
"org.jfree.chart.editor.DefaultValueAxisEditor.validateMinimum()",1,1,17,120,3
"org.jfree.chart.encoders.EncoderUtil.encode(BufferedImage,String)",1,1,14,33,1
"org.jfree.chart.encoders.EncoderUtil.encode(BufferedImage,String,boolean)",1,1,16,43,1
"org.jfree.chart.encoders.EncoderUtil.encode(BufferedImage,String,float)",1,1,16,43,1
"org.jfree.chart.encoders.EncoderUtil.encode(BufferedImage,String,float,boolean)",1,1,18,53,1
"org.jfree.chart.encoders.EncoderUtil.writeBufferedImage(BufferedImage,String,OutputStream)",1,1,13,33,1
"org.jfree.chart.encoders.EncoderUtil.writeBufferedImage(BufferedImage,String,OutputStream,boolean)",1,1,16,43,1
"org.jfree.chart.encoders.EncoderUtil.writeBufferedImage(BufferedImage,String,OutputStream,float)",1,1,16,43,1
"org.jfree.chart.encoders.EncoderUtil.writeBufferedImage(BufferedImage,String,OutputStream,float,boolean)",1,1,19,53,1
"org.jfree.chart.encoders.ImageEncoderFactory.init()",1,1,9,43,1
"org.jfree.chart.encoders.ImageEncoderFactory.newInstance(String)",2,2,23,124,3
"org.jfree.chart.encoders.ImageEncoderFactory.newInstance(String,boolean)",1,1,14,31,1
"org.jfree.chart.encoders.ImageEncoderFactory.newInstance(String,float)",1,1,13,31,1
"org.jfree.chart.encoders.ImageEncoderFactory.newInstance(String,float,boolean)",1,1,16,50,1
"org.jfree.chart.encoders.ImageEncoderFactory.setImageEncoder(String,String)",1,1,10,19,1
"org.jfree.chart.encoders.SunJPEGEncoderAdapter.SunJPEGEncoderAdapter()",1,1,5,0,1
"org.jfree.chart.encoders.SunJPEGEncoderAdapter.encode(BufferedImage)",1,1,18,31,1
"org.jfree.chart.encoders.SunJPEGEncoderAdapter.encode(BufferedImage,OutputStream)",1,1,28,199,1
"org.jfree.chart.encoders.SunJPEGEncoderAdapter.getQuality()",1,1,13,13,1
"org.jfree.chart.encoders.SunJPEGEncoderAdapter.isEncodingAlpha()",1,1,10,8,1
"org.jfree.chart.encoders.SunJPEGEncoderAdapter.setEncodingAlpha(boolean)",1,1,10,4,1
"org.jfree.chart.encoders.SunJPEGEncoderAdapter.setQuality(float)",2,1,16,66,3
"org.jfree.chart.encoders.SunPNGEncoderAdapter.encode(BufferedImage)",1,1,15,31,1
"org.jfree.chart.encoders.SunPNGEncoderAdapter.encode(BufferedImage,OutputStream)",1,1,14,43,1
"org.jfree.chart.encoders.SunPNGEncoderAdapter.getQuality()",1,1,9,8,1
"org.jfree.chart.encoders.SunPNGEncoderAdapter.isEncodingAlpha()",1,1,9,8,1
"org.jfree.chart.encoders.SunPNGEncoderAdapter.setEncodingAlpha(boolean)",1,1,11,4,1
"org.jfree.chart.encoders.SunPNGEncoderAdapter.setQuality(float)",1,1,10,4,1
"org.jfree.chart.entity.AxisEntity.AxisEntity(Shape,Axis)",1,1,10,15,1
"org.jfree.chart.entity.AxisEntity.AxisEntity(Shape,Axis,String)",1,1,11,19,1
"org.jfree.chart.entity.AxisEntity.AxisEntity(Shape,Axis,String,String)",1,1,15,41,1
"org.jfree.chart.entity.AxisEntity.clone()",1,1,12,11,1
"org.jfree.chart.entity.AxisEntity.equals(Object)",7,1,30,216,7
"org.jfree.chart.entity.AxisEntity.getAxis()",1,1,8,8,1
"org.jfree.chart.entity.AxisEntity.hashCode()",1,1,12,42,1
"org.jfree.chart.entity.AxisEntity.readObject(ObjectInputStream)",1,1,13,22,1
"org.jfree.chart.entity.AxisEntity.toString()",1,1,13,38,1
"org.jfree.chart.entity.AxisEntity.writeObject(ObjectOutputStream)",1,1,11,22,1
"org.jfree.chart.entity.CategoryItemEntity.CategoryItemEntity(Shape,String,String,CategoryDataset,Comparable,Comparable)",1,1,20,70,1
"org.jfree.chart.entity.CategoryItemEntity.equals(Object)",6,1,27,205,6
"org.jfree.chart.entity.CategoryItemEntity.getColumnKey()",1,1,12,8,1
"org.jfree.chart.entity.CategoryItemEntity.getDataset()",1,1,12,8,1
"org.jfree.chart.entity.CategoryItemEntity.getRowKey()",1,1,12,8,1
"org.jfree.chart.entity.CategoryItemEntity.setColumnKey(Comparable)",1,1,12,11,1
"org.jfree.chart.entity.CategoryItemEntity.setDataset(CategoryDataset)",1,1,11,22,1
"org.jfree.chart.entity.CategoryItemEntity.setRowKey(Comparable)",1,1,12,11,1
"org.jfree.chart.entity.CategoryItemEntity.toString()",1,1,11,34,1
"org.jfree.chart.entity.CategoryItemEntityTest.testCloning()",1,1,17,233,1
"org.jfree.chart.entity.CategoryItemEntityTest.testEquals()",1,1,28,459,1
"org.jfree.chart.entity.CategoryItemEntityTest.testSerialization()",1,1,15,165,1
"org.jfree.chart.entity.CategoryLabelEntity.CategoryLabelEntity(Comparable,Shape,String,String)",1,1,13,28,1
"org.jfree.chart.entity.CategoryLabelEntity.equals(Object)",4,1,21,114,4
"org.jfree.chart.entity.CategoryLabelEntity.getKey()",1,1,8,8,1
"org.jfree.chart.entity.CategoryLabelEntity.hashCode()",1,1,11,38,1
"org.jfree.chart.entity.CategoryLabelEntity.toString()",1,1,15,89,1
"org.jfree.chart.entity.CategoryLabelEntityTest.testCloning()",1,1,12,118,1
"org.jfree.chart.entity.CategoryLabelEntityTest.testEquals()",1,1,29,448,1
"org.jfree.chart.entity.CategoryLabelEntityTest.testSerialization()",1,1,10,60,1
"org.jfree.chart.entity.ChartEntity.ChartEntity(Shape)",1,1,9,11,1
"org.jfree.chart.entity.ChartEntity.ChartEntity(Shape,String)",1,1,10,15,1
"org.jfree.chart.entity.ChartEntity.ChartEntity(Shape,String,String)",1,1,14,43,1
"org.jfree.chart.entity.ChartEntity.clone()",1,1,12,11,1
"org.jfree.chart.entity.ChartEntity.equals(Object)",6,1,27,190,6
"org.jfree.chart.entity.ChartEntity.getArea()",1,1,8,8,1
"org.jfree.chart.entity.ChartEntity.getImageMapAreaTag(ToolTipTagFragmentGenerator,URLTagFragmentGenerator)",1,7,44,368,8
"org.jfree.chart.entity.ChartEntity.getPolyCoords(Shape)",1,3,31,300,3
"org.jfree.chart.entity.ChartEntity.getRectCoords(Rectangle2D)",1,1,24,186,3
"org.jfree.chart.entity.ChartEntity.getShapeCoords()",2,2,13,44,2
"org.jfree.chart.entity.ChartEntity.getShapeType()",2,1,14,31,2
"org.jfree.chart.entity.ChartEntity.getToolTipText()",1,1,11,8,1
"org.jfree.chart.entity.ChartEntity.getURLText()",1,1,10,8,1
"org.jfree.chart.entity.ChartEntity.hashCode()",1,1,12,50,1
"org.jfree.chart.entity.ChartEntity.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.entity.ChartEntity.setArea(Shape)",1,1,13,22,1
"org.jfree.chart.entity.ChartEntity.setToolTipText(String)",1,1,8,11,1
"org.jfree.chart.entity.ChartEntity.setURLText(String)",1,1,8,11,1
"org.jfree.chart.entity.ChartEntity.toString()",1,1,13,43,1
"org.jfree.chart.entity.ChartEntity.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.entity.JFreeChartEntity.JFreeChartEntity(Shape,JFreeChart)",1,1,10,15,1
"org.jfree.chart.entity.JFreeChartEntity.JFreeChartEntity(Shape,JFreeChart,String)",1,1,11,19,1
"org.jfree.chart.entity.JFreeChartEntity.JFreeChartEntity(Shape,JFreeChart,String,String)",1,1,15,41,1
"org.jfree.chart.entity.JFreeChartEntity.clone()",1,1,12,11,1
"org.jfree.chart.entity.JFreeChartEntity.equals(Object)",7,1,30,216,7
"org.jfree.chart.entity.JFreeChartEntity.getChart()",1,1,8,8,1
"org.jfree.chart.entity.JFreeChartEntity.hashCode()",1,1,12,42,1
"org.jfree.chart.entity.JFreeChartEntity.readObject(ObjectInputStream)",1,1,13,22,1
"org.jfree.chart.entity.JFreeChartEntity.toString()",1,1,13,38,1
"org.jfree.chart.entity.JFreeChartEntity.writeObject(ObjectOutputStream)",1,1,11,22,1
"org.jfree.chart.entity.LegendItemEntity.LegendItemEntity(Shape)",1,1,8,8,1
"org.jfree.chart.entity.LegendItemEntity.clone()",1,1,12,11,1
"org.jfree.chart.entity.LegendItemEntity.equals(Object)",6,1,27,200,6
"org.jfree.chart.entity.LegendItemEntity.getDataset()",1,1,13,8,1
"org.jfree.chart.entity.LegendItemEntity.getSeriesKey()",1,1,12,8,1
"org.jfree.chart.entity.LegendItemEntity.setDataset(Dataset)",1,1,10,11,1
"org.jfree.chart.entity.LegendItemEntity.setSeriesKey(Comparable)",1,1,12,11,1
"org.jfree.chart.entity.LegendItemEntity.toString()",1,1,11,22,1
"org.jfree.chart.entity.LegendItemEntityTest.testCloning()",1,1,12,100,1
"org.jfree.chart.entity.LegendItemEntityTest.testEquals()",1,1,31,414,1
"org.jfree.chart.entity.LegendItemEntityTest.testSerialization()",1,1,10,44,1
"org.jfree.chart.entity.PieSectionEntity.PieSectionEntity(Shape,PieDataset,int,int,Comparable,String,String)",1,1,22,80,1
"org.jfree.chart.entity.PieSectionEntity.equals(Object)",7,1,30,243,7
"org.jfree.chart.entity.PieSectionEntity.getDataset()",1,1,10,8,1
"org.jfree.chart.entity.PieSectionEntity.getPieIndex()",1,1,12,13,1
"org.jfree.chart.entity.PieSectionEntity.getSectionIndex()",1,1,10,13,1
"org.jfree.chart.entity.PieSectionEntity.getSectionKey()",1,1,10,8,1
"org.jfree.chart.entity.PieSectionEntity.hashCode()",1,1,12,56,1
"org.jfree.chart.entity.PieSectionEntity.setDataset(PieDataset)",1,1,10,11,1
"org.jfree.chart.entity.PieSectionEntity.setPieIndex(int)",1,1,10,15,1
"org.jfree.chart.entity.PieSectionEntity.setSectionIndex(int)",1,1,10,15,1
"org.jfree.chart.entity.PieSectionEntity.setSectionKey(Comparable)",1,1,10,11,1
"org.jfree.chart.entity.PieSectionEntity.toString()",1,1,10,44,1
"org.jfree.chart.entity.PieSectionEntityTest.testCloning()",1,1,13,136,1
"org.jfree.chart.entity.PieSectionEntityTest.testEquals()",1,1,41,667,1
"org.jfree.chart.entity.PieSectionEntityTest.testSerialization()",1,1,11,76,1
"org.jfree.chart.entity.PlotEntity.PlotEntity(Shape,Plot)",1,1,10,15,1
"org.jfree.chart.entity.PlotEntity.PlotEntity(Shape,Plot,String)",1,1,11,19,1
"org.jfree.chart.entity.PlotEntity.PlotEntity(Shape,Plot,String,String)",1,1,15,41,1
"org.jfree.chart.entity.PlotEntity.clone()",1,1,12,11,1
"org.jfree.chart.entity.PlotEntity.equals(Object)",7,1,30,216,7
"org.jfree.chart.entity.PlotEntity.getPlot()",1,1,8,8,1
"org.jfree.chart.entity.PlotEntity.hashCode()",1,1,12,42,1
"org.jfree.chart.entity.PlotEntity.readObject(ObjectInputStream)",1,1,13,22,1
"org.jfree.chart.entity.PlotEntity.toString()",1,1,13,38,1
"org.jfree.chart.entity.PlotEntity.writeObject(ObjectOutputStream)",1,1,11,22,1
"org.jfree.chart.entity.StandardEntityCollection.StandardEntityCollection()",1,1,6,8,1
"org.jfree.chart.entity.StandardEntityCollection.add(ChartEntity)",1,1,10,26,1
"org.jfree.chart.entity.StandardEntityCollection.addAll(EntityCollection)",1,1,10,19,1
"org.jfree.chart.entity.StandardEntityCollection.clear()",1,1,7,11,1
"org.jfree.chart.entity.StandardEntityCollection.clone()",1,2,18,136,2
"org.jfree.chart.entity.StandardEntityCollection.equals(Object)",3,2,18,76,3
"org.jfree.chart.entity.StandardEntityCollection.getEntities()",1,1,9,11,1
"org.jfree.chart.entity.StandardEntityCollection.getEntity(double,double)",3,2,20,140,3
"org.jfree.chart.entity.StandardEntityCollection.getEntity(int)",1,1,13,19,1
"org.jfree.chart.entity.StandardEntityCollection.getEntityCount()",1,1,9,15,1
"org.jfree.chart.entity.StandardEntityCollection.iterator()",1,1,9,11,1
"org.jfree.chart.entity.StandardEntityCollectionTest.testCloning()",1,1,20,218,1
"org.jfree.chart.entity.StandardEntityCollectionTest.testEquals()",1,1,19,198,1
"org.jfree.chart.entity.StandardEntityCollectionTest.testSerialization()",1,1,14,95,1
"org.jfree.chart.entity.TickLabelEntity.TickLabelEntity(Shape,String,String)",1,1,11,15,1
"org.jfree.chart.entity.TickLabelEntityTest.testCloning()",1,1,12,112,1
"org.jfree.chart.entity.TickLabelEntityTest.testEquals()",1,1,23,305,1
"org.jfree.chart.entity.TickLabelEntityTest.testSerialization()",1,1,10,55,1
"org.jfree.chart.entity.TitleEntity.TitleEntity(Shape,Title)",1,1,10,15,1
"org.jfree.chart.entity.TitleEntity.TitleEntity(Shape,Title,String)",1,1,11,19,1
"org.jfree.chart.entity.TitleEntity.TitleEntity(Shape,Title,String,String)",1,1,15,41,1
"org.jfree.chart.entity.TitleEntity.clone()",1,1,12,11,1
"org.jfree.chart.entity.TitleEntity.equals(Object)",7,1,30,216,7
"org.jfree.chart.entity.TitleEntity.getTitle()",1,1,8,8,1
"org.jfree.chart.entity.TitleEntity.hashCode()",1,1,12,42,1
"org.jfree.chart.entity.TitleEntity.readObject(ObjectInputStream)",1,1,13,22,1
"org.jfree.chart.entity.TitleEntity.toString()",1,1,13,38,1
"org.jfree.chart.entity.TitleEntity.writeObject(ObjectOutputStream)",1,1,11,22,1
"org.jfree.chart.entity.XYAnnotationEntity.XYAnnotationEntity(Shape,int,String,String)",1,1,13,33,1
"org.jfree.chart.entity.XYAnnotationEntity.equals(Object)",5,1,24,130,5
"org.jfree.chart.entity.XYAnnotationEntity.getRendererIndex()",1,1,8,11,1
"org.jfree.chart.entity.XYAnnotationEntity.setRendererIndex(int)",1,1,8,15,1
"org.jfree.chart.entity.XYItemEntity.XYItemEntity(Shape,XYDataset,int,int,String,String)",1,1,18,64,1
"org.jfree.chart.entity.XYItemEntity.equals(Object)",5,2,24,152,6
"org.jfree.chart.entity.XYItemEntity.getDataset()",1,1,8,8,1
"org.jfree.chart.entity.XYItemEntity.getItem()",1,1,8,11,1
"org.jfree.chart.entity.XYItemEntity.getSeriesIndex()",1,1,8,11,1
"org.jfree.chart.entity.XYItemEntity.setDataset(XYDataset)",1,1,8,11,1
"org.jfree.chart.entity.XYItemEntity.setItem(int)",1,1,8,15,1
"org.jfree.chart.entity.XYItemEntity.setSeriesIndex(int)",1,1,8,15,1
"org.jfree.chart.entity.XYItemEntity.toString()",1,1,11,24,1
"org.jfree.chart.entity.XYItemEntityTest.testCloning()",1,1,12,129,1
"org.jfree.chart.entity.XYItemEntityTest.testEquals()",1,1,31,486,1
"org.jfree.chart.entity.XYItemEntityTest.testSerialization()",1,1,10,70,1
"org.jfree.chart.event.AnnotationChangeEvent.AnnotationChangeEvent(Object,Annotation)",1,1,14,31,1
"org.jfree.chart.event.AnnotationChangeEvent.getAnnotation()",1,1,10,8,1
"org.jfree.chart.event.AxisChangeEvent.AxisChangeEvent(Axis)",1,1,9,18,1
"org.jfree.chart.event.AxisChangeEvent.getAxis()",1,1,8,8,1
"org.jfree.chart.event.ChartChangeEvent.ChartChangeEvent(Object)",1,1,9,15,1
"org.jfree.chart.event.ChartChangeEvent.ChartChangeEvent(Object,JFreeChart)",1,1,10,15,1
"org.jfree.chart.event.ChartChangeEvent.ChartChangeEvent(Object,JFreeChart,ChartChangeEventType)",1,1,14,31,1
"org.jfree.chart.event.ChartChangeEvent.getChart()",1,1,8,8,1
"org.jfree.chart.event.ChartChangeEvent.getType()",1,1,8,8,1
"org.jfree.chart.event.ChartChangeEvent.setChart(JFreeChart)",1,1,8,11,1
"org.jfree.chart.event.ChartChangeEvent.setType(ChartChangeEventType)",1,1,8,11,1
"org.jfree.chart.event.ChartProgressEvent.ChartProgressEvent(Object,JFreeChart,int,int)",1,1,16,53,1
"org.jfree.chart.event.ChartProgressEvent.getChart()",1,1,8,8,1
"org.jfree.chart.event.ChartProgressEvent.getPercent()",1,1,8,11,1
"org.jfree.chart.event.ChartProgressEvent.getType()",1,1,8,11,1
"org.jfree.chart.event.ChartProgressEvent.setChart(JFreeChart)",1,1,8,11,1
"org.jfree.chart.event.ChartProgressEvent.setPercent(int)",1,1,8,15,1
"org.jfree.chart.event.ChartProgressEvent.setType(int)",1,1,8,15,1
"org.jfree.chart.event.MarkerChangeEvent.MarkerChangeEvent(Marker)",1,1,12,18,1
"org.jfree.chart.event.MarkerChangeEvent.getMarker()",1,1,10,8,1
"org.jfree.chart.event.OverlayChangeEvent.OverlayChangeEvent(Object)",1,1,8,8,1
"org.jfree.chart.event.PlotChangeEvent.PlotChangeEvent(Plot)",1,1,9,18,1
"org.jfree.chart.event.PlotChangeEvent.getPlot()",1,1,8,8,1
"org.jfree.chart.event.RendererChangeEvent.RendererChangeEvent(Object)",1,1,8,11,1
"org.jfree.chart.event.RendererChangeEvent.RendererChangeEvent(Object,boolean)",1,1,13,34,1
"org.jfree.chart.event.RendererChangeEvent.getRenderer()",1,1,8,8,1
"org.jfree.chart.event.RendererChangeEvent.getSeriesVisibilityChanged()",1,1,11,11,1
"org.jfree.chart.event.TitleChangeEvent.TitleChangeEvent(Title)",1,1,9,18,1
"org.jfree.chart.event.TitleChangeEvent.getTitle()",1,1,8,8,1
"org.jfree.chart.imagemap.DynamicDriveToolTipTagFragmentGenerator.DynamicDriveToolTipTagFragmentGenerator()",1,1,6,4,1
"org.jfree.chart.imagemap.DynamicDriveToolTipTagFragmentGenerator.DynamicDriveToolTipTagFragmentGenerator(String,int)",1,1,12,22,1
"org.jfree.chart.imagemap.DynamicDriveToolTipTagFragmentGenerator.generateToolTipFragment(String)",1,1,14,50,1
"org.jfree.chart.imagemap.DynamicDriveToolTipTagFragmentGeneratorTest.testGenerateURLFragment()",1,1,14,51,1
"org.jfree.chart.imagemap.ImageMapUtils.getImageMap(String,ChartRenderingInfo)",1,1,14,22,1
"org.jfree.chart.imagemap.ImageMapUtils.getImageMap(String,ChartRenderingInfo,ToolTipTagFragmentGenerator,URLTagFragmentGenerator)",1,6,42,391,6
"org.jfree.chart.imagemap.ImageMapUtils.htmlEscape(String)",1,8,40,390,8
"org.jfree.chart.imagemap.ImageMapUtils.javascriptEscape(String)",1,5,31,252,5
"org.jfree.chart.imagemap.ImageMapUtils.writeImageMap(PrintWriter,String,ChartRenderingInfo)",1,1,16,31,1
"org.jfree.chart.imagemap.ImageMapUtils.writeImageMap(PrintWriter,String,ChartRenderingInfo,ToolTipTagFragmentGenerator,URLTagFragmentGenerator)",1,1,23,38,1
"org.jfree.chart.imagemap.ImageMapUtils.writeImageMap(PrintWriter,String,ChartRenderingInfo,boolean)",1,1,27,68,2
"org.jfree.chart.imagemap.ImageMapUtilsTest.testHTMLEscape()",1,1,15,161,1
"org.jfree.chart.imagemap.ImageMapUtilsTest.testJavascriptEscape()",1,1,11,78,1
"org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGenerator.OverLIBToolTipTagFragmentGenerator()",1,1,6,4,1
"org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGenerator.generateToolTipFragment(String)",1,1,13,15,1
"org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGeneratorTest.testGenerateURLFragment()",1,1,14,51,1
"org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator.StandardToolTipTagFragmentGenerator()",1,1,6,4,1
"org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator.generateToolTipFragment(String)",1,1,12,15,1
"org.jfree.chart.imagemap.StandardToolTipTagFragmentGeneratorTest.testGenerateURLFragment()",1,1,12,43,1
"org.jfree.chart.imagemap.StandardURLTagFragmentGenerator.StandardURLTagFragmentGenerator()",1,1,6,4,1
"org.jfree.chart.imagemap.StandardURLTagFragmentGenerator.generateURLFragment(String)",1,1,12,11,1
"org.jfree.chart.imagemap.StandardURLTagFragmentGeneratorTest.testGenerateURLFragment()",1,1,13,64,1
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.AbstractCategoryItemLabelGenerator(String,DateFormat)",1,1,17,85,1
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.AbstractCategoryItemLabelGenerator(String,NumberFormat)",1,1,11,15,1
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.AbstractCategoryItemLabelGenerator(String,NumberFormat,NumberFormat)",1,1,22,100,1
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.clone()",1,3,19,104,3
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.createItemArray(CategoryDataset,int,int)",1,5,34,379,5
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.equals(Object)",6,1,28,190,6
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.generateColumnLabel(CategoryDataset,int)",1,1,11,19,1
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.generateLabelString(CategoryDataset,int,int)",1,1,17,64,1
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.generateRowLabel(CategoryDataset,int)",1,1,11,19,1
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.getDateFormat()",1,1,8,8,1
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.getLabelFormat()",1,1,8,8,1
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.getNumberFormat()",1,1,8,8,1
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator.hashCode()",1,1,15,114,1
"org.jfree.chart.labels.AbstractPieItemLabelGenerator.AbstractPieItemLabelGenerator(String,NumberFormat,NumberFormat)",1,1,19,68,1
"org.jfree.chart.labels.AbstractPieItemLabelGenerator.clone()",1,3,19,101,3
"org.jfree.chart.labels.AbstractPieItemLabelGenerator.createItemArray(PieDataset,Comparable)",1,3,38,292,4
"org.jfree.chart.labels.AbstractPieItemLabelGenerator.equals(Object)",6,1,28,190,6
"org.jfree.chart.labels.AbstractPieItemLabelGenerator.generateSectionLabel(PieDataset,Comparable)",1,2,16,59,2
"org.jfree.chart.labels.AbstractPieItemLabelGenerator.getLabelFormat()",1,1,8,8,1
"org.jfree.chart.labels.AbstractPieItemLabelGenerator.getNumberFormat()",1,1,8,8,1
"org.jfree.chart.labels.AbstractPieItemLabelGenerator.getPercentFormat()",1,1,8,8,1
"org.jfree.chart.labels.AbstractPieItemLabelGenerator.hashCode()",1,1,13,72,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.AbstractXYItemLabelGenerator()",1,1,7,13,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.AbstractXYItemLabelGenerator(String,DateFormat,DateFormat)",1,1,17,38,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.AbstractXYItemLabelGenerator(String,DateFormat,NumberFormat)",1,1,15,26,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.AbstractXYItemLabelGenerator(String,NumberFormat,DateFormat)",1,1,19,26,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.AbstractXYItemLabelGenerator(String,NumberFormat,NumberFormat)",1,1,19,68,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.clone()",1,5,25,198,5
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.createItemArray(XYDataset,int,int)",1,5,36,403,5
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.equals(Object)",9,1,36,333,9
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.generateLabelString(XYDataset,int,int)",1,1,15,50,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.getFormatString()",1,1,9,8,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.getNullYString()",1,1,10,8,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.getXDateFormat()",1,1,8,8,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.getXFormat()",1,1,8,8,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.getYDateFormat()",1,1,8,8,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.getYFormat()",1,1,8,8,1
"org.jfree.chart.labels.AbstractXYItemLabelGenerator.hashCode()",1,1,15,114,1
"org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.BoxAndWhiskerToolTipGenerator()",1,1,6,11,1
"org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.BoxAndWhiskerToolTipGenerator(String,NumberFormat)",1,1,10,11,1
"org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.createItemArray(CategoryDataset,int,int)",1,2,30,370,2
"org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator.equals(Object)",3,2,17,60,3
"org.jfree.chart.labels.BoxAndWhiskerToolTipGeneratorTest.testCloning()",1,1,11,71,1
"org.jfree.chart.labels.BoxAndWhiskerToolTipGeneratorTest.testEquals()",1,1,26,175,1
"org.jfree.chart.labels.BoxAndWhiskerToolTipGeneratorTest.testHashCode()",1,1,10,44,1
"org.jfree.chart.labels.BoxAndWhiskerToolTipGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.labels.BoxAndWhiskerToolTipGeneratorTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator.BoxAndWhiskerXYToolTipGenerator()",1,1,7,13,1
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator.BoxAndWhiskerXYToolTipGenerator(String,DateFormat,NumberFormat)",1,1,15,15,1
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator.createItemArray(XYDataset,int,int)",1,3,34,463,3
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator.equals(Object)",3,1,17,66,3
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGeneratorTest.testCloning()",1,1,13,71,1
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGeneratorTest.testEquals()",1,1,40,376,1
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGeneratorTest.testPublicCloneable()",1,1,9,15,1
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGeneratorTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.labels.BubbleXYItemLabelGenerator.BubbleXYItemLabelGenerator()",1,1,9,16,1
"org.jfree.chart.labels.BubbleXYItemLabelGenerator.BubbleXYItemLabelGenerator(String,DateFormat,DateFormat,DateFormat)",1,1,18,41,1
"org.jfree.chart.labels.BubbleXYItemLabelGenerator.BubbleXYItemLabelGenerator(String,NumberFormat,NumberFormat,NumberFormat)",1,1,18,41,1
"org.jfree.chart.labels.BubbleXYItemLabelGenerator.createItemArray(XYZDataset,int,int)",1,4,39,384,4
"org.jfree.chart.labels.BubbleXYItemLabelGenerator.equals(Object)",6,1,27,178,6
"org.jfree.chart.labels.BubbleXYItemLabelGenerator.generateLabel(XYDataset,int,int)",1,1,13,22,1
"org.jfree.chart.labels.BubbleXYItemLabelGenerator.generateLabelString(XYDataset,int,int)",1,2,22,89,2
"org.jfree.chart.labels.BubbleXYItemLabelGenerator.getZDateFormat()",1,1,8,8,1
"org.jfree.chart.labels.BubbleXYItemLabelGenerator.getZFormat()",1,1,8,8,1
"org.jfree.chart.labels.BubbleXYItemLabelGenerator.hashCode()",1,1,12,56,1
"org.jfree.chart.labels.BubbleXYItemLabelGeneratorTest.testCloning()",1,1,11,71,1
"org.jfree.chart.labels.BubbleXYItemLabelGeneratorTest.testEquals()",1,1,59,"1,020",1
"org.jfree.chart.labels.BubbleXYItemLabelGeneratorTest.testGenerateLabel()",1,1,15,118,1
"org.jfree.chart.labels.BubbleXYItemLabelGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.BubbleXYItemLabelGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.labels.BubbleXYItemLabelGeneratorTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.labels.CustomXYItemLabelGeneratorTest.testCloning()",1,1,11,71,1
"org.jfree.chart.labels.CustomXYItemLabelGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.labels.CustomXYItemLabelGeneratorTest.testSerialization()",1,1,20,138,1
"org.jfree.chart.labels.CustomXYToolTipGenerator.CustomXYToolTipGenerator()",1,1,6,4,1
"org.jfree.chart.labels.CustomXYToolTipGenerator.addToolTipSeries(List)",1,1,8,15,1
"org.jfree.chart.labels.CustomXYToolTipGenerator.clone()",1,1,16,59,2
"org.jfree.chart.labels.CustomXYToolTipGenerator.equals(Object)",3,6,31,286,8
"org.jfree.chart.labels.CustomXYToolTipGenerator.generateToolTip(XYDataset,int,int)",1,1,13,18,1
"org.jfree.chart.labels.CustomXYToolTipGenerator.getListCount()",1,1,8,15,1
"org.jfree.chart.labels.CustomXYToolTipGenerator.getToolTipCount(int)",1,2,15,68,2
"org.jfree.chart.labels.CustomXYToolTipGenerator.getToolTipText(int,int)",1,4,20,108,4
"org.jfree.chart.labels.HighLowItemLabelGenerator.HighLowItemLabelGenerator()",1,1,7,11,1
"org.jfree.chart.labels.HighLowItemLabelGenerator.HighLowItemLabelGenerator(DateFormat,NumberFormat)",3,1,21,77,3
"org.jfree.chart.labels.HighLowItemLabelGenerator.clone()",1,3,19,104,3
"org.jfree.chart.labels.HighLowItemLabelGenerator.equals(Object)",5,1,24,145,5
"org.jfree.chart.labels.HighLowItemLabelGenerator.generateLabel(XYDataset,int,int)",1,1,14,10,1
"org.jfree.chart.labels.HighLowItemLabelGenerator.generateToolTip(XYDataset,int,int)",2,6,44,594,7
"org.jfree.chart.labels.HighLowItemLabelGenerator.hashCode()",1,1,12,50,1
"org.jfree.chart.labels.HighLowItemLabelGeneratorTest.testCloning()",1,1,11,71,1
"org.jfree.chart.labels.HighLowItemLabelGeneratorTest.testEquals()",1,1,22,172,1
"org.jfree.chart.labels.HighLowItemLabelGeneratorTest.testHashCode()",1,1,10,44,1
"org.jfree.chart.labels.HighLowItemLabelGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.labels.HighLowItemLabelGeneratorTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.labels.IntervalCategoryItemLabelGenerator.IntervalCategoryItemLabelGenerator()",1,1,6,11,1
"org.jfree.chart.labels.IntervalCategoryItemLabelGenerator.IntervalCategoryItemLabelGenerator(String,DateFormat)",1,1,11,11,1
"org.jfree.chart.labels.IntervalCategoryItemLabelGenerator.IntervalCategoryItemLabelGenerator(String,NumberFormat)",1,1,11,11,1
"org.jfree.chart.labels.IntervalCategoryItemLabelGenerator.createItemArray(CategoryDataset,int,int)",1,6,38,415,6
"org.jfree.chart.labels.IntervalCategoryItemLabelGeneratorTest.testCloning()",1,1,13,71,1
"org.jfree.chart.labels.IntervalCategoryItemLabelGeneratorTest.testEquals()",1,1,24,166,1
"org.jfree.chart.labels.IntervalCategoryItemLabelGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.IntervalCategoryItemLabelGeneratorTest.testPublicCloneable()",1,1,9,15,1
"org.jfree.chart.labels.IntervalCategoryItemLabelGeneratorTest.testSerialization()",1,1,11,31,1
"org.jfree.chart.labels.IntervalCategoryToolTipGenerator.IntervalCategoryToolTipGenerator()",1,1,6,11,1
"org.jfree.chart.labels.IntervalCategoryToolTipGenerator.IntervalCategoryToolTipGenerator(String,DateFormat)",1,1,11,11,1
"org.jfree.chart.labels.IntervalCategoryToolTipGenerator.IntervalCategoryToolTipGenerator(String,NumberFormat)",1,1,11,11,1
"org.jfree.chart.labels.IntervalCategoryToolTipGenerator.createItemArray(CategoryDataset,int,int)",1,6,38,415,6
"org.jfree.chart.labels.IntervalCategoryToolTipGenerator.equals(Object)",3,1,19,66,3
"org.jfree.chart.labels.IntervalCategoryToolTipGeneratorTest.testCloning()",1,1,13,71,1
"org.jfree.chart.labels.IntervalCategoryToolTipGeneratorTest.testEquals()",1,1,24,166,1
"org.jfree.chart.labels.IntervalCategoryToolTipGeneratorTest.testEquals2()",1,1,13,31,1
"org.jfree.chart.labels.IntervalCategoryToolTipGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.IntervalCategoryToolTipGeneratorTest.testPublicCloneable()",1,1,9,15,1
"org.jfree.chart.labels.IntervalCategoryToolTipGeneratorTest.testSerialization()",1,1,12,31,1
"org.jfree.chart.labels.IntervalXYItemLabelGenerator.IntervalXYItemLabelGenerator()",1,1,7,13,1
"org.jfree.chart.labels.IntervalXYItemLabelGenerator.IntervalXYItemLabelGenerator(String,DateFormat,DateFormat)",1,1,14,15,1
"org.jfree.chart.labels.IntervalXYItemLabelGenerator.IntervalXYItemLabelGenerator(String,DateFormat,NumberFormat)",1,1,14,15,1
"org.jfree.chart.labels.IntervalXYItemLabelGenerator.IntervalXYItemLabelGenerator(String,NumberFormat,DateFormat)",1,1,16,15,1
"org.jfree.chart.labels.IntervalXYItemLabelGenerator.IntervalXYItemLabelGenerator(String,NumberFormat,NumberFormat)",1,1,14,15,1
"org.jfree.chart.labels.IntervalXYItemLabelGenerator.clone()",1,1,11,11,1
"org.jfree.chart.labels.IntervalXYItemLabelGenerator.createItemArray(XYDataset,int,int)",1,14,83,"1,173",15
"org.jfree.chart.labels.IntervalXYItemLabelGenerator.equals(Object)",3,1,17,66,3
"org.jfree.chart.labels.IntervalXYItemLabelGenerator.generateLabel(XYDataset,int,int)",1,1,13,22,1
"org.jfree.chart.labels.IntervalXYToolTipGenerator.IntervalXYToolTipGenerator()",1,1,7,13,1
"org.jfree.chart.labels.IntervalXYToolTipGenerator.IntervalXYToolTipGenerator(String,DateFormat,DateFormat)",1,1,14,15,1
"org.jfree.chart.labels.IntervalXYToolTipGenerator.IntervalXYToolTipGenerator(String,DateFormat,NumberFormat)",1,1,14,15,1
"org.jfree.chart.labels.IntervalXYToolTipGenerator.IntervalXYToolTipGenerator(String,NumberFormat,DateFormat)",1,1,16,15,1
"org.jfree.chart.labels.IntervalXYToolTipGenerator.IntervalXYToolTipGenerator(String,NumberFormat,NumberFormat)",1,1,14,15,1
"org.jfree.chart.labels.IntervalXYToolTipGenerator.clone()",1,1,11,11,1
"org.jfree.chart.labels.IntervalXYToolTipGenerator.createItemArray(XYDataset,int,int)",1,14,79,"1,173",15
"org.jfree.chart.labels.IntervalXYToolTipGenerator.equals(Object)",3,1,17,66,3
"org.jfree.chart.labels.IntervalXYToolTipGenerator.generateToolTip(XYDataset,int,int)",1,1,13,22,1
"org.jfree.chart.labels.ItemLabelAnchorTest.testEquals()",1,1,8,28,1
"org.jfree.chart.labels.ItemLabelAnchorTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.labels.ItemLabelPosition.ItemLabelPosition()",1,1,7,19,1
"org.jfree.chart.labels.ItemLabelPosition.ItemLabelPosition(ItemLabelAnchor,TextAnchor)",1,1,11,19,1
"org.jfree.chart.labels.ItemLabelPosition.ItemLabelPosition(ItemLabelAnchor,TextAnchor,TextAnchor,double)",1,1,23,89,1
"org.jfree.chart.labels.ItemLabelPosition.equals(Object)",7,1,30,235,7
"org.jfree.chart.labels.ItemLabelPosition.getAngle()",1,1,8,11,1
"org.jfree.chart.labels.ItemLabelPosition.getItemLabelAnchor()",1,1,8,8,1
"org.jfree.chart.labels.ItemLabelPosition.getRotationAnchor()",1,1,8,8,1
"org.jfree.chart.labels.ItemLabelPosition.getTextAnchor()",1,1,8,8,1
"org.jfree.chart.labels.ItemLabelPositionTest.testEquals()",1,1,9,18,1
"org.jfree.chart.labels.ItemLabelPositionTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.MultipleXYSeriesLabelGenerator()",1,1,6,8,1
"org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.MultipleXYSeriesLabelGenerator(String)",1,1,11,43,1
"org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.addSeriesLabel(int,String)",1,2,15,92,2
"org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.clearSeriesLabels(int)",1,1,9,33,1
"org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.clone()",1,3,26,169,3
"org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.createItemArray(XYDataset,int)",1,1,14,41,1
"org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.equals(Object)",6,1,29,190,6
"org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.generateLabel(XYDataset,int)",1,3,28,252,3
"org.jfree.chart.labels.MultipleXYSeriesLabelGenerator.hashCode()",1,1,13,72,1
"org.jfree.chart.labels.MultipleXYSeriesLabelGeneratorTest.testCloning()",1,1,18,144,1
"org.jfree.chart.labels.MultipleXYSeriesLabelGeneratorTest.testEquals()",1,1,20,150,1
"org.jfree.chart.labels.MultipleXYSeriesLabelGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.MultipleXYSeriesLabelGeneratorTest.testPublicCloneable()",1,1,9,15,1
"org.jfree.chart.labels.MultipleXYSeriesLabelGeneratorTest.testSerialization()",1,1,14,74,1
"org.jfree.chart.labels.StandardCategoryItemLabelGenerator.StandardCategoryItemLabelGenerator()",1,1,6,11,1
"org.jfree.chart.labels.StandardCategoryItemLabelGenerator.StandardCategoryItemLabelGenerator(String,DateFormat)",1,1,11,11,1
"org.jfree.chart.labels.StandardCategoryItemLabelGenerator.StandardCategoryItemLabelGenerator(String,NumberFormat)",1,1,11,11,1
"org.jfree.chart.labels.StandardCategoryItemLabelGenerator.StandardCategoryItemLabelGenerator(String,NumberFormat,NumberFormat)",1,1,15,15,1
"org.jfree.chart.labels.StandardCategoryItemLabelGenerator.equals(Object)",3,1,18,66,3
"org.jfree.chart.labels.StandardCategoryItemLabelGenerator.generateLabel(CategoryDataset,int,int)",1,1,15,22,1
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest.testCloning()",1,1,13,71,1
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest.testEquals()",1,1,30,244,1
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest.testEquals1481087()",1,1,13,44,1
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest.testGenerateLabel()",1,1,20,235,1
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest.testPublicCloneable()",1,1,9,15,1
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest.testSerialization()",1,1,12,31,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.StandardCategorySeriesLabelGenerator()",1,1,7,8,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.StandardCategorySeriesLabelGenerator(String)",1,1,9,18,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.clone()",1,1,11,11,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.createItemArray(CategoryDataset,int)",1,1,14,41,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.equals(Object)",4,1,22,101,4
"org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.generateLabel(CategoryDataset,int)",1,1,15,46,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGenerator.hashCode()",1,1,11,33,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGeneratorTest.testCloning()",1,1,13,77,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGeneratorTest.testEquals()",1,1,16,82,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGeneratorTest.testGenerateLabel()",1,1,15,138,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGeneratorTest.testPublicCloneable()",1,1,9,19,1
"org.jfree.chart.labels.StandardCategorySeriesLabelGeneratorTest.testSerialization()",1,1,11,26,1
"org.jfree.chart.labels.StandardCategoryToolTipGenerator.StandardCategoryToolTipGenerator()",1,1,6,11,1
"org.jfree.chart.labels.StandardCategoryToolTipGenerator.StandardCategoryToolTipGenerator(String,DateFormat)",1,1,11,11,1
"org.jfree.chart.labels.StandardCategoryToolTipGenerator.StandardCategoryToolTipGenerator(String,NumberFormat)",1,1,11,11,1
"org.jfree.chart.labels.StandardCategoryToolTipGenerator.equals(Object)",3,1,17,66,3
"org.jfree.chart.labels.StandardCategoryToolTipGenerator.generateToolTip(CategoryDataset,int,int)",1,1,16,22,1
"org.jfree.chart.labels.StandardCategoryToolTipGeneratorTest.testCloning()",1,1,13,71,1
"org.jfree.chart.labels.StandardCategoryToolTipGeneratorTest.testEquals()",1,1,30,244,1
"org.jfree.chart.labels.StandardCategoryToolTipGeneratorTest.testEquals1481087()",1,1,13,44,1
"org.jfree.chart.labels.StandardCategoryToolTipGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.StandardCategoryToolTipGeneratorTest.testPublicCloneable()",1,1,9,15,1
"org.jfree.chart.labels.StandardCategoryToolTipGeneratorTest.testSerialization()",1,1,12,31,1
"org.jfree.chart.labels.StandardCrosshairLabelGenerator.StandardCrosshairLabelGenerator()",1,1,6,11,1
"org.jfree.chart.labels.StandardCrosshairLabelGenerator.StandardCrosshairLabelGenerator(String,NumberFormat)",3,1,22,89,3
"org.jfree.chart.labels.StandardCrosshairLabelGenerator.equals(Object)",5,1,25,145,5
"org.jfree.chart.labels.StandardCrosshairLabelGenerator.generateLabel(Crosshair)",1,1,14,46,1
"org.jfree.chart.labels.StandardCrosshairLabelGenerator.getLabelTemplate()",1,1,8,8,1
"org.jfree.chart.labels.StandardCrosshairLabelGenerator.getNumberFormat()",1,1,8,8,1
"org.jfree.chart.labels.StandardCrosshairLabelGenerator.hashCode()",1,1,9,15,1
"org.jfree.chart.labels.StandardPieSectionLabelGenerator.StandardPieSectionLabelGenerator()",1,1,9,15,1
"org.jfree.chart.labels.StandardPieSectionLabelGenerator.StandardPieSectionLabelGenerator(Locale)",1,1,10,11,1
"org.jfree.chart.labels.StandardPieSectionLabelGenerator.StandardPieSectionLabelGenerator(String)",1,1,10,15,1
"org.jfree.chart.labels.StandardPieSectionLabelGenerator.StandardPieSectionLabelGenerator(String,Locale)",1,1,12,22,1
"org.jfree.chart.labels.StandardPieSectionLabelGenerator.StandardPieSectionLabelGenerator(String,NumberFormat,NumberFormat)",1,1,15,28,1
"org.jfree.chart.labels.StandardPieSectionLabelGenerator.clone()",1,1,15,48,1
"org.jfree.chart.labels.StandardPieSectionLabelGenerator.equals(Object)",4,1,22,114,4
"org.jfree.chart.labels.StandardPieSectionLabelGenerator.generateAttributedSectionLabel(PieDataset,Comparable)",1,1,32,15,1
"org.jfree.chart.labels.StandardPieSectionLabelGenerator.generateSectionLabel(PieDataset,Comparable)",1,1,12,15,1
"org.jfree.chart.labels.StandardPieSectionLabelGenerator.getAttributedLabel(int)",1,1,11,19,1
"org.jfree.chart.labels.StandardPieSectionLabelGenerator.setAttributedLabel(int,AttributedString)",1,1,9,24,1
"org.jfree.chart.labels.StandardPieSectionLabelGeneratorTest.testCloning()",1,1,13,71,1
"org.jfree.chart.labels.StandardPieSectionLabelGeneratorTest.testEquals()",1,1,45,467,1
"org.jfree.chart.labels.StandardPieSectionLabelGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.StandardPieSectionLabelGeneratorTest.testPublicCloneable()",1,1,9,15,1
"org.jfree.chart.labels.StandardPieSectionLabelGeneratorTest.testSerialization()",1,1,11,22,1
"org.jfree.chart.labels.StandardPieToolTipGenerator.StandardPieToolTipGenerator()",1,1,6,8,1
"org.jfree.chart.labels.StandardPieToolTipGenerator.StandardPieToolTipGenerator(Locale)",1,1,11,11,1
"org.jfree.chart.labels.StandardPieToolTipGenerator.StandardPieToolTipGenerator(String)",1,1,8,11,1
"org.jfree.chart.labels.StandardPieToolTipGenerator.StandardPieToolTipGenerator(String,Locale)",1,1,12,22,1
"org.jfree.chart.labels.StandardPieToolTipGenerator.StandardPieToolTipGenerator(String,NumberFormat,NumberFormat)",1,1,14,15,1
"org.jfree.chart.labels.StandardPieToolTipGenerator.clone()",1,1,11,11,1
"org.jfree.chart.labels.StandardPieToolTipGenerator.generateToolTip(PieDataset,Comparable)",1,1,12,11,1
"org.jfree.chart.labels.StandardPieToolTipGeneratorTest.testCloning()",1,1,14,121,1
"org.jfree.chart.labels.StandardPieToolTipGeneratorTest.testEquals()",1,1,38,357,1
"org.jfree.chart.labels.StandardPieToolTipGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.StandardPieToolTipGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.labels.StandardPieToolTipGeneratorTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.labels.StandardXYItemLabelGenerator.StandardXYItemLabelGenerator()",1,1,7,13,1
"org.jfree.chart.labels.StandardXYItemLabelGenerator.StandardXYItemLabelGenerator(String)",1,1,12,13,1
"org.jfree.chart.labels.StandardXYItemLabelGenerator.StandardXYItemLabelGenerator(String,DateFormat,DateFormat)",1,1,14,15,1
"org.jfree.chart.labels.StandardXYItemLabelGenerator.StandardXYItemLabelGenerator(String,DateFormat,NumberFormat)",1,1,14,15,1
"org.jfree.chart.labels.StandardXYItemLabelGenerator.StandardXYItemLabelGenerator(String,NumberFormat,DateFormat)",1,1,18,15,1
"org.jfree.chart.labels.StandardXYItemLabelGenerator.StandardXYItemLabelGenerator(String,NumberFormat,NumberFormat)",1,1,14,15,1
"org.jfree.chart.labels.StandardXYItemLabelGenerator.clone()",1,1,11,11,1
"org.jfree.chart.labels.StandardXYItemLabelGenerator.equals(Object)",3,1,17,66,3
"org.jfree.chart.labels.StandardXYItemLabelGenerator.generateLabel(XYDataset,int,int)",1,1,13,22,1
"org.jfree.chart.labels.StandardXYItemLabelGeneratorTest.testCloning()",1,1,37,497,1
"org.jfree.chart.labels.StandardXYItemLabelGeneratorTest.testEquals()",1,1,47,687,1
"org.jfree.chart.labels.StandardXYItemLabelGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.StandardXYItemLabelGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.labels.StandardXYItemLabelGeneratorTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.labels.StandardXYSeriesLabelGenerator.StandardXYSeriesLabelGenerator()",1,1,7,8,1
"org.jfree.chart.labels.StandardXYSeriesLabelGenerator.StandardXYSeriesLabelGenerator(String)",1,1,9,18,1
"org.jfree.chart.labels.StandardXYSeriesLabelGenerator.clone()",1,1,13,11,1
"org.jfree.chart.labels.StandardXYSeriesLabelGenerator.createItemArray(XYDataset,int)",1,1,14,41,1
"org.jfree.chart.labels.StandardXYSeriesLabelGenerator.equals(Object)",4,1,22,101,4
"org.jfree.chart.labels.StandardXYSeriesLabelGenerator.generateLabel(XYDataset,int)",1,1,17,46,1
"org.jfree.chart.labels.StandardXYSeriesLabelGenerator.hashCode()",1,1,11,33,1
"org.jfree.chart.labels.StandardXYSeriesLabelGeneratorTest.testCloning()",1,1,13,77,1
"org.jfree.chart.labels.StandardXYSeriesLabelGeneratorTest.testEquals()",1,1,16,93,1
"org.jfree.chart.labels.StandardXYSeriesLabelGeneratorTest.testGenerateLabel()",1,1,13,97,1
"org.jfree.chart.labels.StandardXYSeriesLabelGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.StandardXYSeriesLabelGeneratorTest.testPublicCloneable()",1,1,9,19,1
"org.jfree.chart.labels.StandardXYSeriesLabelGeneratorTest.testSerialization()",1,1,11,26,1
"org.jfree.chart.labels.StandardXYToolTipGenerator.StandardXYToolTipGenerator()",1,1,7,13,1
"org.jfree.chart.labels.StandardXYToolTipGenerator.StandardXYToolTipGenerator(String,DateFormat,DateFormat)",1,1,14,15,1
"org.jfree.chart.labels.StandardXYToolTipGenerator.StandardXYToolTipGenerator(String,DateFormat,NumberFormat)",1,1,14,15,1
"org.jfree.chart.labels.StandardXYToolTipGenerator.StandardXYToolTipGenerator(String,NumberFormat,DateFormat)",1,1,18,15,1
"org.jfree.chart.labels.StandardXYToolTipGenerator.StandardXYToolTipGenerator(String,NumberFormat,NumberFormat)",1,1,14,15,1
"org.jfree.chart.labels.StandardXYToolTipGenerator.clone()",1,1,11,11,1
"org.jfree.chart.labels.StandardXYToolTipGenerator.equals(Object)",3,1,17,66,3
"org.jfree.chart.labels.StandardXYToolTipGenerator.generateToolTip(XYDataset,int,int)",1,1,13,22,1
"org.jfree.chart.labels.StandardXYToolTipGenerator.getTimeSeriesInstance()",1,1,10,19,1
"org.jfree.chart.labels.StandardXYToolTipGeneratorTest.testCloning()",1,1,11,71,1
"org.jfree.chart.labels.StandardXYToolTipGeneratorTest.testEquals()",1,1,47,687,1
"org.jfree.chart.labels.StandardXYToolTipGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.StandardXYToolTipGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.labels.StandardXYToolTipGeneratorTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.labels.StandardXYZToolTipGenerator.StandardXYZToolTipGenerator()",1,1,12,16,1
"org.jfree.chart.labels.StandardXYZToolTipGenerator.StandardXYZToolTipGenerator(String,DateFormat,DateFormat,DateFormat)",1,1,17,41,1
"org.jfree.chart.labels.StandardXYZToolTipGenerator.StandardXYZToolTipGenerator(String,NumberFormat,NumberFormat,NumberFormat)",1,1,18,41,1
"org.jfree.chart.labels.StandardXYZToolTipGenerator.createItemArray(XYZDataset,int,int)",1,4,39,384,4
"org.jfree.chart.labels.StandardXYZToolTipGenerator.equals(Object)",6,1,27,178,6
"org.jfree.chart.labels.StandardXYZToolTipGenerator.generateLabelString(XYDataset,int,int)",1,1,16,44,1
"org.jfree.chart.labels.StandardXYZToolTipGenerator.generateToolTip(XYZDataset,int,int)",1,1,13,22,1
"org.jfree.chart.labels.StandardXYZToolTipGenerator.getZDateFormat()",1,1,8,8,1
"org.jfree.chart.labels.StandardXYZToolTipGenerator.getZFormat()",1,1,8,8,1
"org.jfree.chart.labels.StandardXYZToolTipGeneratorTest.testCloning()",1,1,12,71,1
"org.jfree.chart.labels.StandardXYZToolTipGeneratorTest.testEquals()",1,1,64,981,1
"org.jfree.chart.labels.StandardXYZToolTipGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.StandardXYZToolTipGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.labels.StandardXYZToolTipGeneratorTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.labels.SymbolicXYItemLabelGenerator.clone()",1,1,11,11,1
"org.jfree.chart.labels.SymbolicXYItemLabelGenerator.equals(Object)",3,1,17,49,3
"org.jfree.chart.labels.SymbolicXYItemLabelGenerator.generateLabel(XYDataset,int,int)",1,1,14,10,1
"org.jfree.chart.labels.SymbolicXYItemLabelGenerator.generateToolTip(XYDataset,int,int)",1,4,34,275,4
"org.jfree.chart.labels.SymbolicXYItemLabelGenerator.hashCode()",1,1,10,13,1
"org.jfree.chart.labels.SymbolicXYItemLabelGenerator.round(double,int)",2,2,16,123,2
"org.jfree.chart.labels.SymbolicXYItemLabelGeneratorTest.testCloning()",1,1,12,71,1
"org.jfree.chart.labels.SymbolicXYItemLabelGeneratorTest.testEquals()",1,1,10,33,1
"org.jfree.chart.labels.SymbolicXYItemLabelGeneratorTest.testHashCode()",1,1,12,44,1
"org.jfree.chart.labels.SymbolicXYItemLabelGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.labels.SymbolicXYItemLabelGeneratorTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.needle.ArrowNeedle.ArrowNeedle(boolean)",1,1,9,11,1
"org.jfree.chart.needle.ArrowNeedle.clone()",1,1,12,11,1
"org.jfree.chart.needle.ArrowNeedle.drawNeedle(Graphics2D,Rectangle2D,Point2D,double)",1,4,42,584,6
"org.jfree.chart.needle.ArrowNeedle.equals(Object)",5,1,24,130,5
"org.jfree.chart.needle.ArrowNeedle.hashCode()",1,1,11,38,1
"org.jfree.chart.needle.ArrowNeedleTest.testCloning()",1,1,11,77,1
"org.jfree.chart.needle.ArrowNeedleTest.testEquals()",1,1,14,93,1
"org.jfree.chart.needle.ArrowNeedleTest.testSerialization()",1,1,9,31,1
"org.jfree.chart.needle.LineNeedle.clone()",1,1,12,11,1
"org.jfree.chart.needle.LineNeedle.drawNeedle(Graphics2D,Rectangle2D,Point2D,double)",1,2,22,210,3
"org.jfree.chart.needle.LineNeedle.equals(Object)",3,1,17,66,3
"org.jfree.chart.needle.LineNeedle.hashCode()",1,1,9,11,1
"org.jfree.chart.needle.LineNeedleTest.testCloning()",1,1,11,71,1
"org.jfree.chart.needle.LineNeedleTest.testEquals()",1,1,10,33,1
"org.jfree.chart.needle.LineNeedleTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.needle.LongNeedle.LongNeedle()",1,1,7,11,1
"org.jfree.chart.needle.LongNeedle.clone()",1,1,12,11,1
"org.jfree.chart.needle.LongNeedle.drawNeedle(Graphics2D,Rectangle2D,Point2D,double)",1,5,66,991,7
"org.jfree.chart.needle.LongNeedle.equals(Object)",3,1,17,66,3
"org.jfree.chart.needle.LongNeedle.hashCode()",1,1,9,11,1
"org.jfree.chart.needle.LongNeedleTest.testCloning()",1,1,11,71,1
"org.jfree.chart.needle.LongNeedleTest.testEquals()",1,1,10,33,1
"org.jfree.chart.needle.LongNeedleTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.needle.MeterNeedle.MeterNeedle()",1,1,6,12,1
"org.jfree.chart.needle.MeterNeedle.MeterNeedle(Paint,Paint,Paint)",1,1,12,30,1
"org.jfree.chart.needle.MeterNeedle.defaultDisplay(Graphics2D,Shape)",1,3,17,117,3
"org.jfree.chart.needle.MeterNeedle.draw(Graphics2D,Rectangle2D)",1,1,9,15,1
"org.jfree.chart.needle.MeterNeedle.draw(Graphics2D,Rectangle2D,Point2D,double)",1,1,16,74,1
"org.jfree.chart.needle.MeterNeedle.draw(Graphics2D,Rectangle2D,double)",1,1,13,114,1
"org.jfree.chart.needle.MeterNeedle.equals(Object)",10,1,39,374,10
"org.jfree.chart.needle.MeterNeedle.getFillPaint()",1,1,8,8,1
"org.jfree.chart.needle.MeterNeedle.getHighlightPaint()",1,1,8,8,1
"org.jfree.chart.needle.MeterNeedle.getOutlinePaint()",1,1,8,8,1
"org.jfree.chart.needle.MeterNeedle.getOutlineStroke()",1,1,8,8,1
"org.jfree.chart.needle.MeterNeedle.getRotateX()",1,1,8,11,1
"org.jfree.chart.needle.MeterNeedle.getRotateY()",1,1,8,11,1
"org.jfree.chart.needle.MeterNeedle.getSize()",1,1,8,11,1
"org.jfree.chart.needle.MeterNeedle.getTransform()",1,1,8,4,1
"org.jfree.chart.needle.MeterNeedle.hashCode()",1,1,16,159,1
"org.jfree.chart.needle.MeterNeedle.readObject(ObjectInputStream)",1,1,16,75,1
"org.jfree.chart.needle.MeterNeedle.setFillPaint(Paint)",1,1,10,26,2
"org.jfree.chart.needle.MeterNeedle.setHighlightPaint(Paint)",1,1,10,26,2
"org.jfree.chart.needle.MeterNeedle.setOutlinePaint(Paint)",1,1,10,26,2
"org.jfree.chart.needle.MeterNeedle.setOutlineStroke(Stroke)",1,1,10,26,2
"org.jfree.chart.needle.MeterNeedle.setRotateX(double)",1,1,8,15,1
"org.jfree.chart.needle.MeterNeedle.setRotateY(double)",1,1,8,15,1
"org.jfree.chart.needle.MeterNeedle.setSize(int)",1,1,8,15,1
"org.jfree.chart.needle.MeterNeedle.writeObject(ObjectOutputStream)",1,1,14,75,1
"org.jfree.chart.needle.MeterNeedleTest.testEquals()",1,1,38,720,1
"org.jfree.chart.needle.MiddlePinNeedle.clone()",1,1,12,11,1
"org.jfree.chart.needle.MiddlePinNeedle.drawNeedle(Graphics2D,Rectangle2D,Point2D,double)",1,2,39,578,4
"org.jfree.chart.needle.MiddlePinNeedle.equals(Object)",4,2,20,95,5
"org.jfree.chart.needle.MiddlePinNeedle.hashCode()",1,1,9,11,1
"org.jfree.chart.needle.MiddlePinNeedleTest.testCloning()",1,1,11,71,1
"org.jfree.chart.needle.MiddlePinNeedleTest.testEquals()",1,1,10,33,1
"org.jfree.chart.needle.MiddlePinNeedleTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.needle.PinNeedle.clone()",1,1,12,11,1
"org.jfree.chart.needle.PinNeedle.drawNeedle(Graphics2D,Rectangle2D,Point2D,double)",1,2,38,548,4
"org.jfree.chart.needle.PinNeedle.equals(Object)",4,1,20,85,4
"org.jfree.chart.needle.PinNeedle.hashCode()",1,1,9,11,1
"org.jfree.chart.needle.PinNeedleTest.testCloning()",1,1,11,71,1
"org.jfree.chart.needle.PinNeedleTest.testEquals()",1,1,10,33,1
"org.jfree.chart.needle.PinNeedleTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.needle.PlumNeedle.clone()",1,1,12,11,1
"org.jfree.chart.needle.PlumNeedle.drawNeedle(Graphics2D,Rectangle2D,Point2D,double)",1,2,29,372,3
"org.jfree.chart.needle.PlumNeedle.equals(Object)",4,1,20,85,4
"org.jfree.chart.needle.PlumNeedle.hashCode()",1,1,9,11,1
"org.jfree.chart.needle.PlumNeedleTest.testCloning()",1,1,11,71,1
"org.jfree.chart.needle.PlumNeedleTest.testEquals()",1,1,10,33,1
"org.jfree.chart.needle.PlumNeedleTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.needle.PointerNeedle.clone()",1,1,12,11,1
"org.jfree.chart.needle.PointerNeedle.drawNeedle(Graphics2D,Rectangle2D,Point2D,double)",1,5,48,677,6
"org.jfree.chart.needle.PointerNeedle.equals(Object)",4,1,20,85,4
"org.jfree.chart.needle.PointerNeedle.hashCode()",1,1,9,11,1
"org.jfree.chart.needle.PointerNeedleTest.testCloning()",1,1,11,71,1
"org.jfree.chart.needle.PointerNeedleTest.testEquals()",1,1,10,33,1
"org.jfree.chart.needle.PointerNeedleTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.needle.ShipNeedle.clone()",1,1,12,11,1
"org.jfree.chart.needle.ShipNeedle.drawNeedle(Graphics2D,Rectangle2D,Point2D,double)",1,2,27,367,3
"org.jfree.chart.needle.ShipNeedle.equals(Object)",4,2,20,95,5
"org.jfree.chart.needle.ShipNeedle.hashCode()",1,1,9,11,1
"org.jfree.chart.needle.ShipNeedleTest.testCloning()",1,1,11,71,1
"org.jfree.chart.needle.ShipNeedleTest.testEquals()",1,1,10,33,1
"org.jfree.chart.needle.ShipNeedleTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.needle.WindNeedle.WindNeedle()",1,1,6,8,1
"org.jfree.chart.needle.WindNeedle.drawNeedle(Graphics2D,Rectangle2D,Point2D,double)",1,2,25,283,3
"org.jfree.chart.needle.WindNeedle.equals(Object)",4,2,20,95,5
"org.jfree.chart.needle.WindNeedle.hashCode()",1,1,9,11,1
"org.jfree.chart.needle.WindNeedleTest.testCloning()",1,1,11,71,1
"org.jfree.chart.needle.WindNeedleTest.testEquals()",1,1,10,33,1
"org.jfree.chart.needle.WindNeedleTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.panel.AbstractOverlay.AbstractOverlay()",1,1,6,8,1
"org.jfree.chart.panel.AbstractOverlay.addChangeListener(OverlayChangeListener)",1,1,11,31,1
"org.jfree.chart.panel.AbstractOverlay.fireOverlayChanged()",1,1,9,15,1
"org.jfree.chart.panel.AbstractOverlay.notifyListeners(OverlayChangeEvent)",1,3,15,118,3
"org.jfree.chart.panel.AbstractOverlay.removeChangeListener(OverlayChangeListener)",1,1,11,31,1
"org.jfree.chart.panel.CrosshairOverlay.CrosshairOverlay()",1,1,8,25,1
"org.jfree.chart.panel.CrosshairOverlay.addDomainCrosshair(Crosshair)",1,1,15,43,1
"org.jfree.chart.panel.CrosshairOverlay.addRangeCrosshair(Crosshair)",1,1,12,43,1
"org.jfree.chart.panel.CrosshairOverlay.calculateLabelPoint(Line2D,RectangleAnchor,double,double)",1,6,61,744,18
"org.jfree.chart.panel.CrosshairOverlay.clearDomainCrosshairs()",2,2,14,62,3
"org.jfree.chart.panel.CrosshairOverlay.clearRangeCrosshairs()",2,2,14,62,3
"org.jfree.chart.panel.CrosshairOverlay.clone()",1,1,15,57,1
"org.jfree.chart.panel.CrosshairOverlay.drawHorizontalCrosshair(Graphics2D,Rectangle2D,double,Crosshair)",1,6,54,877,6
"org.jfree.chart.panel.CrosshairOverlay.drawVerticalCrosshair(Graphics2D,Rectangle2D,double,Crosshair)",1,6,54,877,6
"org.jfree.chart.panel.CrosshairOverlay.equals(Object)",5,1,24,143,5
"org.jfree.chart.panel.CrosshairOverlay.flipAnchorH(RectangleAnchor)",1,6,22,166,7
"org.jfree.chart.panel.CrosshairOverlay.flipAnchorV(RectangleAnchor)",1,6,22,166,7
"org.jfree.chart.panel.CrosshairOverlay.getDomainCrosshairs()",1,1,8,11,1
"org.jfree.chart.panel.CrosshairOverlay.getRangeCrosshairs()",1,1,8,11,1
"org.jfree.chart.panel.CrosshairOverlay.paintOverlay(Graphics2D,ChartPanel)",1,7,46,450,7
"org.jfree.chart.panel.CrosshairOverlay.propertyChange(PropertyChangeEvent)",1,1,10,4,1
"org.jfree.chart.panel.CrosshairOverlay.removeDomainCrosshair(Crosshair)",1,2,15,48,2
"org.jfree.chart.panel.CrosshairOverlay.removeRangeCrosshair(Crosshair)",1,2,15,48,2
"org.jfree.chart.panel.CrosshairOverlay.textAlignPtForLabelAnchorH(RectangleAnchor)",1,8,36,270,9
"org.jfree.chart.panel.CrosshairOverlay.textAlignPtForLabelAnchorV(RectangleAnchor)",1,8,36,270,9
"org.jfree.chart.panel.CrosshairOverlayTest.testCloning()",1,1,17,230,1
"org.jfree.chart.panel.CrosshairOverlayTest.testEquals()",1,1,9,18,1
"org.jfree.chart.panel.CrosshairOverlayTest.testSerialization()",1,1,12,104,1
"org.jfree.chart.plot.AbstractPieLabelDistributor.AbstractPieLabelDistributor()",1,1,6,8,1
"org.jfree.chart.plot.AbstractPieLabelDistributor.addPieLabelRecord(PieLabelRecord)",1,1,9,26,1
"org.jfree.chart.plot.AbstractPieLabelDistributor.clear()",1,1,6,11,1
"org.jfree.chart.plot.AbstractPieLabelDistributor.getItemCount()",1,1,8,15,1
"org.jfree.chart.plot.AbstractPieLabelDistributor.getPieLabelRecord(int)",1,1,10,19,1
"org.jfree.chart.plot.CategoryCrosshairState.CategoryCrosshairState()",1,1,7,16,1
"org.jfree.chart.plot.CategoryCrosshairState.getColumnKey()",1,1,8,8,1
"org.jfree.chart.plot.CategoryCrosshairState.getRowKey()",1,1,8,8,1
"org.jfree.chart.plot.CategoryCrosshairState.setColumnKey(Comparable)",1,1,8,11,1
"org.jfree.chart.plot.CategoryCrosshairState.setRowKey(Comparable)",1,1,8,11,1
"org.jfree.chart.plot.CategoryCrosshairState.updateCrosshairPoint(Comparable,Comparable,double,int,double,double,PlotOrientation)",1,3,35,302,4
"org.jfree.chart.plot.CategoryCrosshairState.updateCrosshairX(Comparable,Comparable,int,double,PlotOrientation)",1,4,27,184,4
"org.jfree.chart.plot.CategoryMarker.CategoryMarker(Comparable)",1,1,8,19,1
"org.jfree.chart.plot.CategoryMarker.CategoryMarker(Comparable,Paint,Stroke)",1,1,10,25,1
"org.jfree.chart.plot.CategoryMarker.CategoryMarker(Comparable,Paint,Stroke,Paint,Stroke,float)",1,1,17,53,1
"org.jfree.chart.plot.CategoryMarker.equals(Object)",6,1,27,180,6
"org.jfree.chart.plot.CategoryMarker.getDrawAsLine()",1,1,9,11,1
"org.jfree.chart.plot.CategoryMarker.getKey()",1,1,8,8,1
"org.jfree.chart.plot.CategoryMarker.setDrawAsLine(boolean)",1,1,11,26,1
"org.jfree.chart.plot.CategoryMarker.setKey(Comparable)",1,1,13,34,1
"org.jfree.chart.plot.CategoryMarkerTest.markerChanged(MarkerChangeEvent)",1,1,9,11,1
"org.jfree.chart.plot.CategoryMarkerTest.testCloning()",1,1,13,129,1
"org.jfree.chart.plot.CategoryMarkerTest.testEquals()",1,1,56,931,1
"org.jfree.chart.plot.CategoryMarkerTest.testGetSetDrawAsLine()",1,1,13,101,1
"org.jfree.chart.plot.CategoryMarkerTest.testGetSetKey()",1,2,21,151,2
"org.jfree.chart.plot.CategoryMarkerTest.testSerialization()",1,1,11,70,1
"org.jfree.chart.plot.CategoryPlot.CategoryPlot()",1,1,6,14,1
"org.jfree.chart.plot.CategoryPlot.CategoryPlot(CategoryDataset,CategoryAxis,ValueAxis,CategoryItemRenderer)",1,5,78,"1,235",5
"org.jfree.chart.plot.CategoryPlot.addAnnotation(CategoryAnnotation)",1,1,11,11,1
"org.jfree.chart.plot.CategoryPlot.addAnnotation(CategoryAnnotation,boolean)",1,2,17,59,2
"org.jfree.chart.plot.CategoryPlot.addDomainMarker(CategoryMarker)",1,1,13,11,1
"org.jfree.chart.plot.CategoryPlot.addDomainMarker(CategoryMarker,Layer)",1,1,15,15,1
"org.jfree.chart.plot.CategoryPlot.addDomainMarker(int,CategoryMarker,Layer)",1,1,16,26,1
"org.jfree.chart.plot.CategoryPlot.addDomainMarker(int,CategoryMarker,Layer,boolean)",1,6,43,328,6
"org.jfree.chart.plot.CategoryPlot.addRangeMarker(Marker)",1,1,13,11,1
"org.jfree.chart.plot.CategoryPlot.addRangeMarker(Marker,Layer)",1,1,15,15,1
"org.jfree.chart.plot.CategoryPlot.addRangeMarker(int,Marker,Layer)",1,1,16,26,1
"org.jfree.chart.plot.CategoryPlot.addRangeMarker(int,Marker,Layer,boolean)",1,6,41,288,6
"org.jfree.chart.plot.CategoryPlot.annotationChanged(AnnotationChangeEvent)",1,2,17,51,2
"org.jfree.chart.plot.CategoryPlot.calculateAxisSpace(Graphics2D,Rectangle2D)",1,1,15,42,1
"org.jfree.chart.plot.CategoryPlot.calculateDomainAxisSpace(Graphics2D,Rectangle2D,AxisSpace)",1,7,47,447,8
"org.jfree.chart.plot.CategoryPlot.calculateRangeAxisSpace(Graphics2D,Rectangle2D,AxisSpace)",1,6,39,359,7
"org.jfree.chart.plot.CategoryPlot.checkAxisIndices(List)",6,2,31,218,6
"org.jfree.chart.plot.CategoryPlot.clearAnnotations()",1,2,13,92,2
"org.jfree.chart.plot.CategoryPlot.clearDomainAxes()",1,3,13,62,3
"org.jfree.chart.plot.CategoryPlot.clearDomainMarkers()",1,5,27,194,5
"org.jfree.chart.plot.CategoryPlot.clearDomainMarkers(int)",1,7,35,257,7
"org.jfree.chart.plot.CategoryPlot.clearRangeAxes()",1,3,13,62,3
"org.jfree.chart.plot.CategoryPlot.clearRangeMarkers()",1,5,27,194,5
"org.jfree.chart.plot.CategoryPlot.clearRangeMarkers(int)",1,7,35,257,7
"org.jfree.chart.plot.CategoryPlot.clone()",1,12,69,941,12
"org.jfree.chart.plot.CategoryPlot.cloneMarkerMap(Map)",1,2,22,97,2
"org.jfree.chart.plot.CategoryPlot.configureDomainAxes()",1,3,10,41,3
"org.jfree.chart.plot.CategoryPlot.configureRangeAxes()",1,3,10,41,3
"org.jfree.chart.plot.CategoryPlot.datasetChanged(DatasetChangeEvent)",1,4,22,116,4
"org.jfree.chart.plot.CategoryPlot.datasetsMappedToDomainAxis(int)",3,5,32,192,6
"org.jfree.chart.plot.CategoryPlot.datasetsMappedToRangeAxis(int)",1,5,27,167,5
"org.jfree.chart.plot.CategoryPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",3,26,203,"3,269",33
"org.jfree.chart.plot.CategoryPlot.drawAnnotations(Graphics2D,Rectangle2D)",1,3,17,83,3
"org.jfree.chart.plot.CategoryPlot.drawAxes(Graphics2D,Rectangle2D,Rectangle2D,PlotRenderingInfo)",1,13,83,"1,082",13
"org.jfree.chart.plot.CategoryPlot.drawBackground(Graphics2D,Rectangle2D)",1,1,15,30,1
"org.jfree.chart.plot.CategoryPlot.drawDomainCrosshair(Graphics2D,Rectangle2D,PlotOrientation,int,Comparable,Comparable,Stroke,Paint)",1,2,41,299,2
"org.jfree.chart.plot.CategoryPlot.drawDomainGridlines(Graphics2D,Rectangle2D)",3,4,31,249,6
"org.jfree.chart.plot.CategoryPlot.drawDomainMarkers(Graphics2D,Rectangle2D,int,Layer)",2,3,27,180,5
"org.jfree.chart.plot.CategoryPlot.drawRangeCrosshair(Graphics2D,Rectangle2D,PlotOrientation,double,ValueAxis,Stroke,Paint)",2,2,39,267,3
"org.jfree.chart.plot.CategoryPlot.drawRangeGridlines(Graphics2D,Rectangle2D,List)",4,10,51,436,13
"org.jfree.chart.plot.CategoryPlot.drawRangeLine(Graphics2D,Rectangle2D,double,Stroke,Paint)",1,3,27,223,3
"org.jfree.chart.plot.CategoryPlot.drawRangeMarkers(Graphics2D,Rectangle2D,int,Layer)",2,3,27,180,5
"org.jfree.chart.plot.CategoryPlot.drawZeroRangeBaseline(Graphics2D,Rectangle2D)",2,1,18,77,2
"org.jfree.chart.plot.CategoryPlot.equals(Object)",51,1,188,"2,965",51
"org.jfree.chart.plot.CategoryPlot.findRangeAxisIndex(ValueAxis)",3,3,8,66,3
"org.jfree.chart.plot.CategoryPlot.getAnchorValue()",1,1,10,13,1
"org.jfree.chart.plot.CategoryPlot.getAnnotations()",1,1,11,8,1
"org.jfree.chart.plot.CategoryPlot.getAxisOffset()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getCategories()",1,2,14,38,2
"org.jfree.chart.plot.CategoryPlot.getCategoriesForAxis(CategoryAxis)",1,4,24,133,4
"org.jfree.chart.plot.CategoryPlot.getColumnRenderingOrder()",1,1,11,8,1
"org.jfree.chart.plot.CategoryPlot.getCrosshairDatasetIndex()",1,1,10,11,1
"org.jfree.chart.plot.CategoryPlot.getDataRange(ValueAxis)",1,5,30,181,5
"org.jfree.chart.plot.CategoryPlot.getDataset()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getDataset(int)",1,1,13,22,1
"org.jfree.chart.plot.CategoryPlot.getDatasetCount()",1,1,10,15,1
"org.jfree.chart.plot.CategoryPlot.getDatasetIndices(DatasetRenderingOrder)",1,4,21,108,4
"org.jfree.chart.plot.CategoryPlot.getDatasetRenderingOrder()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getDomainAxis()",1,1,12,8,1
"org.jfree.chart.plot.CategoryPlot.getDomainAxis(int)",1,3,20,88,3
"org.jfree.chart.plot.CategoryPlot.getDomainAxisCount()",1,1,8,15,1
"org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge()",1,1,9,8,1
"org.jfree.chart.plot.CategoryPlot.getDomainAxisEdge(int)",1,2,17,81,2
"org.jfree.chart.plot.CategoryPlot.getDomainAxisForDataset(int)",1,2,24,136,2
"org.jfree.chart.plot.CategoryPlot.getDomainAxisIndex(CategoryAxis)",3,3,22,85,3
"org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getDomainAxisLocation(int)",1,2,16,64,2
"org.jfree.chart.plot.CategoryPlot.getDomainCrosshairColumnKey()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getDomainCrosshairPaint()",1,1,13,8,1
"org.jfree.chart.plot.CategoryPlot.getDomainCrosshairRowKey()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getDomainCrosshairStroke()",1,1,13,8,1
"org.jfree.chart.plot.CategoryPlot.getDomainGridlinePaint()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getDomainGridlinePosition()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getDomainGridlineStroke()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getDomainMarkers(Layer)",1,1,10,11,1
"org.jfree.chart.plot.CategoryPlot.getDomainMarkers(int,Layer)",1,4,23,142,4
"org.jfree.chart.plot.CategoryPlot.getDrawSharedDomainAxis()",1,1,11,13,1
"org.jfree.chart.plot.CategoryPlot.getFixedDomainAxisSpace()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getFixedLegendItems()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getFixedRangeAxisSpace()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getIndexOf(CategoryItemRenderer)",3,3,17,66,3
"org.jfree.chart.plot.CategoryPlot.getLegendItems()",2,4,25,142,5
"org.jfree.chart.plot.CategoryPlot.getOrientation()",1,1,11,8,1
"org.jfree.chart.plot.CategoryPlot.getPlotType()",1,1,9,11,1
"org.jfree.chart.plot.CategoryPlot.getRangeAxis()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getRangeAxis(int)",1,3,18,84,3
"org.jfree.chart.plot.CategoryPlot.getRangeAxisCount()",1,1,8,15,1
"org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge()",1,1,8,8,1
"org.jfree.chart.plot.CategoryPlot.getRangeAxisEdge(int)",1,1,11,28,1
"org.jfree.chart.plot.CategoryPlot.getRangeAxisForDataset(int)",1,2,24,136,2
"org.jfree.chart.plot.CategoryPlot.getRangeAxisIndex(ValueAxis)",1,3,25,96,3
"org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation()",1,1,8,8,1
"org.jfree.chart.plot.CategoryPlot.getRangeAxisLocation(int)",1,2,16,64,2
"org.jfree.chart.plot.CategoryPlot.getRangeCrosshairPaint()",1,1,12,8,1
"org.jfree.chart.plot.CategoryPlot.getRangeCrosshairStroke()",1,1,13,8,1
"org.jfree.chart.plot.CategoryPlot.getRangeCrosshairValue()",1,1,10,13,1
"org.jfree.chart.plot.CategoryPlot.getRangeGridlinePaint()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getRangeGridlineStroke()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getRangeMarkers(Layer)",1,1,12,15,1
"org.jfree.chart.plot.CategoryPlot.getRangeMarkers(int,Layer)",1,4,23,142,4
"org.jfree.chart.plot.CategoryPlot.getRangeMinorGridlinePaint()",1,1,13,8,1
"org.jfree.chart.plot.CategoryPlot.getRangeMinorGridlineStroke()",1,1,13,8,1
"org.jfree.chart.plot.CategoryPlot.getRangeZeroBaselinePaint()",1,1,13,8,1
"org.jfree.chart.plot.CategoryPlot.getRangeZeroBaselineStroke()",1,1,12,8,1
"org.jfree.chart.plot.CategoryPlot.getRenderer()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getRenderer(int)",2,2,16,64,2
"org.jfree.chart.plot.CategoryPlot.getRendererCount()",1,1,10,15,1
"org.jfree.chart.plot.CategoryPlot.getRendererForDataset(CategoryDataset)",3,2,19,88,3
"org.jfree.chart.plot.CategoryPlot.getRendererIndices(DatasetRenderingOrder)",1,4,22,108,4
"org.jfree.chart.plot.CategoryPlot.getRowRenderingOrder()",1,1,11,8,1
"org.jfree.chart.plot.CategoryPlot.getShadowGenerator()",1,1,10,8,1
"org.jfree.chart.plot.CategoryPlot.getWeight()",1,1,11,13,1
"org.jfree.chart.plot.CategoryPlot.handleClick(int,int,PlotRenderingInfo)",1,2,27,204,4
"org.jfree.chart.plot.CategoryPlot.indexOf(CategoryDataset)",3,3,18,66,3
"org.jfree.chart.plot.CategoryPlot.integerise(Rectangle2D)",1,1,14,124,1
"org.jfree.chart.plot.CategoryPlot.isDomainCrosshairVisible()",1,1,13,13,1
"org.jfree.chart.plot.CategoryPlot.isDomainGridlinesVisible()",1,1,10,13,1
"org.jfree.chart.plot.CategoryPlot.isDomainPannable()",1,1,14,8,1
"org.jfree.chart.plot.CategoryPlot.isDomainZoomable()",1,1,12,8,1
"org.jfree.chart.plot.CategoryPlot.isRangeCrosshairLockedOnData()",1,1,11,13,1
"org.jfree.chart.plot.CategoryPlot.isRangeCrosshairVisible()",1,1,10,13,1
"org.jfree.chart.plot.CategoryPlot.isRangeGridlinesVisible()",1,1,10,13,1
"org.jfree.chart.plot.CategoryPlot.isRangeMinorGridlinesVisible()",1,1,13,13,1
"org.jfree.chart.plot.CategoryPlot.isRangePannable()",1,1,15,13,1
"org.jfree.chart.plot.CategoryPlot.isRangeZeroBaselineVisible()",1,1,13,13,1
"org.jfree.chart.plot.CategoryPlot.isRangeZoomable()",1,1,11,8,1
"org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxes(int,List)",1,1,17,72,1
"org.jfree.chart.plot.CategoryPlot.mapDatasetToDomainAxis(int,int)",1,1,13,43,1
"org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxes(int,List)",1,1,17,72,1
"org.jfree.chart.plot.CategoryPlot.mapDatasetToRangeAxis(int,int)",1,1,13,46,1
"org.jfree.chart.plot.CategoryPlot.panDomainAxes(double,PlotRenderingInfo,Point2D)",1,1,14,4,1
"org.jfree.chart.plot.CategoryPlot.panRangeAxes(double,PlotRenderingInfo,Point2D)",4,2,28,190,5
"org.jfree.chart.plot.CategoryPlot.readObject(ObjectInputStream)",1,9,46,536,9
"org.jfree.chart.plot.CategoryPlot.removeAnnotation(CategoryAnnotation)",1,1,13,15,1
"org.jfree.chart.plot.CategoryPlot.removeAnnotation(CategoryAnnotation,boolean)",1,2,21,82,3
"org.jfree.chart.plot.CategoryPlot.removeDomainMarker(Marker)",1,1,14,15,1
"org.jfree.chart.plot.CategoryPlot.removeDomainMarker(Marker,Layer)",1,1,15,19,1
"org.jfree.chart.plot.CategoryPlot.removeDomainMarker(int,Marker,Layer)",1,1,16,28,1
"org.jfree.chart.plot.CategoryPlot.removeDomainMarker(int,Marker,Layer,boolean)",2,3,33,174,5
"org.jfree.chart.plot.CategoryPlot.removeRangeMarker(Marker)",1,1,16,15,1
"org.jfree.chart.plot.CategoryPlot.removeRangeMarker(Marker,Layer)",1,1,17,19,1
"org.jfree.chart.plot.CategoryPlot.removeRangeMarker(int,Marker,Layer)",1,1,18,31,1
"org.jfree.chart.plot.CategoryPlot.removeRangeMarker(int,Marker,Layer,boolean)",2,3,36,202,5
"org.jfree.chart.plot.CategoryPlot.render(Graphics2D,Rectangle2D,int,PlotRenderingInfo,CategoryCrosshairState)",1,12,72,"1,001",13
"org.jfree.chart.plot.CategoryPlot.rendererChanged(RendererChangeEvent)",3,3,24,101,3
"org.jfree.chart.plot.CategoryPlot.setAnchorValue(double)",1,1,11,15,1
"org.jfree.chart.plot.CategoryPlot.setAnchorValue(double,boolean)",1,2,15,33,2
"org.jfree.chart.plot.CategoryPlot.setAxisOffset(RectangleInsets)",1,1,13,26,1
"org.jfree.chart.plot.CategoryPlot.setColumnRenderingOrder(SortOrder)",1,1,16,26,1
"org.jfree.chart.plot.CategoryPlot.setCrosshairDatasetIndex(int)",1,1,11,15,1
"org.jfree.chart.plot.CategoryPlot.setCrosshairDatasetIndex(int,boolean)",1,2,15,33,2
"org.jfree.chart.plot.CategoryPlot.setDataset(CategoryDataset)",1,1,14,11,1
"org.jfree.chart.plot.CategoryPlot.setDataset(int,CategoryDataset)",1,3,22,133,3
"org.jfree.chart.plot.CategoryPlot.setDatasetRenderingOrder(DatasetRenderingOrder)",1,1,15,26,1
"org.jfree.chart.plot.CategoryPlot.setDomainAxes(CategoryAxis[])",1,2,14,62,2
"org.jfree.chart.plot.CategoryPlot.setDomainAxis(CategoryAxis)",1,1,11,11,1
"org.jfree.chart.plot.CategoryPlot.setDomainAxis(int,CategoryAxis)",1,1,12,22,1
"org.jfree.chart.plot.CategoryPlot.setDomainAxis(int,CategoryAxis,boolean)",1,5,25,168,5
"org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(AxisLocation)",1,1,13,19,1
"org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(AxisLocation,boolean)",1,1,11,19,1
"org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(int,AxisLocation)",1,1,14,25,1
"org.jfree.chart.plot.CategoryPlot.setDomainAxisLocation(int,AxisLocation,boolean)",2,2,24,110,4
"org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey(Comparable)",1,1,11,11,1
"org.jfree.chart.plot.CategoryPlot.setDomainCrosshairColumnKey(Comparable,boolean)",1,2,15,28,2
"org.jfree.chart.plot.CategoryPlot.setDomainCrosshairPaint(Paint)",1,1,14,26,1
"org.jfree.chart.plot.CategoryPlot.setDomainCrosshairRowKey(Comparable)",1,1,11,11,1
"org.jfree.chart.plot.CategoryPlot.setDomainCrosshairRowKey(Comparable,boolean)",1,2,15,28,2
"org.jfree.chart.plot.CategoryPlot.setDomainCrosshairStroke(Stroke)",1,1,14,22,1
"org.jfree.chart.plot.CategoryPlot.setDomainCrosshairVisible(boolean)",1,2,18,41,2
"org.jfree.chart.plot.CategoryPlot.setDomainGridlinePaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.CategoryPlot.setDomainGridlinePosition(CategoryAnchor)",1,1,13,26,1
"org.jfree.chart.plot.CategoryPlot.setDomainGridlineStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.plot.CategoryPlot.setDomainGridlinesVisible(boolean)",1,2,17,38,2
"org.jfree.chart.plot.CategoryPlot.setDrawSharedDomainAxis(boolean)",1,1,12,19,1
"org.jfree.chart.plot.CategoryPlot.setFixedDomainAxisSpace(AxisSpace)",1,1,11,11,1
"org.jfree.chart.plot.CategoryPlot.setFixedDomainAxisSpace(AxisSpace,boolean)",1,2,17,28,2
"org.jfree.chart.plot.CategoryPlot.setFixedLegendItems(LegendItemCollection)",1,1,13,15,1
"org.jfree.chart.plot.CategoryPlot.setFixedRangeAxisSpace(AxisSpace)",1,1,11,11,1
"org.jfree.chart.plot.CategoryPlot.setFixedRangeAxisSpace(AxisSpace,boolean)",1,2,17,28,2
"org.jfree.chart.plot.CategoryPlot.setOrientation(PlotOrientation)",1,1,13,26,1
"org.jfree.chart.plot.CategoryPlot.setRangeAxes(ValueAxis[])",1,2,14,62,2
"org.jfree.chart.plot.CategoryPlot.setRangeAxis(ValueAxis)",1,1,9,11,1
"org.jfree.chart.plot.CategoryPlot.setRangeAxis(int,ValueAxis)",1,1,10,19,1
"org.jfree.chart.plot.CategoryPlot.setRangeAxis(int,ValueAxis,boolean)",1,5,25,168,5
"org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(AxisLocation)",1,1,13,15,1
"org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(AxisLocation,boolean)",1,1,12,22,1
"org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(int,AxisLocation)",1,1,13,30,1
"org.jfree.chart.plot.CategoryPlot.setRangeAxisLocation(int,AxisLocation,boolean)",2,2,22,110,4
"org.jfree.chart.plot.CategoryPlot.setRangeCrosshairLockedOnData(boolean)",1,2,15,38,2
"org.jfree.chart.plot.CategoryPlot.setRangeCrosshairPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.CategoryPlot.setRangeCrosshairStroke(Stroke)",1,1,15,26,1
"org.jfree.chart.plot.CategoryPlot.setRangeCrosshairValue(double)",1,1,11,15,1
"org.jfree.chart.plot.CategoryPlot.setRangeCrosshairValue(double,boolean)",1,3,17,43,3
"org.jfree.chart.plot.CategoryPlot.setRangeCrosshairVisible(boolean)",1,2,13,38,2
"org.jfree.chart.plot.CategoryPlot.setRangeGridlinePaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.CategoryPlot.setRangeGridlineStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.plot.CategoryPlot.setRangeGridlinesVisible(boolean)",1,2,15,38,2
"org.jfree.chart.plot.CategoryPlot.setRangeMinorGridlinePaint(Paint)",1,1,15,26,1
"org.jfree.chart.plot.CategoryPlot.setRangeMinorGridlineStroke(Stroke)",1,1,15,26,1
"org.jfree.chart.plot.CategoryPlot.setRangeMinorGridlinesVisible(boolean)",1,2,19,38,2
"org.jfree.chart.plot.CategoryPlot.setRangePannable(boolean)",1,1,13,15,1
"org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselinePaint(Paint)",1,1,15,26,1
"org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselineStroke(Stroke)",1,1,15,26,1
"org.jfree.chart.plot.CategoryPlot.setRangeZeroBaselineVisible(boolean)",1,1,15,19,1
"org.jfree.chart.plot.CategoryPlot.setRenderer(CategoryItemRenderer)",1,1,11,15,1
"org.jfree.chart.plot.CategoryPlot.setRenderer(CategoryItemRenderer,boolean)",1,1,20,19,1
"org.jfree.chart.plot.CategoryPlot.setRenderer(int,CategoryItemRenderer)",1,1,15,30,1
"org.jfree.chart.plot.CategoryPlot.setRenderer(int,CategoryItemRenderer,boolean)",1,4,29,158,4
"org.jfree.chart.plot.CategoryPlot.setRenderers(CategoryItemRenderer[])",1,2,12,62,2
"org.jfree.chart.plot.CategoryPlot.setRowRenderingOrder(SortOrder)",1,1,16,26,1
"org.jfree.chart.plot.CategoryPlot.setShadowGenerator(ShadowGenerator)",1,1,12,15,1
"org.jfree.chart.plot.CategoryPlot.setWeight(int)",1,1,12,19,1
"org.jfree.chart.plot.CategoryPlot.writeObject(ObjectOutputStream)",1,1,22,229,1
"org.jfree.chart.plot.CategoryPlot.zoom(double)",1,2,21,149,2
"org.jfree.chart.plot.CategoryPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D)",1,1,13,4,1
"org.jfree.chart.plot.CategoryPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D,boolean)",1,1,18,12,1
"org.jfree.chart.plot.CategoryPlot.zoomDomainAxes(double,double,PlotRenderingInfo,Point2D)",1,1,14,6,1
"org.jfree.chart.plot.CategoryPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D)",1,1,13,24,1
"org.jfree.chart.plot.CategoryPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D,boolean)",3,4,35,204,5
"org.jfree.chart.plot.CategoryPlot.zoomRangeAxes(double,double,PlotRenderingInfo,Point2D)",1,3,17,60,3
"org.jfree.chart.plot.CategoryPlotTest.test1169972()",1,1,12,85,1
"org.jfree.chart.plot.CategoryPlotTest.test1654215()",1,2,22,196,2
"org.jfree.chart.plot.CategoryPlotTest.testAddDomainMarker()",1,1,15,105,1
"org.jfree.chart.plot.CategoryPlotTest.testAddRangeMarker()",1,1,15,105,1
"org.jfree.chart.plot.CategoryPlotTest.testAxisIndices()",1,1,16,197,1
"org.jfree.chart.plot.CategoryPlotTest.testAxisLocationIndices()",1,1,18,197,1
"org.jfree.chart.plot.CategoryPlotTest.testAxisRange()",1,1,16,164,1
"org.jfree.chart.plot.CategoryPlotTest.testBug2817504()",1,2,24,158,2
"org.jfree.chart.plot.CategoryPlotTest.testCloning()",1,2,47,797,2
"org.jfree.chart.plot.CategoryPlotTest.testCloning2()",1,2,30,296,2
"org.jfree.chart.plot.CategoryPlotTest.testCloning3()",1,2,32,487,2
"org.jfree.chart.plot.CategoryPlotTest.testConstructor()",1,1,8,19,1
"org.jfree.chart.plot.CategoryPlotTest.testDatasetIndices()",1,1,21,215,1
"org.jfree.chart.plot.CategoryPlotTest.testDomainMarkerIndices()",1,1,21,255,1
"org.jfree.chart.plot.CategoryPlotTest.testEquals()",1,1,299,"6,497",1
"org.jfree.chart.plot.CategoryPlotTest.testEquals_ObjectList()",1,1,13,82,1
"org.jfree.chart.plot.CategoryPlotTest.testEquals_ObjectList2()",1,1,13,71,1
"org.jfree.chart.plot.CategoryPlotTest.testEquals_ObjectList3()",1,1,13,82,1
"org.jfree.chart.plot.CategoryPlotTest.testEquals_ObjectList4()",1,1,13,71,1
"org.jfree.chart.plot.CategoryPlotTest.testEquals_ObjectList5()",1,1,13,66,1
"org.jfree.chart.plot.CategoryPlotTest.testGetDomainAxisForDataset()",1,1,36,401,2
"org.jfree.chart.plot.CategoryPlotTest.testGetDomainAxisIndex()",1,1,24,236,2
"org.jfree.chart.plot.CategoryPlotTest.testGetRangeAxisForDataset()",1,1,36,401,2
"org.jfree.chart.plot.CategoryPlotTest.testGetRangeAxisIndex()",1,1,24,236,2
"org.jfree.chart.plot.CategoryPlotTest.testGetRendererForDataset2()",1,1,19,166,1
"org.jfree.chart.plot.CategoryPlotTest.testMapDatasetToDomainAxis()",1,1,18,197,1
"org.jfree.chart.plot.CategoryPlotTest.testMapDatasetToRangeAxis()",1,1,18,197,1
"org.jfree.chart.plot.CategoryPlotTest.testRangeMarkerIndices()",1,1,21,255,1
"org.jfree.chart.plot.CategoryPlotTest.testRemoveDomainMarker()",1,1,9,22,1
"org.jfree.chart.plot.CategoryPlotTest.testRemoveRangeMarker()",1,1,9,22,1
"org.jfree.chart.plot.CategoryPlotTest.testRendererIndices()",1,1,15,159,1
"org.jfree.chart.plot.CategoryPlotTest.testSerialization()",1,1,15,88,1
"org.jfree.chart.plot.CategoryPlotTest.testSerialization2()",1,1,15,82,1
"org.jfree.chart.plot.CategoryPlotTest.testSerialization3()",1,2,18,96,2
"org.jfree.chart.plot.CategoryPlotTest.testSerialization4()",1,2,22,186,2
"org.jfree.chart.plot.CategoryPlotTest.testSerialization5()",1,1,44,514,1
"org.jfree.chart.plot.CategoryPlotTest.testSetRenderer()",1,1,16,78,1
"org.jfree.chart.plot.CombinedDomainCategoryPlot.CombinedDomainCategoryPlot()",1,1,6,8,1
"org.jfree.chart.plot.CombinedDomainCategoryPlot.CombinedDomainCategoryPlot(CategoryAxis)",1,1,11,43,1
"org.jfree.chart.plot.CombinedDomainCategoryPlot.add(CategoryPlot)",1,1,12,11,1
"org.jfree.chart.plot.CombinedDomainCategoryPlot.add(CategoryPlot,int)",2,2,28,230,3
"org.jfree.chart.plot.CombinedDomainCategoryPlot.calculateAxisSpace(Graphics2D,Rectangle2D)",1,12,79,"1,233",12
"org.jfree.chart.plot.CombinedDomainCategoryPlot.clone()",1,2,19,89,2
"org.jfree.chart.plot.CombinedDomainCategoryPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",1,6,61,741,8
"org.jfree.chart.plot.CombinedDomainCategoryPlot.equals(Object)",5,1,24,155,5
"org.jfree.chart.plot.CombinedDomainCategoryPlot.findSubplot(PlotRenderingInfo,Point2D)",1,2,19,95,2
"org.jfree.chart.plot.CombinedDomainCategoryPlot.getCategories()",1,5,25,158,5
"org.jfree.chart.plot.CombinedDomainCategoryPlot.getCategoriesForAxis(CategoryAxis)",1,1,15,4,1
"org.jfree.chart.plot.CombinedDomainCategoryPlot.getDataRange(ValueAxis)",1,1,19,11,1
"org.jfree.chart.plot.CombinedDomainCategoryPlot.getGap()",1,1,10,13,1
"org.jfree.chart.plot.CombinedDomainCategoryPlot.getLegendItems()",1,4,21,121,4
"org.jfree.chart.plot.CombinedDomainCategoryPlot.getSubplots()",2,2,14,43,2
"org.jfree.chart.plot.CombinedDomainCategoryPlot.handleClick(int,int,PlotRenderingInfo)",1,3,19,149,3
"org.jfree.chart.plot.CombinedDomainCategoryPlot.plotChanged(PlotChangeEvent)",1,1,10,8,1
"org.jfree.chart.plot.CombinedDomainCategoryPlot.remove(CategoryPlot)",1,4,30,282,6
"org.jfree.chart.plot.CombinedDomainCategoryPlot.setFixedRangeAxisSpaceForSubplots(AxisSpace)",1,2,13,51,2
"org.jfree.chart.plot.CombinedDomainCategoryPlot.setGap(double)",1,1,12,19,1
"org.jfree.chart.plot.CombinedDomainCategoryPlot.setOrientation(PlotOrientation)",1,2,14,59,2
"org.jfree.chart.plot.CombinedDomainCategoryPlot.setShadowGenerator(ShadowGenerator)",1,2,17,80,2
"org.jfree.chart.plot.CombinedDomainCategoryPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D)",1,1,12,24,1
"org.jfree.chart.plot.CombinedDomainCategoryPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D,boolean)",1,3,26,140,3
"org.jfree.chart.plot.CombinedDomainCategoryPlot.zoomRangeAxes(double,double,PlotRenderingInfo,Point2D)",1,3,26,138,3
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest.chartChanged(ChartChangeEvent)",1,1,9,15,1
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest.createDataset1()",1,1,37,474,1
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest.createDataset2()",1,1,37,474,1
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest.createPlot()",1,1,35,239,1
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest.testCloning()",1,1,12,71,1
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest.testEquals()",1,1,9,22,1
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest.testNotification()",1,1,21,228,1
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest.testRemoveSubplot()",1,1,16,106,1
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.plot.CombinedDomainXYPlot.CombinedDomainXYPlot()",1,1,6,8,1
"org.jfree.chart.plot.CombinedDomainXYPlot.CombinedDomainXYPlot(ValueAxis)",1,1,13,30,1
"org.jfree.chart.plot.CombinedDomainXYPlot.add(XYPlot)",1,1,13,11,1
"org.jfree.chart.plot.CombinedDomainXYPlot.add(XYPlot,int)",2,2,30,199,3
"org.jfree.chart.plot.CombinedDomainXYPlot.calculateAxisSpace(Graphics2D,Rectangle2D)",1,11,72,"1,162",11
"org.jfree.chart.plot.CombinedDomainXYPlot.clone()",1,3,24,135,3
"org.jfree.chart.plot.CombinedDomainXYPlot.datasetChanged(DatasetChangeEvent)",2,4,23,129,5
"org.jfree.chart.plot.CombinedDomainXYPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",1,5,51,510,6
"org.jfree.chart.plot.CombinedDomainXYPlot.equals(Object)",5,1,24,155,5
"org.jfree.chart.plot.CombinedDomainXYPlot.findSubplot(PlotRenderingInfo,Point2D)",1,2,19,95,2
"org.jfree.chart.plot.CombinedDomainXYPlot.getDataRange(ValueAxis)",2,2,24,74,3
"org.jfree.chart.plot.CombinedDomainXYPlot.getGap()",1,1,10,13,1
"org.jfree.chart.plot.CombinedDomainXYPlot.getLegendItems()",1,4,21,121,4
"org.jfree.chart.plot.CombinedDomainXYPlot.getPlotType()",1,1,9,4,1
"org.jfree.chart.plot.CombinedDomainXYPlot.getSubplots()",1,1,9,11,1
"org.jfree.chart.plot.CombinedDomainXYPlot.handleClick(int,int,PlotRenderingInfo)",1,3,18,149,3
"org.jfree.chart.plot.CombinedDomainXYPlot.isRangePannable()",3,2,15,41,3
"org.jfree.chart.plot.CombinedDomainXYPlot.panRangeAxes(double,PlotRenderingInfo,Point2D)",4,3,31,216,6
"org.jfree.chart.plot.CombinedDomainXYPlot.plotChanged(PlotChangeEvent)",1,1,10,8,1
"org.jfree.chart.plot.CombinedDomainXYPlot.remove(XYPlot)",1,4,28,282,6
"org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpace(AxisSpace)",1,1,12,22,1
"org.jfree.chart.plot.CombinedDomainXYPlot.setFixedRangeAxisSpaceForSubplots(AxisSpace)",1,2,11,28,2
"org.jfree.chart.plot.CombinedDomainXYPlot.setGap(double)",1,1,12,19,1
"org.jfree.chart.plot.CombinedDomainXYPlot.setOrientation(PlotOrientation)",1,2,13,34,2
"org.jfree.chart.plot.CombinedDomainXYPlot.setRangePannable(boolean)",1,2,12,28,2
"org.jfree.chart.plot.CombinedDomainXYPlot.setRenderer(XYItemRenderer)",1,2,18,34,2
"org.jfree.chart.plot.CombinedDomainXYPlot.setShadowGenerator(ShadowGenerator)",1,2,15,53,2
"org.jfree.chart.plot.CombinedDomainXYPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D)",1,1,12,24,1
"org.jfree.chart.plot.CombinedDomainXYPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D,boolean)",1,3,23,114,3
"org.jfree.chart.plot.CombinedDomainXYPlot.zoomRangeAxes(double,double,PlotRenderingInfo,Point2D)",1,3,23,112,3
"org.jfree.chart.plot.CombinedDomainXYPlotTest.chartChanged(ChartChangeEvent)",1,1,9,15,1
"org.jfree.chart.plot.CombinedDomainXYPlotTest.createDataset1()",1,1,44,763,1
"org.jfree.chart.plot.CombinedDomainXYPlotTest.createDataset2()",1,1,23,315,1
"org.jfree.chart.plot.CombinedDomainXYPlotTest.createPlot()",1,1,34,350,1
"org.jfree.chart.plot.CombinedDomainXYPlotTest.testCloning()",1,1,11,71,1
"org.jfree.chart.plot.CombinedDomainXYPlotTest.testConstructor1()",1,1,8,22,1
"org.jfree.chart.plot.CombinedDomainXYPlotTest.testEquals()",1,1,10,33,1
"org.jfree.chart.plot.CombinedDomainXYPlotTest.testNotification()",1,1,21,228,1
"org.jfree.chart.plot.CombinedDomainXYPlotTest.testRemoveSubplot()",1,1,15,83,1
"org.jfree.chart.plot.CombinedDomainXYPlotTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.plot.CombinedRangeCategoryPlot.CombinedRangeCategoryPlot()",1,1,6,8,1
"org.jfree.chart.plot.CombinedRangeCategoryPlot.CombinedRangeCategoryPlot(ValueAxis)",1,1,10,43,1
"org.jfree.chart.plot.CombinedRangeCategoryPlot.add(CategoryPlot)",1,1,13,11,1
"org.jfree.chart.plot.CombinedRangeCategoryPlot.add(CategoryPlot,int)",2,2,30,230,3
"org.jfree.chart.plot.CombinedRangeCategoryPlot.calculateAxisSpace(Graphics2D,Rectangle2D)",1,11,75,"1,162",11
"org.jfree.chart.plot.CombinedRangeCategoryPlot.clone()",1,3,25,135,3
"org.jfree.chart.plot.CombinedRangeCategoryPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",1,6,58,581,8
"org.jfree.chart.plot.CombinedRangeCategoryPlot.equals(Object)",5,1,24,155,5
"org.jfree.chart.plot.CombinedRangeCategoryPlot.getDataRange(ValueAxis)",1,3,25,94,3
"org.jfree.chart.plot.CombinedRangeCategoryPlot.getGap()",1,1,8,11,1
"org.jfree.chart.plot.CombinedRangeCategoryPlot.getLegendItems()",1,4,21,121,4
"org.jfree.chart.plot.CombinedRangeCategoryPlot.getSubplots()",2,2,14,43,2
"org.jfree.chart.plot.CombinedRangeCategoryPlot.handleClick(int,int,PlotRenderingInfo)",1,3,19,149,3
"org.jfree.chart.plot.CombinedRangeCategoryPlot.plotChanged(PlotChangeEvent)",1,1,10,8,1
"org.jfree.chart.plot.CombinedRangeCategoryPlot.readObject(ObjectInputStream)",1,2,18,41,2
"org.jfree.chart.plot.CombinedRangeCategoryPlot.remove(CategoryPlot)",1,5,31,330,7
"org.jfree.chart.plot.CombinedRangeCategoryPlot.setFixedDomainAxisSpaceForSubplots(AxisSpace)",1,2,13,51,2
"org.jfree.chart.plot.CombinedRangeCategoryPlot.setGap(double)",1,1,10,19,1
"org.jfree.chart.plot.CombinedRangeCategoryPlot.setOrientation(PlotOrientation)",1,2,14,59,2
"org.jfree.chart.plot.CombinedRangeCategoryPlot.setShadowGenerator(ShadowGenerator)",1,2,17,80,2
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest.chartChanged(ChartChangeEvent)",1,1,9,15,1
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest.createDataset1()",1,1,37,474,1
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest.createDataset2()",1,1,37,474,1
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest.createPlot()",1,1,29,206,1
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest.testCloning()",1,1,12,71,1
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest.testEquals()",1,1,9,22,1
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest.testNotification()",1,1,21,228,1
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest.testRemoveSubplot()",1,1,16,91,1
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.plot.CombinedRangeXYPlot.CombinedRangeXYPlot()",1,1,6,8,1
"org.jfree.chart.plot.CombinedRangeXYPlot.CombinedRangeXYPlot(ValueAxis)",1,1,12,30,1
"org.jfree.chart.plot.CombinedRangeXYPlot.add(XYPlot)",1,1,11,11,1
"org.jfree.chart.plot.CombinedRangeXYPlot.add(XYPlot,int)",2,1,27,183,2
"org.jfree.chart.plot.CombinedRangeXYPlot.calculateAxisSpace(Graphics2D,Rectangle2D)",1,11,76,"1,162",11
"org.jfree.chart.plot.CombinedRangeXYPlot.clone()",1,3,24,135,3
"org.jfree.chart.plot.CombinedRangeXYPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",1,5,51,499,6
"org.jfree.chart.plot.CombinedRangeXYPlot.equals(Object)",5,1,24,155,5
"org.jfree.chart.plot.CombinedRangeXYPlot.findSubplot(PlotRenderingInfo,Point2D)",1,2,19,95,2
"org.jfree.chart.plot.CombinedRangeXYPlot.getDataRange(ValueAxis)",1,3,25,94,3
"org.jfree.chart.plot.CombinedRangeXYPlot.getGap()",1,1,10,13,1
"org.jfree.chart.plot.CombinedRangeXYPlot.getLegendItems()",1,4,21,121,4
"org.jfree.chart.plot.CombinedRangeXYPlot.getPlotType()",1,1,9,11,1
"org.jfree.chart.plot.CombinedRangeXYPlot.getSubplots()",2,2,14,43,2
"org.jfree.chart.plot.CombinedRangeXYPlot.handleClick(int,int,PlotRenderingInfo)",1,3,18,149,3
"org.jfree.chart.plot.CombinedRangeXYPlot.isDomainPannable()",3,2,15,41,3
"org.jfree.chart.plot.CombinedRangeXYPlot.panDomainAxes(double,PlotRenderingInfo,Point2D)",4,3,31,216,6
"org.jfree.chart.plot.CombinedRangeXYPlot.plotChanged(PlotChangeEvent)",1,1,10,8,1
"org.jfree.chart.plot.CombinedRangeXYPlot.remove(XYPlot)",1,3,24,247,5
"org.jfree.chart.plot.CombinedRangeXYPlot.setDomainPannable(boolean)",1,2,12,28,2
"org.jfree.chart.plot.CombinedRangeXYPlot.setFixedDomainAxisSpaceForSubplots(AxisSpace)",1,2,13,51,2
"org.jfree.chart.plot.CombinedRangeXYPlot.setGap(double)",1,1,10,15,1
"org.jfree.chart.plot.CombinedRangeXYPlot.setOrientation(PlotOrientation)",1,2,14,59,2
"org.jfree.chart.plot.CombinedRangeXYPlot.setRenderer(XYItemRenderer)",1,2,20,59,2
"org.jfree.chart.plot.CombinedRangeXYPlot.setShadowGenerator(ShadowGenerator)",1,2,17,80,2
"org.jfree.chart.plot.CombinedRangeXYPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D)",1,1,12,24,1
"org.jfree.chart.plot.CombinedRangeXYPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D,boolean)",1,3,26,140,3
"org.jfree.chart.plot.CombinedRangeXYPlot.zoomDomainAxes(double,double,PlotRenderingInfo,Point2D)",1,3,27,138,3
"org.jfree.chart.plot.CombinedRangeXYPlotTest.chartChanged(ChartChangeEvent)",1,1,9,15,1
"org.jfree.chart.plot.CombinedRangeXYPlotTest.createDataset1()",1,1,43,763,1
"org.jfree.chart.plot.CombinedRangeXYPlotTest.createDataset2()",1,1,24,315,1
"org.jfree.chart.plot.CombinedRangeXYPlotTest.createPlot()",1,1,34,350,1
"org.jfree.chart.plot.CombinedRangeXYPlotTest.testCloning()",1,1,11,71,1
"org.jfree.chart.plot.CombinedRangeXYPlotTest.testEquals()",1,1,10,33,1
"org.jfree.chart.plot.CombinedRangeXYPlotTest.testNotification()",1,1,21,228,1
"org.jfree.chart.plot.CombinedRangeXYPlotTest.testRemoveSubplot()",1,1,15,83,1
"org.jfree.chart.plot.CombinedRangeXYPlotTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.plot.CompassPlot.CompassPlot()",1,1,6,8,1
"org.jfree.chart.plot.CompassPlot.CompassPlot(ValueDataset)",1,2,16,100,2
"org.jfree.chart.plot.CompassPlot.addDataset(ValueDataset)",1,1,10,11,1
"org.jfree.chart.plot.CompassPlot.addDataset(ValueDataset,MeterNeedle)",1,2,30,380,5
"org.jfree.chart.plot.CompassPlot.clone()",1,8,36,446,8
"org.jfree.chart.plot.CompassPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",1,10,121,"3,424",11
"org.jfree.chart.plot.CompassPlot.equals(Object)",13,1,50,518,13
"org.jfree.chart.plot.CompassPlot.getCompassFont(int)",1,1,15,70,2
"org.jfree.chart.plot.CompassPlot.getDatasets()",1,1,10,8,1
"org.jfree.chart.plot.CompassPlot.getDrawBorder()",1,1,10,13,1
"org.jfree.chart.plot.CompassPlot.getLabelFont()",1,1,11,8,1
"org.jfree.chart.plot.CompassPlot.getLabelType()",1,1,12,13,1
"org.jfree.chart.plot.CompassPlot.getLegendItems()",1,1,10,4,1
"org.jfree.chart.plot.CompassPlot.getPlotType()",1,1,9,11,1
"org.jfree.chart.plot.CompassPlot.getRevolutionDistance()",1,1,10,13,1
"org.jfree.chart.plot.CompassPlot.getRoseCenterPaint()",1,1,11,8,1
"org.jfree.chart.plot.CompassPlot.getRoseHighlightPaint()",1,1,11,8,1
"org.jfree.chart.plot.CompassPlot.getRosePaint()",1,1,10,8,1
"org.jfree.chart.plot.CompassPlot.readObject(ObjectInputStream)",1,1,15,56,1
"org.jfree.chart.plot.CompassPlot.setDrawBorder(boolean)",1,1,11,19,1
"org.jfree.chart.plot.CompassPlot.setLabelFont(Font)",1,1,14,26,1
"org.jfree.chart.plot.CompassPlot.setLabelType(int)",2,2,18,89,4
"org.jfree.chart.plot.CompassPlot.setRevolutionDistance(double)",1,1,13,31,2
"org.jfree.chart.plot.CompassPlot.setRoseCenterPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.CompassPlot.setRoseHighlightPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.CompassPlot.setRosePaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.CompassPlot.setSeriesNeedle(int)",1,1,10,20,1
"org.jfree.chart.plot.CompassPlot.setSeriesNeedle(int,MeterNeedle)",1,1,13,68,3
"org.jfree.chart.plot.CompassPlot.setSeriesNeedle(int,int)",2,2,62,491,12
"org.jfree.chart.plot.CompassPlot.setSeriesOutlinePaint(int,Paint)",1,2,13,72,3
"org.jfree.chart.plot.CompassPlot.setSeriesOutlineStroke(int,Stroke)",1,2,13,72,3
"org.jfree.chart.plot.CompassPlot.setSeriesPaint(int,Paint)",1,2,14,72,3
"org.jfree.chart.plot.CompassPlot.writeObject(ObjectOutputStream)",1,1,13,56,1
"org.jfree.chart.plot.CompassPlot.zoom(double)",1,1,9,4,1
"org.jfree.chart.plot.CompassPlotTest.testCloning()",1,1,11,81,1
"org.jfree.chart.plot.CompassPlotTest.testEquals()",1,1,45,637,1
"org.jfree.chart.plot.CompassPlotTest.testSerialization()",1,1,15,150,1
"org.jfree.chart.plot.Crosshair.Crosshair()",1,1,6,8,1
"org.jfree.chart.plot.Crosshair.Crosshair(double)",1,1,8,24,1
"org.jfree.chart.plot.Crosshair.Crosshair(double,Paint,Stroke)",1,1,27,341,1
"org.jfree.chart.plot.Crosshair.addPropertyChangeListener(PropertyChangeListener)",1,1,10,15,1
"org.jfree.chart.plot.Crosshair.clone()",1,1,13,11,1
"org.jfree.chart.plot.Crosshair.equals(Object)",18,1,65,810,18
"org.jfree.chart.plot.Crosshair.getLabelAnchor()",1,1,10,8,1
"org.jfree.chart.plot.Crosshair.getLabelBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.plot.Crosshair.getLabelFont()",1,1,10,8,1
"org.jfree.chart.plot.Crosshair.getLabelGenerator()",1,1,10,8,1
"org.jfree.chart.plot.Crosshair.getLabelOutlinePaint()",1,1,10,8,1
"org.jfree.chart.plot.Crosshair.getLabelOutlineStroke()",1,1,11,8,1
"org.jfree.chart.plot.Crosshair.getLabelPaint()",1,1,10,8,1
"org.jfree.chart.plot.Crosshair.getLabelXOffset()",1,1,10,13,1
"org.jfree.chart.plot.Crosshair.getLabelYOffset()",1,1,10,13,1
"org.jfree.chart.plot.Crosshair.getPaint()",1,1,10,8,1
"org.jfree.chart.plot.Crosshair.getStroke()",1,1,10,8,1
"org.jfree.chart.plot.Crosshair.getValue()",1,1,10,13,1
"org.jfree.chart.plot.Crosshair.hashCode()",1,1,25,385,1
"org.jfree.chart.plot.Crosshair.isLabelOutlineVisible()",1,1,11,13,1
"org.jfree.chart.plot.Crosshair.isLabelVisible()",1,1,11,13,1
"org.jfree.chart.plot.Crosshair.isVisible()",1,1,11,13,1
"org.jfree.chart.plot.Crosshair.readObject(ObjectInputStream)",1,1,19,132,1
"org.jfree.chart.plot.Crosshair.removePropertyChangeListener(PropertyChangeListener)",1,1,10,15,1
"org.jfree.chart.plot.Crosshair.setLabelAnchor(RectangleAnchor)",1,1,13,41,1
"org.jfree.chart.plot.Crosshair.setLabelBackgroundPaint(Paint)",1,1,13,41,1
"org.jfree.chart.plot.Crosshair.setLabelFont(Font)",1,1,14,55,1
"org.jfree.chart.plot.Crosshair.setLabelGenerator(CrosshairLabelGenerator)",1,1,14,55,1
"org.jfree.chart.plot.Crosshair.setLabelOutlinePaint(Paint)",1,1,14,55,1
"org.jfree.chart.plot.Crosshair.setLabelOutlineStroke(Stroke)",1,1,14,55,1
"org.jfree.chart.plot.Crosshair.setLabelOutlineVisible(boolean)",1,1,14,49,1
"org.jfree.chart.plot.Crosshair.setLabelPaint(Paint)",1,1,14,55,1
"org.jfree.chart.plot.Crosshair.setLabelVisible(boolean)",1,1,14,49,1
"org.jfree.chart.plot.Crosshair.setLabelXOffset(double)",1,1,13,46,1
"org.jfree.chart.plot.Crosshair.setLabelYOffset(double)",1,1,13,46,1
"org.jfree.chart.plot.Crosshair.setPaint(Paint)",1,1,13,41,1
"org.jfree.chart.plot.Crosshair.setStroke(Stroke)",1,1,13,41,1
"org.jfree.chart.plot.Crosshair.setValue(double)",1,1,13,55,1
"org.jfree.chart.plot.Crosshair.setVisible(boolean)",1,1,14,49,1
"org.jfree.chart.plot.Crosshair.writeObject(ObjectOutputStream)",1,1,16,110,1
"org.jfree.chart.plot.CrosshairState.CrosshairState()",1,1,7,8,1
"org.jfree.chart.plot.CrosshairState.CrosshairState(boolean)",1,1,13,11,1
"org.jfree.chart.plot.CrosshairState.getAnchor()",1,1,12,8,1
"org.jfree.chart.plot.CrosshairState.getAnchorX()",1,1,10,11,1
"org.jfree.chart.plot.CrosshairState.getAnchorY()",1,1,10,11,1
"org.jfree.chart.plot.CrosshairState.getCrosshairDistance()",1,1,12,13,1
"org.jfree.chart.plot.CrosshairState.getCrosshairX()",1,1,10,13,1
"org.jfree.chart.plot.CrosshairState.getCrosshairY()",1,1,11,13,1
"org.jfree.chart.plot.CrosshairState.getDatasetIndex()",1,1,14,13,1
"org.jfree.chart.plot.CrosshairState.setAnchor(Point2D)",1,1,16,11,1
"org.jfree.chart.plot.CrosshairState.setAnchorX(double)",1,1,12,15,1
"org.jfree.chart.plot.CrosshairState.setAnchorY(double)",1,1,12,15,1
"org.jfree.chart.plot.CrosshairState.setCrosshairDistance(double)",1,1,13,15,1
"org.jfree.chart.plot.CrosshairState.setCrosshairX(double)",1,1,14,33,1
"org.jfree.chart.plot.CrosshairState.setCrosshairY(double)",1,1,13,33,1
"org.jfree.chart.plot.CrosshairState.setDatasetIndex(int)",1,1,12,15,1
"org.jfree.chart.plot.CrosshairState.updateCrosshairPoint(double,double,int,double,double,PlotOrientation)",1,3,38,460,5
"org.jfree.chart.plot.CrosshairState.updateCrosshairX(double,double,int)",2,1,21,140,3
"org.jfree.chart.plot.CrosshairState.updateCrosshairY(double,double,int)",2,1,24,140,3
"org.jfree.chart.plot.CrosshairTest.testCloning()",1,1,12,127,1
"org.jfree.chart.plot.CrosshairTest.testEquals()",1,1,72,"1,315",1
"org.jfree.chart.plot.CrosshairTest.testHashCode()",1,1,10,53,1
"org.jfree.chart.plot.CrosshairTest.testPublicCloneable()",1,1,8,19,1
"org.jfree.chart.plot.CrosshairTest.testSerialization()",1,1,10,68,1
"org.jfree.chart.plot.DefaultDrawingSupplier.DefaultDrawingSupplier()",1,1,11,28,1
"org.jfree.chart.plot.DefaultDrawingSupplier.DefaultDrawingSupplier(Paint[],Paint[],Paint[],Stroke[],Stroke[],Shape[])",1,1,23,72,1
"org.jfree.chart.plot.DefaultDrawingSupplier.DefaultDrawingSupplier(Paint[],Paint[],Stroke[],Stroke[],Shape[])",1,1,21,72,1
"org.jfree.chart.plot.DefaultDrawingSupplier.clone()",1,1,13,15,1
"org.jfree.chart.plot.DefaultDrawingSupplier.createStandardSeriesShapes()",1,1,44,819,1
"org.jfree.chart.plot.DefaultDrawingSupplier.equalShapes(Shape[],Shape[])",6,2,25,193,6
"org.jfree.chart.plot.DefaultDrawingSupplier.equals(Object)",13,1,50,523,13
"org.jfree.chart.plot.DefaultDrawingSupplier.getNextFillPaint()",1,1,14,44,1
"org.jfree.chart.plot.DefaultDrawingSupplier.getNextOutlinePaint()",1,1,12,44,1
"org.jfree.chart.plot.DefaultDrawingSupplier.getNextOutlineStroke()",1,1,12,44,1
"org.jfree.chart.plot.DefaultDrawingSupplier.getNextPaint()",1,1,12,44,1
"org.jfree.chart.plot.DefaultDrawingSupplier.getNextShape()",1,1,12,44,1
"org.jfree.chart.plot.DefaultDrawingSupplier.getNextStroke()",1,1,12,44,1
"org.jfree.chart.plot.DefaultDrawingSupplier.intArray(double,double,double)",1,1,13,47,1
"org.jfree.chart.plot.DefaultDrawingSupplier.intArray(double,double,double,double)",1,1,14,59,1
"org.jfree.chart.plot.DefaultDrawingSupplier.readObject(ObjectInputStream)",1,6,37,499,6
"org.jfree.chart.plot.DefaultDrawingSupplier.writeObject(ObjectOutputStream)",1,6,35,520,6
"org.jfree.chart.plot.DefaultDrawingSupplierTest.testCloning()",1,1,11,71,1
"org.jfree.chart.plot.DefaultDrawingSupplierTest.testEquals()",1,1,98,"1,650",1
"org.jfree.chart.plot.DefaultDrawingSupplierTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.plot.FastScatterPlot.FastScatterPlot()",1,1,7,22,1
"org.jfree.chart.plot.FastScatterPlot.FastScatterPlot(float[][],ValueAxis,ValueAxis)",1,1,31,317,1
"org.jfree.chart.plot.FastScatterPlot.calculateXDataRange(float[][])",1,1,27,212,6
"org.jfree.chart.plot.FastScatterPlot.calculateYDataRange(float[][])",1,1,27,215,6
"org.jfree.chart.plot.FastScatterPlot.clone()",1,4,26,224,4
"org.jfree.chart.plot.FastScatterPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",1,3,49,556,3
"org.jfree.chart.plot.FastScatterPlot.drawDomainGridlines(Graphics2D,Rectangle2D,List)",2,2,28,248,3
"org.jfree.chart.plot.FastScatterPlot.drawRangeGridlines(Graphics2D,Rectangle2D,List)",2,2,28,248,3
"org.jfree.chart.plot.FastScatterPlot.equals(Object)",16,1,64,695,16
"org.jfree.chart.plot.FastScatterPlot.getData()",1,1,10,13,1
"org.jfree.chart.plot.FastScatterPlot.getDataRange(ValueAxis)",1,1,20,77,3
"org.jfree.chart.plot.FastScatterPlot.getDomainAxis()",1,1,10,8,1
"org.jfree.chart.plot.FastScatterPlot.getDomainGridlinePaint()",1,1,11,8,1
"org.jfree.chart.plot.FastScatterPlot.getDomainGridlineStroke()",1,1,11,8,1
"org.jfree.chart.plot.FastScatterPlot.getOrientation()",1,1,9,4,1
"org.jfree.chart.plot.FastScatterPlot.getPaint()",1,1,11,8,1
"org.jfree.chart.plot.FastScatterPlot.getPlotType()",1,1,9,11,1
"org.jfree.chart.plot.FastScatterPlot.getRangeAxis()",1,1,10,8,1
"org.jfree.chart.plot.FastScatterPlot.getRangeGridlinePaint()",1,1,11,8,1
"org.jfree.chart.plot.FastScatterPlot.getRangeGridlineStroke()",1,1,11,8,1
"org.jfree.chart.plot.FastScatterPlot.isDomainGridlinesVisible()",1,1,12,13,1
"org.jfree.chart.plot.FastScatterPlot.isDomainPannable()",1,1,12,11,1
"org.jfree.chart.plot.FastScatterPlot.isDomainZoomable()",1,1,9,8,1
"org.jfree.chart.plot.FastScatterPlot.isRangeGridlinesVisible()",1,1,11,13,1
"org.jfree.chart.plot.FastScatterPlot.isRangePannable()",1,1,12,11,1
"org.jfree.chart.plot.FastScatterPlot.isRangeZoomable()",1,1,9,8,1
"org.jfree.chart.plot.FastScatterPlot.panDomainAxes(double,PlotRenderingInfo,Point2D)",2,2,23,187,4
"org.jfree.chart.plot.FastScatterPlot.panRangeAxes(double,PlotRenderingInfo,Point2D)",2,2,23,187,4
"org.jfree.chart.plot.FastScatterPlot.readObject(ObjectInputStream)",1,3,23,182,3
"org.jfree.chart.plot.FastScatterPlot.render(Graphics2D,Rectangle2D,PlotRenderingInfo,CrosshairState)",1,3,40,264,3
"org.jfree.chart.plot.FastScatterPlot.setData(float[][])",1,1,12,19,1
"org.jfree.chart.plot.FastScatterPlot.setDomainAxis(ValueAxis)",1,1,15,26,1
"org.jfree.chart.plot.FastScatterPlot.setDomainGridlinePaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.FastScatterPlot.setDomainGridlineStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.plot.FastScatterPlot.setDomainGridlinesVisible(boolean)",1,2,15,38,2
"org.jfree.chart.plot.FastScatterPlot.setDomainPannable(boolean)",1,1,11,15,1
"org.jfree.chart.plot.FastScatterPlot.setPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.FastScatterPlot.setRangeAxis(ValueAxis)",1,1,15,26,1
"org.jfree.chart.plot.FastScatterPlot.setRangeGridlinePaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.FastScatterPlot.setRangeGridlineStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.plot.FastScatterPlot.setRangeGridlinesVisible(boolean)",1,2,15,38,2
"org.jfree.chart.plot.FastScatterPlot.setRangePannable(boolean)",1,1,11,15,1
"org.jfree.chart.plot.FastScatterPlot.writeObject(ObjectOutputStream)",1,1,15,92,1
"org.jfree.chart.plot.FastScatterPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D)",1,1,12,19,1
"org.jfree.chart.plot.FastScatterPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D,boolean)",1,2,27,125,2
"org.jfree.chart.plot.FastScatterPlot.zoomDomainAxes(double,double,PlotRenderingInfo,Point2D)",1,1,15,26,1
"org.jfree.chart.plot.FastScatterPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D)",1,1,12,19,1
"org.jfree.chart.plot.FastScatterPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D,boolean)",1,2,27,125,2
"org.jfree.chart.plot.FastScatterPlot.zoomRangeAxes(double,double,PlotRenderingInfo,Point2D)",1,1,15,26,1
"org.jfree.chart.plot.FastScatterPlotTest.createData()",1,2,14,159,2
"org.jfree.chart.plot.FastScatterPlotTest.testCloning()",1,1,11,71,1
"org.jfree.chart.plot.FastScatterPlotTest.testDrawWithNullInfo()",1,2,20,99,2
"org.jfree.chart.plot.FastScatterPlotTest.testEquals()",1,1,54,873,1
"org.jfree.chart.plot.FastScatterPlotTest.testEquals2()",1,1,36,509,1
"org.jfree.chart.plot.FastScatterPlotTest.testSerialization()",1,1,12,64,1
"org.jfree.chart.plot.IntervalMarker.IntervalMarker(double,double)",1,1,10,46,1
"org.jfree.chart.plot.IntervalMarker.IntervalMarker(double,double,Paint)",1,1,13,44,1
"org.jfree.chart.plot.IntervalMarker.IntervalMarker(double,double,Paint,Stroke,Paint,Stroke,float)",1,1,21,93,1
"org.jfree.chart.plot.IntervalMarker.clone()",1,1,12,11,1
"org.jfree.chart.plot.IntervalMarker.equals(Object)",7,1,31,218,7
"org.jfree.chart.plot.IntervalMarker.getEndValue()",1,1,8,11,1
"org.jfree.chart.plot.IntervalMarker.getGradientPaintTransformer()",1,1,8,8,1
"org.jfree.chart.plot.IntervalMarker.getStartValue()",1,1,8,11,1
"org.jfree.chart.plot.IntervalMarker.setEndValue(double)",1,1,12,26,1
"org.jfree.chart.plot.IntervalMarker.setGradientPaintTransformer(GradientPaintTransformer)",1,1,11,22,1
"org.jfree.chart.plot.IntervalMarker.setStartValue(double)",1,1,12,26,1
"org.jfree.chart.plot.IntervalMarkerTest.markerChanged(MarkerChangeEvent)",1,1,9,11,1
"org.jfree.chart.plot.IntervalMarkerTest.testCloning()",1,1,11,83,1
"org.jfree.chart.plot.IntervalMarkerTest.testEquals()",1,1,24,250,1
"org.jfree.chart.plot.IntervalMarkerTest.testGetSetEndValue()",1,1,13,118,1
"org.jfree.chart.plot.IntervalMarkerTest.testGetSetStartValue()",1,1,13,118,1
"org.jfree.chart.plot.IntervalMarkerTest.testSerialization()",1,1,9,31,1
"org.jfree.chart.plot.Marker.Marker()",1,1,6,8,1
"org.jfree.chart.plot.Marker.Marker(Paint)",1,1,9,30,1
"org.jfree.chart.plot.Marker.Marker(Paint,Stroke,Paint,Stroke,float)",2,1,36,372,3
"org.jfree.chart.plot.Marker.addChangeListener(MarkerChangeListener)",1,1,12,19,1
"org.jfree.chart.plot.Marker.clone()",1,1,11,11,1
"org.jfree.chart.plot.Marker.equals(Object)",16,1,57,710,16
"org.jfree.chart.plot.Marker.getAlpha()",1,1,10,13,1
"org.jfree.chart.plot.Marker.getLabel()",1,1,10,8,1
"org.jfree.chart.plot.Marker.getLabelAnchor()",1,1,11,8,1
"org.jfree.chart.plot.Marker.getLabelBackgroundColor()",1,1,11,8,1
"org.jfree.chart.plot.Marker.getLabelFont()",1,1,10,8,1
"org.jfree.chart.plot.Marker.getLabelOffset()",1,1,10,8,1
"org.jfree.chart.plot.Marker.getLabelOffsetType()",1,1,10,8,1
"org.jfree.chart.plot.Marker.getLabelPaint()",1,1,10,8,1
"org.jfree.chart.plot.Marker.getLabelTextAnchor()",1,1,10,8,1
"org.jfree.chart.plot.Marker.getListeners(Class)",1,1,12,15,1
"org.jfree.chart.plot.Marker.getOutlinePaint()",1,1,10,8,1
"org.jfree.chart.plot.Marker.getOutlineStroke()",1,1,10,8,1
"org.jfree.chart.plot.Marker.getPaint()",1,1,10,8,1
"org.jfree.chart.plot.Marker.getStroke()",1,1,10,8,1
"org.jfree.chart.plot.Marker.notifyListeners(MarkerChangeEvent)",1,3,15,118,3
"org.jfree.chart.plot.Marker.readObject(ObjectInputStream)",1,1,18,109,1
"org.jfree.chart.plot.Marker.removeChangeListener(MarkerChangeListener)",1,1,12,19,1
"org.jfree.chart.plot.Marker.setAlpha(float)",2,1,22,80,3
"org.jfree.chart.plot.Marker.setLabel(String)",1,1,12,22,1
"org.jfree.chart.plot.Marker.setLabelAnchor(RectangleAnchor)",1,1,14,34,1
"org.jfree.chart.plot.Marker.setLabelBackgroundColor(Color)",1,1,11,22,1
"org.jfree.chart.plot.Marker.setLabelFont(Font)",1,1,13,34,1
"org.jfree.chart.plot.Marker.setLabelOffset(RectangleInsets)",1,1,13,34,1
"org.jfree.chart.plot.Marker.setLabelOffsetType(LengthAdjustmentType)",1,1,13,34,1
"org.jfree.chart.plot.Marker.setLabelPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.Marker.setLabelTextAnchor(TextAnchor)",1,1,13,34,1
"org.jfree.chart.plot.Marker.setOutlinePaint(Paint)",1,1,12,22,1
"org.jfree.chart.plot.Marker.setOutlineStroke(Stroke)",1,1,12,22,1
"org.jfree.chart.plot.Marker.setPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.Marker.setStroke(Stroke)",1,1,13,34,1
"org.jfree.chart.plot.Marker.writeObject(ObjectOutputStream)",1,1,15,92,1
"org.jfree.chart.plot.MarkerTest.markerChanged(MarkerChangeEvent)",1,1,9,11,1
"org.jfree.chart.plot.MarkerTest.testGetSetAlpha()",1,1,15,114,1
"org.jfree.chart.plot.MarkerTest.testGetSetLabel()",1,1,18,125,1
"org.jfree.chart.plot.MarkerTest.testGetSetLabelAnchor()",1,2,23,153,2
"org.jfree.chart.plot.MarkerTest.testGetSetLabelFont()",1,2,23,201,2
"org.jfree.chart.plot.MarkerTest.testGetSetLabelOffset()",1,2,23,212,2
"org.jfree.chart.plot.MarkerTest.testGetSetLabelOffsetType()",1,2,24,153,2
"org.jfree.chart.plot.MarkerTest.testGetSetLabelPaint()",1,2,23,153,2
"org.jfree.chart.plot.MarkerTest.testGetSetLabelTextAnchor()",1,2,24,153,2
"org.jfree.chart.plot.MarkerTest.testGetSetOutlinePaint()",1,1,18,128,1
"org.jfree.chart.plot.MarkerTest.testGetSetOutlineStroke()",1,1,18,140,1
"org.jfree.chart.plot.MarkerTest.testGetSetPaint()",1,2,23,153,2
"org.jfree.chart.plot.MarkerTest.testGetSetStroke()",1,2,23,166,2
"org.jfree.chart.plot.MarkerTest.testListenersWithCategoryPlot()",1,1,23,220,1
"org.jfree.chart.plot.MarkerTest.testListenersWithXYPlot()",1,1,23,220,1
"org.jfree.chart.plot.MeterInterval.MeterInterval(String,Range)",1,1,9,28,1
"org.jfree.chart.plot.MeterInterval.MeterInterval(String,Range,Paint,Stroke,Paint)",1,1,20,85,1
"org.jfree.chart.plot.MeterInterval.equals(Object)",8,1,33,291,8
"org.jfree.chart.plot.MeterInterval.getBackgroundPaint()",1,1,9,8,1
"org.jfree.chart.plot.MeterInterval.getLabel()",1,1,8,8,1
"org.jfree.chart.plot.MeterInterval.getOutlinePaint()",1,1,8,8,1
"org.jfree.chart.plot.MeterInterval.getOutlineStroke()",1,1,8,8,1
"org.jfree.chart.plot.MeterInterval.getRange()",1,1,8,8,1
"org.jfree.chart.plot.MeterInterval.readObject(ObjectInputStream)",1,1,15,58,1
"org.jfree.chart.plot.MeterInterval.writeObject(ObjectOutputStream)",1,1,13,58,1
"org.jfree.chart.plot.MeterIntervalTest.testCloning()",1,1,8,31,1
"org.jfree.chart.plot.MeterIntervalTest.testEquals()",1,1,26,218,1
"org.jfree.chart.plot.MeterIntervalTest.testSerialization()",1,1,9,39,1
"org.jfree.chart.plot.MeterPlot.MeterPlot()",1,1,7,8,1
"org.jfree.chart.plot.MeterPlot.MeterPlot(ValueDataset)",1,1,24,270,1
"org.jfree.chart.plot.MeterPlot.addInterval(MeterInterval)",1,1,14,31,1
"org.jfree.chart.plot.MeterPlot.clearIntervals()",1,1,10,15,1
"org.jfree.chart.plot.MeterPlot.clone()",1,2,21,104,2
"org.jfree.chart.plot.MeterPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",1,11,114,"2,540",15
"org.jfree.chart.plot.MeterPlot.drawArc(Graphics2D,Rectangle2D,double,double,Paint,Stroke)",1,2,29,285,3
"org.jfree.chart.plot.MeterPlot.drawArcForInterval(Graphics2D,Rectangle2D,MeterInterval)",1,4,26,241,4
"org.jfree.chart.plot.MeterPlot.drawTick(Graphics2D,Rectangle2D,double)",1,1,11,24,1
"org.jfree.chart.plot.MeterPlot.drawTick(Graphics2D,Rectangle2D,double,boolean)",1,5,55,"1,087",11
"org.jfree.chart.plot.MeterPlot.drawTicks(Graphics2D,Rectangle2D,double,double)",1,2,14,62,2
"org.jfree.chart.plot.MeterPlot.drawValueLabel(Graphics2D,Rectangle2D)",1,3,22,237,3
"org.jfree.chart.plot.MeterPlot.equals(Object)",21,1,76,975,21
"org.jfree.chart.plot.MeterPlot.fillArc(Graphics2D,Rectangle2D,double,double,Paint,boolean)",4,1,47,488,7
"org.jfree.chart.plot.MeterPlot.getDataset()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.getDialBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.getDialOutlinePaint()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.getDialShape()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.getDrawBorder()",1,1,11,13,1
"org.jfree.chart.plot.MeterPlot.getIntervals()",1,1,10,11,1
"org.jfree.chart.plot.MeterPlot.getLegendItems()",1,3,23,197,3
"org.jfree.chart.plot.MeterPlot.getMeterAngle()",1,1,11,13,1
"org.jfree.chart.plot.MeterPlot.getNeedlePaint()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.getPlotType()",1,1,9,11,1
"org.jfree.chart.plot.MeterPlot.getRange()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.getTickLabelFont()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.getTickLabelFormat()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.getTickLabelPaint()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.getTickLabelsVisible()",1,1,10,13,1
"org.jfree.chart.plot.MeterPlot.getTickPaint()",1,1,11,8,1
"org.jfree.chart.plot.MeterPlot.getTickSize()",1,1,10,13,1
"org.jfree.chart.plot.MeterPlot.getUnits()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.getValueFont()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.getValuePaint()",1,1,10,8,1
"org.jfree.chart.plot.MeterPlot.readObject(ObjectInputStream)",1,2,21,158,2
"org.jfree.chart.plot.MeterPlot.setDataset(ValueDataset)",1,3,25,116,3
"org.jfree.chart.plot.MeterPlot.setDialBackgroundPaint(Paint)",1,1,12,15,1
"org.jfree.chart.plot.MeterPlot.setDialOutlinePaint(Paint)",1,1,12,15,1
"org.jfree.chart.plot.MeterPlot.setDialShape(DialShape)",1,1,13,26,1
"org.jfree.chart.plot.MeterPlot.setDrawBorder(boolean)",1,1,14,19,1
"org.jfree.chart.plot.MeterPlot.setMeterAngle(int)",2,1,16,81,3
"org.jfree.chart.plot.MeterPlot.setNeedlePaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.MeterPlot.setRange(Range)",2,1,18,72,2
"org.jfree.chart.plot.MeterPlot.setTickLabelFont(Font)",1,2,15,51,2
"org.jfree.chart.plot.MeterPlot.setTickLabelFormat(NumberFormat)",1,1,13,26,1
"org.jfree.chart.plot.MeterPlot.setTickLabelPaint(Paint)",1,2,15,51,2
"org.jfree.chart.plot.MeterPlot.setTickLabelsVisible(boolean)",1,2,14,38,2
"org.jfree.chart.plot.MeterPlot.setTickPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.MeterPlot.setTickSize(double)",2,1,15,51,2
"org.jfree.chart.plot.MeterPlot.setUnits(String)",1,1,12,15,1
"org.jfree.chart.plot.MeterPlot.setValueFont(Font)",1,1,13,26,1
"org.jfree.chart.plot.MeterPlot.setValuePaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.MeterPlot.valueToAngle(double)",1,1,12,116,1
"org.jfree.chart.plot.MeterPlot.writeObject(ObjectOutputStream)",1,1,16,107,1
"org.jfree.chart.plot.MeterPlot.zoom(double)",1,1,11,4,1
"org.jfree.chart.plot.MeterPlotTest.testCloning()",1,1,23,281,1
"org.jfree.chart.plot.MeterPlotTest.testEquals()",1,1,110,"2,008",1
"org.jfree.chart.plot.MeterPlotTest.testSerialization1()",1,1,19,229,1
"org.jfree.chart.plot.MeterPlotTest.testSerialization2()",1,1,9,30,1
"org.jfree.chart.plot.MultiplePiePlot.MultiplePiePlot()",1,1,6,8,1
"org.jfree.chart.plot.MultiplePiePlot.MultiplePiePlot(CategoryDataset)",1,1,23,277,1
"org.jfree.chart.plot.MultiplePiePlot.clone()",1,1,16,84,1
"org.jfree.chart.plot.MultiplePiePlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",2,10,107,"1,701",15
"org.jfree.chart.plot.MultiplePiePlot.equals(Object)",10,1,42,376,10
"org.jfree.chart.plot.MultiplePiePlot.getAggregatedItemsKey()",1,1,11,8,1
"org.jfree.chart.plot.MultiplePiePlot.getAggregatedItemsPaint()",1,1,11,8,1
"org.jfree.chart.plot.MultiplePiePlot.getDataExtractOrder()",1,1,8,8,1
"org.jfree.chart.plot.MultiplePiePlot.getDataset()",1,1,8,8,1
"org.jfree.chart.plot.MultiplePiePlot.getLegendItemShape()",1,1,12,8,1
"org.jfree.chart.plot.MultiplePiePlot.getLegendItems()",3,5,47,555,7
"org.jfree.chart.plot.MultiplePiePlot.getLimit()",1,1,9,11,1
"org.jfree.chart.plot.MultiplePiePlot.getPieChart()",1,1,12,8,1
"org.jfree.chart.plot.MultiplePiePlot.getPlotType()",1,1,10,4,1
"org.jfree.chart.plot.MultiplePiePlot.prefetchSectionPaints()",1,8,40,430,8
"org.jfree.chart.plot.MultiplePiePlot.readObject(ObjectInputStream)",1,1,15,57,1
"org.jfree.chart.plot.MultiplePiePlot.setAggregatedItemsKey(Comparable)",1,1,13,26,1
"org.jfree.chart.plot.MultiplePiePlot.setAggregatedItemsPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.MultiplePiePlot.setDataExtractOrder(TableOrder)",1,1,11,26,1
"org.jfree.chart.plot.MultiplePiePlot.setDataset(CategoryDataset)",1,3,21,106,3
"org.jfree.chart.plot.MultiplePiePlot.setLegendItemShape(Shape)",1,1,15,26,1
"org.jfree.chart.plot.MultiplePiePlot.setLimit(double)",1,1,10,19,1
"org.jfree.chart.plot.MultiplePiePlot.setPieChart(JFreeChart)",2,1,17,72,2
"org.jfree.chart.plot.MultiplePiePlot.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.plot.MultiplePiePlotTest.plotChanged(PlotChangeEvent)",1,1,10,11,1
"org.jfree.chart.plot.MultiplePiePlotTest.testCloning()",1,1,16,166,1
"org.jfree.chart.plot.MultiplePiePlotTest.testConstructor()",1,1,13,44,1
"org.jfree.chart.plot.MultiplePiePlotTest.testEquals()",1,1,38,624,1
"org.jfree.chart.plot.MultiplePiePlotTest.testGetLegendItems()",1,1,27,387,1
"org.jfree.chart.plot.MultiplePiePlotTest.testSerialization()",1,1,11,70,1
"org.jfree.chart.plot.MyPlotChangeListener.MyPlotChangeListener()",1,1,6,8,1
"org.jfree.chart.plot.MyPlotChangeListener.getEvent()",1,1,8,8,1
"org.jfree.chart.plot.MyPlotChangeListener.plotChanged(PlotChangeEvent)",1,1,9,11,1
"org.jfree.chart.plot.MyPlotChangeListener.setEvent(PlotChangeEvent)",1,1,8,11,1
"org.jfree.chart.plot.PieLabelDistributor.PieLabelDistributor(int)",1,1,8,8,1
"org.jfree.chart.plot.PieLabelDistributor.adjustDownwards(double,double)",1,3,19,228,3
"org.jfree.chart.plot.PieLabelDistributor.adjustInwards()",1,5,27,382,5
"org.jfree.chart.plot.PieLabelDistributor.adjustUpwards(double,double)",1,3,18,216,3
"org.jfree.chart.plot.PieLabelDistributor.distributeLabels(double,double)",1,4,23,69,4
"org.jfree.chart.plot.PieLabelDistributor.isOverlap()",3,2,17,126,3
"org.jfree.chart.plot.PieLabelDistributor.sort()",1,1,6,11,1
"org.jfree.chart.plot.PieLabelDistributor.spreadEvenly(double,double)",1,4,24,335,4
"org.jfree.chart.plot.PieLabelDistributor.toString()",1,2,14,91,2
"org.jfree.chart.plot.PieLabelRecord.PieLabelRecord(Comparable,double,double,TextBox,double,double,double)",1,1,23,125,1
"org.jfree.chart.plot.PieLabelRecord.compareTo(Object)",1,1,21,116,4
"org.jfree.chart.plot.PieLabelRecord.equals(Object)",11,1,42,411,11
"org.jfree.chart.plot.PieLabelRecord.getAllocatedY()",1,1,8,11,1
"org.jfree.chart.plot.PieLabelRecord.getAngle()",1,1,8,11,1
"org.jfree.chart.plot.PieLabelRecord.getBaseY()",1,1,9,11,1
"org.jfree.chart.plot.PieLabelRecord.getGap()",1,1,8,11,1
"org.jfree.chart.plot.PieLabelRecord.getKey()",1,1,8,8,1
"org.jfree.chart.plot.PieLabelRecord.getLabel()",1,1,8,8,1
"org.jfree.chart.plot.PieLabelRecord.getLabelHeight()",1,1,9,11,1
"org.jfree.chart.plot.PieLabelRecord.getLinkPercent()",1,1,8,11,1
"org.jfree.chart.plot.PieLabelRecord.getLowerY()",1,1,8,31,1
"org.jfree.chart.plot.PieLabelRecord.getUpperY()",1,1,8,31,1
"org.jfree.chart.plot.PieLabelRecord.setAllocatedY(double)",1,1,8,15,1
"org.jfree.chart.plot.PieLabelRecord.setBaseY(double)",1,1,8,15,1
"org.jfree.chart.plot.PieLabelRecord.toString()",1,1,9,22,1
"org.jfree.chart.plot.PieLabelRecordTest.testCloning()",1,1,9,51,1
"org.jfree.chart.plot.PieLabelRecordTest.testEquals()",1,1,40,983,1
"org.jfree.chart.plot.PieLabelRecordTest.testSerialization()",1,1,11,77,1
"org.jfree.chart.plot.PiePlot.PiePlot()",1,1,6,8,1
"org.jfree.chart.plot.PiePlot.PiePlot(PieDataset)",1,2,51,836,2
"org.jfree.chart.plot.PiePlot.clearSectionOutlinePaints(boolean)",1,2,18,28,2
"org.jfree.chart.plot.PiePlot.clearSectionOutlineStrokes(boolean)",1,2,18,28,2
"org.jfree.chart.plot.PiePlot.clearSectionPaints(boolean)",1,2,18,28,2
"org.jfree.chart.plot.PiePlot.clone()",1,7,44,461,7
"org.jfree.chart.plot.PiePlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",1,5,60,815,7
"org.jfree.chart.plot.PiePlot.drawItem(Graphics2D,int,Rectangle2D,PiePlotState,int)",4,13,86,"1,369",15
"org.jfree.chart.plot.PiePlot.drawLabels(Graphics2D,List,double,Rectangle2D,Rectangle2D,PiePlotState)",1,6,63,829,7
"org.jfree.chart.plot.PiePlot.drawLeftLabel(Graphics2D,PiePlotState,PieLabelRecord)",1,5,47,900,5
"org.jfree.chart.plot.PiePlot.drawLeftLabels(KeyedValues,Graphics2D,Rectangle2D,Rectangle2D,float,PiePlotState)",1,5,57,"1,027",5
"org.jfree.chart.plot.PiePlot.drawPie(Graphics2D,Rectangle2D,PlotRenderingInfo)",1,12,114,"2,462",15
"org.jfree.chart.plot.PiePlot.drawRightLabel(Graphics2D,PiePlotState,PieLabelRecord)",1,5,47,900,5
"org.jfree.chart.plot.PiePlot.drawRightLabels(KeyedValues,Graphics2D,Rectangle2D,Rectangle2D,float,PiePlotState)",1,5,55,"1,008",5
"org.jfree.chart.plot.PiePlot.drawSimpleLabels(Graphics2D,List,double,Rectangle2D,Rectangle2D,PiePlotState)",5,7,85,"1,310",12
"org.jfree.chart.plot.PiePlot.equals(Object)",50,1,181,"2,893",50
"org.jfree.chart.plot.PiePlot.getArcBounds(Rectangle2D,Rectangle2D,double,double,double)",2,1,33,284,2
"org.jfree.chart.plot.PiePlot.getArcCenter(PiePlotState,Comparable)",4,4,49,720,5
"org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlinePaint()",1,1,12,11,1
"org.jfree.chart.plot.PiePlot.getAutoPopulateSectionOutlineStroke()",1,1,12,11,1
"org.jfree.chart.plot.PiePlot.getAutoPopulateSectionPaint()",1,1,11,11,1
"org.jfree.chart.plot.PiePlot.getDataset()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getDefaultSectionOutlinePaint()",1,1,11,8,1
"org.jfree.chart.plot.PiePlot.getDefaultSectionOutlineStroke()",1,1,11,8,1
"org.jfree.chart.plot.PiePlot.getDefaultSectionPaint()",1,1,11,8,1
"org.jfree.chart.plot.PiePlot.getDirection()",1,1,11,8,1
"org.jfree.chart.plot.PiePlot.getExplodePercent(Comparable)",1,3,26,87,3
"org.jfree.chart.plot.PiePlot.getIgnoreNullValues()",1,1,11,13,1
"org.jfree.chart.plot.PiePlot.getIgnoreZeroValues()",1,1,11,13,1
"org.jfree.chart.plot.PiePlot.getInteriorGap()",1,1,11,13,1
"org.jfree.chart.plot.PiePlot.getLabelBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getLabelDistributor()",1,1,11,8,1
"org.jfree.chart.plot.PiePlot.getLabelFont()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getLabelGap()",1,1,11,13,1
"org.jfree.chart.plot.PiePlot.getLabelGenerator()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getLabelLinkDepth()",1,1,14,8,1
"org.jfree.chart.plot.PiePlot.getLabelLinkMargin()",1,1,11,13,1
"org.jfree.chart.plot.PiePlot.getLabelLinkPaint()",1,1,11,8,1
"org.jfree.chart.plot.PiePlot.getLabelLinkStroke()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getLabelLinkStyle()",1,1,12,8,1
"org.jfree.chart.plot.PiePlot.getLabelLinksVisible()",1,1,11,13,1
"org.jfree.chart.plot.PiePlot.getLabelOutlinePaint()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getLabelOutlineStroke()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getLabelPadding()",1,1,12,8,1
"org.jfree.chart.plot.PiePlot.getLabelPaint()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getLabelShadowPaint()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getLegendItemShape()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getLegendItems()",2,7,67,818,9
"org.jfree.chart.plot.PiePlot.getLegendLabelGenerator()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getLegendLabelToolTipGenerator()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getLegendLabelURLGenerator()",1,1,12,8,1
"org.jfree.chart.plot.PiePlot.getMaximumExplodePercent()",2,3,20,158,4
"org.jfree.chart.plot.PiePlot.getMaximumLabelWidth()",1,1,10,13,1
"org.jfree.chart.plot.PiePlot.getMinimumArcAngleToDraw()",1,1,11,13,1
"org.jfree.chart.plot.PiePlot.getPieIndex()",1,1,11,13,1
"org.jfree.chart.plot.PiePlot.getPlotType()",1,1,9,11,1
"org.jfree.chart.plot.PiePlot.getSectionKey(int)",1,4,26,133,5
"org.jfree.chart.plot.PiePlot.getSectionOutlinePaint(Comparable)",1,1,20,15,1
"org.jfree.chart.plot.PiePlot.getSectionOutlineStroke(Comparable)",1,1,20,15,1
"org.jfree.chart.plot.PiePlot.getSectionOutlinesVisible()",1,1,12,13,1
"org.jfree.chart.plot.PiePlot.getSectionPaint(Comparable)",1,1,20,15,1
"org.jfree.chart.plot.PiePlot.getShadowGenerator()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getShadowPaint()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.getShadowXOffset()",1,1,10,13,1
"org.jfree.chart.plot.PiePlot.getShadowYOffset()",1,1,10,13,1
"org.jfree.chart.plot.PiePlot.getSimpleLabelOffset()",1,1,12,8,1
"org.jfree.chart.plot.PiePlot.getSimpleLabels()",1,1,11,11,1
"org.jfree.chart.plot.PiePlot.getStartAngle()",1,1,11,13,1
"org.jfree.chart.plot.PiePlot.getToolTipGenerator()",1,1,12,8,1
"org.jfree.chart.plot.PiePlot.getURLGenerator()",1,1,10,8,1
"org.jfree.chart.plot.PiePlot.handleMouseWheelRotation(int)",1,1,11,33,1
"org.jfree.chart.plot.PiePlot.initialise(Graphics2D,Rectangle2D,PiePlot,Integer,PlotRenderingInfo)",1,2,26,91,2
"org.jfree.chart.plot.PiePlot.isCircular()",1,1,11,13,1
"org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint(Comparable)",1,1,17,15,1
"org.jfree.chart.plot.PiePlot.lookupSectionOutlinePaint(Comparable,boolean)",2,3,44,154,4
"org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke(Comparable)",1,1,17,15,1
"org.jfree.chart.plot.PiePlot.lookupSectionOutlineStroke(Comparable,boolean)",2,3,44,154,4
"org.jfree.chart.plot.PiePlot.lookupSectionPaint(Comparable)",1,1,15,15,1
"org.jfree.chart.plot.PiePlot.lookupSectionPaint(Comparable,PiePlotState)",1,2,28,138,2
"org.jfree.chart.plot.PiePlot.lookupSectionPaint(Comparable,boolean)",2,3,43,154,4
"org.jfree.chart.plot.PiePlot.readObject(ObjectInputStream)",1,1,24,232,1
"org.jfree.chart.plot.PiePlot.setAutoPopulateSectionOutlinePaint(boolean)",1,1,13,19,1
"org.jfree.chart.plot.PiePlot.setAutoPopulateSectionOutlineStroke(boolean)",1,1,13,19,1
"org.jfree.chart.plot.PiePlot.setAutoPopulateSectionPaint(boolean)",1,1,13,19,1
"org.jfree.chart.plot.PiePlot.setCircular(boolean)",1,1,11,15,1
"org.jfree.chart.plot.PiePlot.setCircular(boolean,boolean)",1,2,15,31,2
"org.jfree.chart.plot.PiePlot.setDataset(PieDataset)",1,3,24,116,3
"org.jfree.chart.plot.PiePlot.setDefaultSectionOutlinePaint(Paint)",1,1,12,26,1
"org.jfree.chart.plot.PiePlot.setDefaultSectionOutlineStroke(Stroke)",1,1,12,26,1
"org.jfree.chart.plot.PiePlot.setDefaultSectionPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.PiePlot.setDirection(Rotation)",1,1,13,26,1
"org.jfree.chart.plot.PiePlot.setExplodePercent(Comparable,double)",1,1,19,82,2
"org.jfree.chart.plot.PiePlot.setIgnoreNullValues(boolean)",1,1,15,22,1
"org.jfree.chart.plot.PiePlot.setIgnoreZeroValues(boolean)",1,1,15,22,1
"org.jfree.chart.plot.PiePlot.setInteriorGap(double)",2,2,20,104,4
"org.jfree.chart.plot.PiePlot.setLabelBackgroundPaint(Paint)",1,1,12,15,1
"org.jfree.chart.plot.PiePlot.setLabelDistributor(AbstractPieLabelDistributor)",1,1,13,26,1
"org.jfree.chart.plot.PiePlot.setLabelFont(Font)",1,1,13,26,1
"org.jfree.chart.plot.PiePlot.setLabelGap(double)",1,1,13,19,1
"org.jfree.chart.plot.PiePlot.setLabelGenerator(PieSectionLabelGenerator)",1,1,12,15,1
"org.jfree.chart.plot.PiePlot.setLabelLinkMargin(double)",1,1,12,19,1
"org.jfree.chart.plot.PiePlot.setLabelLinkPaint(Paint)",1,1,14,26,1
"org.jfree.chart.plot.PiePlot.setLabelLinkStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.plot.PiePlot.setLabelLinkStyle(PieLabelLinkStyle)",1,1,15,26,1
"org.jfree.chart.plot.PiePlot.setLabelLinksVisible(boolean)",1,1,15,19,1
"org.jfree.chart.plot.PiePlot.setLabelOutlinePaint(Paint)",1,1,12,15,1
"org.jfree.chart.plot.PiePlot.setLabelOutlineStroke(Stroke)",1,1,12,15,1
"org.jfree.chart.plot.PiePlot.setLabelPadding(RectangleInsets)",1,1,15,26,1
"org.jfree.chart.plot.PiePlot.setLabelPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.PiePlot.setLabelShadowPaint(Paint)",1,1,12,15,1
"org.jfree.chart.plot.PiePlot.setLegendItemShape(Shape)",1,1,13,26,1
"org.jfree.chart.plot.PiePlot.setLegendLabelGenerator(PieSectionLabelGenerator)",1,1,13,26,1
"org.jfree.chart.plot.PiePlot.setLegendLabelToolTipGenerator(PieSectionLabelGenerator)",1,1,13,15,1
"org.jfree.chart.plot.PiePlot.setLegendLabelURLGenerator(PieURLGenerator)",1,1,14,15,1
"org.jfree.chart.plot.PiePlot.setMaximumLabelWidth(double)",1,1,12,19,1
"org.jfree.chart.plot.PiePlot.setMinimumArcAngleToDraw(double)",1,1,21,15,1
"org.jfree.chart.plot.PiePlot.setPieIndex(int)",1,1,11,15,1
"org.jfree.chart.plot.PiePlot.setSectionOutlinePaint(Comparable,Paint)",1,1,19,24,1
"org.jfree.chart.plot.PiePlot.setSectionOutlineStroke(Comparable,Stroke)",1,1,19,24,1
"org.jfree.chart.plot.PiePlot.setSectionOutlinesVisible(boolean)",1,1,13,19,1
"org.jfree.chart.plot.PiePlot.setSectionPaint(Comparable,Paint)",1,1,19,24,1
"org.jfree.chart.plot.PiePlot.setShadowGenerator(ShadowGenerator)",1,1,15,15,1
"org.jfree.chart.plot.PiePlot.setShadowPaint(Paint)",1,1,12,15,1
"org.jfree.chart.plot.PiePlot.setShadowXOffset(double)",1,1,12,19,1
"org.jfree.chart.plot.PiePlot.setShadowYOffset(double)",1,1,12,19,1
"org.jfree.chart.plot.PiePlot.setSimpleLabelOffset(RectangleInsets)",1,1,15,26,1
"org.jfree.chart.plot.PiePlot.setSimpleLabels(boolean)",1,1,13,19,1
"org.jfree.chart.plot.PiePlot.setStartAngle(double)",1,1,14,19,1
"org.jfree.chart.plot.PiePlot.setToolTipGenerator(PieToolTipGenerator)",1,1,13,15,1
"org.jfree.chart.plot.PiePlot.setURLGenerator(PieURLGenerator)",1,1,12,15,1
"org.jfree.chart.plot.PiePlot.writeObject(ObjectOutputStream)",1,1,22,232,1
"org.jfree.chart.plot.PiePlot3D.PiePlot3D()",1,1,6,8,1
"org.jfree.chart.plot.PiePlot3D.PiePlot3D(PieDataset)",1,1,10,18,1
"org.jfree.chart.plot.PiePlot3D.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",12,26,350,"7,859",30
"org.jfree.chart.plot.PiePlot3D.drawSide(Graphics2D,Rectangle2D,Arc2D,Area,Area,Paint,Paint,Stroke,boolean,boolean)",1,42,325,"4,121",42
"org.jfree.chart.plot.PiePlot3D.equals(Object)",5,1,24,148,5
"org.jfree.chart.plot.PiePlot3D.getDarkerSides()",1,1,13,13,1
"org.jfree.chart.plot.PiePlot3D.getDepthFactor()",1,1,10,13,1
"org.jfree.chart.plot.PiePlot3D.getPlotType()",1,1,9,11,1
"org.jfree.chart.plot.PiePlot3D.isAngleAtBack(double)",1,1,12,28,1
"org.jfree.chart.plot.PiePlot3D.isAngleAtFront(double)",1,1,12,28,1
"org.jfree.chart.plot.PiePlot3D.setDarkerSides(boolean)",1,1,16,19,1
"org.jfree.chart.plot.PiePlot3D.setDepthFactor(double)",1,1,12,19,1
"org.jfree.chart.plot.PiePlot3DTest.testDrawWithNullDataset()",1,1,21,162,2
"org.jfree.chart.plot.PiePlot3DTest.testEquals()",1,1,18,143,1
"org.jfree.chart.plot.PiePlot3DTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.plot.PiePlotState.PiePlotState(PlotRenderingInfo)",1,1,11,31,1
"org.jfree.chart.plot.PiePlotState.getExplodedPieArea()",1,1,8,8,1
"org.jfree.chart.plot.PiePlotState.getLatestAngle()",1,1,8,11,1
"org.jfree.chart.plot.PiePlotState.getLinkArea()",1,1,9,8,1
"org.jfree.chart.plot.PiePlotState.getPassesRequired()",1,1,8,11,1
"org.jfree.chart.plot.PiePlotState.getPieArea()",1,1,8,8,1
"org.jfree.chart.plot.PiePlotState.getPieCenterX()",1,1,8,11,1
"org.jfree.chart.plot.PiePlotState.getPieCenterY()",1,1,10,11,1
"org.jfree.chart.plot.PiePlotState.getPieHRadius()",1,1,8,11,1
"org.jfree.chart.plot.PiePlotState.getPieWRadius()",1,1,8,11,1
"org.jfree.chart.plot.PiePlotState.getTotal()",1,1,8,11,1
"org.jfree.chart.plot.PiePlotState.setExplodedPieArea(Rectangle2D)",1,1,8,11,1
"org.jfree.chart.plot.PiePlotState.setLatestAngle(double)",1,1,8,15,1
"org.jfree.chart.plot.PiePlotState.setLinkArea(Rectangle2D)",1,1,9,11,1
"org.jfree.chart.plot.PiePlotState.setPassesRequired(int)",1,1,8,15,1
"org.jfree.chart.plot.PiePlotState.setPieArea(Rectangle2D)",1,1,8,11,1
"org.jfree.chart.plot.PiePlotState.setPieCenterX(double)",1,1,8,15,1
"org.jfree.chart.plot.PiePlotState.setPieCenterY(double)",1,1,9,15,1
"org.jfree.chart.plot.PiePlotState.setPieHRadius(double)",1,1,8,15,1
"org.jfree.chart.plot.PiePlotState.setPieWRadius(double)",1,1,8,15,1
"org.jfree.chart.plot.PiePlotState.setTotal(double)",1,1,8,15,1
"org.jfree.chart.plot.PiePlotTest.NullLegendLabelGenerator.generateAttributedSectionLabel(PieDataset,Comparable)",1,1,5,4,1
"org.jfree.chart.plot.PiePlotTest.NullLegendLabelGenerator.generateSectionLabel(PieDataset,Comparable)",1,1,4,4,1
"org.jfree.chart.plot.PiePlotTest.testBug1126()",1,1,14,179,1
"org.jfree.chart.plot.PiePlotTest.testBug1126_b()",1,1,14,179,1
"org.jfree.chart.plot.PiePlotTest.testBug1126_c()",1,1,14,212,1
"org.jfree.chart.plot.PiePlotTest.testBug1126_d()",1,1,14,200,1
"org.jfree.chart.plot.PiePlotTest.testBug1126_e()",1,1,11,82,1
"org.jfree.chart.plot.PiePlotTest.testCloning()",1,1,11,71,1
"org.jfree.chart.plot.PiePlotTest.testCloning_LegendItemShape()",1,1,16,180,1
"org.jfree.chart.plot.PiePlotTest.testCloning_LegendLabelGenerator()",1,1,17,133,1
"org.jfree.chart.plot.PiePlotTest.testCloning_LegendLabelToolTipGenerator()",1,1,17,133,1
"org.jfree.chart.plot.PiePlotTest.testCloning_LegendLabelURLGenerator()",1,1,16,117,1
"org.jfree.chart.plot.PiePlotTest.testCloning_URLGenerator()",1,1,15,117,1
"org.jfree.chart.plot.PiePlotTest.testDrawWithNullLegendLabels()",1,1,26,250,2
"org.jfree.chart.plot.PiePlotTest.testEquals()",1,1,278,"5,686",1
"org.jfree.chart.plot.PiePlotTest.testGetDefaultSectionPaint()",1,1,17,66,2
"org.jfree.chart.plot.PiePlotTest.testGetLegendItems()",1,1,28,315,1
"org.jfree.chart.plot.PiePlotTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.plot.Plot.Plot()",1,1,21,257,1
"org.jfree.chart.plot.Plot.addChangeListener(PlotChangeListener)",1,1,10,19,1
"org.jfree.chart.plot.Plot.annotationChanged(AnnotationChangeEvent)",1,1,12,4,1
"org.jfree.chart.plot.Plot.axisChanged(AxisChangeEvent)",1,1,9,4,1
"org.jfree.chart.plot.Plot.clone()",1,2,22,98,2
"org.jfree.chart.plot.Plot.createAndAddEntity(Rectangle2D,PlotRenderingInfo,String,String)",1,4,23,100,4
"org.jfree.chart.plot.Plot.datasetChanged(DatasetChangeEvent)",1,1,14,26,1
"org.jfree.chart.plot.Plot.drawBackground(Graphics2D,Rectangle2D)",1,1,16,20,1
"org.jfree.chart.plot.Plot.drawBackgroundImage(Graphics2D,Rectangle2D)",2,1,30,328,2
"org.jfree.chart.plot.Plot.drawNoDataMessage(Graphics2D,Rectangle2D)",1,2,22,233,2
"org.jfree.chart.plot.Plot.drawOutline(Graphics2D,Rectangle2D)",2,2,22,173,4
"org.jfree.chart.plot.Plot.equals(Object)",18,1,67,806,18
"org.jfree.chart.plot.Plot.fetchElementHintingFlag()",3,3,18,78,3
"org.jfree.chart.plot.Plot.fillBackground(Graphics2D,Rectangle2D)",1,1,13,15,1
"org.jfree.chart.plot.Plot.fillBackground(Graphics2D,Rectangle2D,PlotOrientation)",2,4,41,411,5
"org.jfree.chart.plot.Plot.fireChangeEvent()",1,1,8,11,1
"org.jfree.chart.plot.Plot.getBackgroundAlpha()",1,1,10,13,1
"org.jfree.chart.plot.Plot.getBackgroundImage()",1,1,11,8,1
"org.jfree.chart.plot.Plot.getBackgroundImageAlignment()",1,1,11,13,1
"org.jfree.chart.plot.Plot.getBackgroundImageAlpha()",1,1,12,13,1
"org.jfree.chart.plot.Plot.getBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.plot.Plot.getChart()",1,1,12,8,1
"org.jfree.chart.plot.Plot.getDatasetGroup()",1,1,10,8,1
"org.jfree.chart.plot.Plot.getDrawingSupplier()",1,2,18,53,2
"org.jfree.chart.plot.Plot.getForegroundAlpha()",1,1,10,13,1
"org.jfree.chart.plot.Plot.getInsets()",1,1,10,8,1
"org.jfree.chart.plot.Plot.getLegendItems()",1,1,11,4,1
"org.jfree.chart.plot.Plot.getNoDataMessage()",1,1,13,8,1
"org.jfree.chart.plot.Plot.getNoDataMessageFont()",1,1,11,8,1
"org.jfree.chart.plot.Plot.getNoDataMessagePaint()",1,1,11,8,1
"org.jfree.chart.plot.Plot.getOutlinePaint()",1,1,10,8,1
"org.jfree.chart.plot.Plot.getOutlineStroke()",1,1,10,8,1
"org.jfree.chart.plot.Plot.getParent()",1,1,12,8,1
"org.jfree.chart.plot.Plot.getRectX(double,double,double,RectangleEdge)",1,1,21,98,3
"org.jfree.chart.plot.Plot.getRectY(double,double,double,RectangleEdge)",1,1,21,98,3
"org.jfree.chart.plot.Plot.getRootPlot()",2,1,14,34,2
"org.jfree.chart.plot.Plot.handleClick(int,int,PlotRenderingInfo)",1,1,13,6,1
"org.jfree.chart.plot.Plot.isNotify()",1,1,13,13,1
"org.jfree.chart.plot.Plot.isOutlineVisible()",1,1,16,13,1
"org.jfree.chart.plot.Plot.isSubplot()",1,1,13,15,1
"org.jfree.chart.plot.Plot.markerChanged(MarkerChangeEvent)",1,1,12,4,1
"org.jfree.chart.plot.Plot.notifyListeners(PlotChangeEvent)",2,3,18,146,4
"org.jfree.chart.plot.Plot.readObject(ObjectInputStream)",1,1,18,91,1
"org.jfree.chart.plot.Plot.removeChangeListener(PlotChangeListener)",1,1,10,19,1
"org.jfree.chart.plot.Plot.resolveDomainAxisLocation(AxisLocation,PlotOrientation)",2,1,51,418,14
"org.jfree.chart.plot.Plot.resolveRangeAxisLocation(AxisLocation,PlotOrientation)",2,1,51,418,14
"org.jfree.chart.plot.Plot.setBackgroundAlpha(float)",1,2,14,38,2
"org.jfree.chart.plot.Plot.setBackgroundImage(Image)",1,1,12,15,1
"org.jfree.chart.plot.Plot.setBackgroundImageAlignment(int)",1,2,15,38,2
"org.jfree.chart.plot.Plot.setBackgroundImageAlpha(float)",2,2,21,94,4
"org.jfree.chart.plot.Plot.setBackgroundPaint(Paint)",4,4,25,114,5
"org.jfree.chart.plot.Plot.setChart(JFreeChart)",1,1,11,11,1
"org.jfree.chart.plot.Plot.setDatasetGroup(DatasetGroup)",1,1,10,11,1
"org.jfree.chart.plot.Plot.setDrawingSupplier(DrawingSupplier)",1,1,16,15,1
"org.jfree.chart.plot.Plot.setDrawingSupplier(DrawingSupplier,boolean)",1,2,21,28,2
"org.jfree.chart.plot.Plot.setForegroundAlpha(float)",1,2,14,38,2
"org.jfree.chart.plot.Plot.setInsets(RectangleInsets)",1,1,12,15,1
"org.jfree.chart.plot.Plot.setInsets(RectangleInsets,boolean)",1,3,20,66,3
"org.jfree.chart.plot.Plot.setNoDataMessage(String)",1,1,13,15,1
"org.jfree.chart.plot.Plot.setNoDataMessageFont(Font)",1,1,13,26,1
"org.jfree.chart.plot.Plot.setNoDataMessagePaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.Plot.setNotify(boolean)",1,2,17,34,2
"org.jfree.chart.plot.Plot.setOutlinePaint(Paint)",4,4,26,114,5
"org.jfree.chart.plot.Plot.setOutlineStroke(Stroke)",4,4,26,114,5
"org.jfree.chart.plot.Plot.setOutlineVisible(boolean)",1,1,14,19,1
"org.jfree.chart.plot.Plot.setParent(Plot)",1,1,11,11,1
"org.jfree.chart.plot.Plot.writeObject(ObjectOutputStream)",1,1,15,75,1
"org.jfree.chart.plot.Plot.zoom(double)",1,1,9,4,1
"org.jfree.chart.plot.PlotOrientation.isHorizontal()",1,1,11,15,1
"org.jfree.chart.plot.PlotOrientation.isVertical()",1,1,11,15,1
"org.jfree.chart.plot.PlotOrientationTest.testEquals()",1,1,14,44,1
"org.jfree.chart.plot.PlotOrientationTest.testSerialization()",1,1,12,51,1
"org.jfree.chart.plot.PlotRenderingInfo.PlotRenderingInfo(ChartRenderingInfo)",1,1,10,28,1
"org.jfree.chart.plot.PlotRenderingInfo.addSubplotInfo(PlotRenderingInfo)",1,1,10,19,1
"org.jfree.chart.plot.PlotRenderingInfo.clone()",1,4,24,247,4
"org.jfree.chart.plot.PlotRenderingInfo.equals(Object)",6,1,27,186,6
"org.jfree.chart.plot.PlotRenderingInfo.getDataArea()",1,1,10,8,1
"org.jfree.chart.plot.PlotRenderingInfo.getOwner()",1,1,8,8,1
"org.jfree.chart.plot.PlotRenderingInfo.getPlotArea()",1,1,10,8,1
"org.jfree.chart.plot.PlotRenderingInfo.getSubplotCount()",1,1,8,15,1
"org.jfree.chart.plot.PlotRenderingInfo.getSubplotIndex(Point2D)",3,2,24,122,3
"org.jfree.chart.plot.PlotRenderingInfo.getSubplotInfo(int)",1,1,12,19,1
"org.jfree.chart.plot.PlotRenderingInfo.readObject(ObjectInputStream)",1,1,14,41,1
"org.jfree.chart.plot.PlotRenderingInfo.setDataArea(Rectangle2D)",1,1,11,11,1
"org.jfree.chart.plot.PlotRenderingInfo.setPlotArea(Rectangle2D)",1,1,11,11,1
"org.jfree.chart.plot.PlotRenderingInfo.writeObject(ObjectOutputStream)",1,1,12,41,1
"org.jfree.chart.plot.PlotRenderingInfoTest.testCloning()",1,1,21,298,1
"org.jfree.chart.plot.PlotRenderingInfoTest.testEquals()",1,1,26,439,1
"org.jfree.chart.plot.PlotRenderingInfoTest.testSerialization()",1,1,9,25,1
"org.jfree.chart.plot.PlotState.PlotState()",1,1,6,8,1
"org.jfree.chart.plot.PlotState.getSharedAxisStates()",1,1,8,8,1
"org.jfree.chart.plot.PlotTest.testEquals()",1,1,96,"1,568",1
"org.jfree.chart.plot.PolarPlot.PolarPlot()",1,1,6,12,1
"org.jfree.chart.plot.PolarPlot.PolarPlot(XYDataset,ValueAxis,PolarItemRenderer)",1,4,50,778,4
"org.jfree.chart.plot.PolarPlot.addCornerTextItem(String)",1,1,13,31,1
"org.jfree.chart.plot.PolarPlot.buildRadialTicks(List)",1,4,22,87,4
"org.jfree.chart.plot.PolarPlot.calculateTextAnchor(double)",1,1,46,564,17
"org.jfree.chart.plot.PolarPlot.checkAxisIndices(List)",6,2,30,218,6
"org.jfree.chart.plot.PolarPlot.clearCornerTextItems()",1,2,13,39,2
"org.jfree.chart.plot.PolarPlot.clone()",1,7,43,584,7
"org.jfree.chart.plot.PolarPlot.datasetChanged(DatasetChangeEvent)",1,4,22,153,4
"org.jfree.chart.plot.PolarPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",2,5,70,664,8
"org.jfree.chart.plot.PolarPlot.drawAxis(ValueAxis,PolarAxisLocation,Graphics2D,Rectangle2D)",1,9,64,"1,029",9
"org.jfree.chart.plot.PolarPlot.drawCornerTextItems(Graphics2D,Rectangle2D)",2,3,36,487,4
"org.jfree.chart.plot.PolarPlot.drawGridlines(Graphics2D,Rectangle2D,List,List)",2,5,35,225,8
"org.jfree.chart.plot.PolarPlot.equals(Object)",22,1,84,"1,076",22
"org.jfree.chart.plot.PolarPlot.getAngleGridlinePaint()",1,1,11,8,1
"org.jfree.chart.plot.PolarPlot.getAngleGridlineStroke()",1,1,11,8,1
"org.jfree.chart.plot.PolarPlot.getAngleLabelFont()",1,1,10,8,1
"org.jfree.chart.plot.PolarPlot.getAngleLabelPaint()",1,1,10,8,1
"org.jfree.chart.plot.PolarPlot.getAngleOffset()",1,1,9,11,1
"org.jfree.chart.plot.PolarPlot.getAngleTickUnit()",1,1,11,8,1
"org.jfree.chart.plot.PolarPlot.getAxis()",1,1,10,8,1
"org.jfree.chart.plot.PolarPlot.getAxis(int)",1,2,18,60,2
"org.jfree.chart.plot.PolarPlot.getAxisCount()",1,1,10,15,1
"org.jfree.chart.plot.PolarPlot.getAxisForDataset(int)",1,2,23,101,2
"org.jfree.chart.plot.PolarPlot.getAxisIndex(ValueAxis)",1,3,21,88,3
"org.jfree.chart.plot.PolarPlot.getAxisLocation()",1,1,12,8,1
"org.jfree.chart.plot.PolarPlot.getAxisLocation(int)",1,2,18,60,2
"org.jfree.chart.plot.PolarPlot.getDataRange(ValueAxis)",1,4,30,175,4
"org.jfree.chart.plot.PolarPlot.getDataset()",1,1,10,8,1
"org.jfree.chart.plot.PolarPlot.getDataset(int)",1,2,18,60,2
"org.jfree.chart.plot.PolarPlot.getDatasetCount()",1,1,10,15,1
"org.jfree.chart.plot.PolarPlot.getDatasetsMappedToAxis(Integer)",1,5,28,225,5
"org.jfree.chart.plot.PolarPlot.getFixedLegendItems()",1,1,12,8,1
"org.jfree.chart.plot.PolarPlot.getIndexOf(PolarItemRenderer)",1,1,13,19,1
"org.jfree.chart.plot.PolarPlot.getLegendItems()",2,4,27,257,6
"org.jfree.chart.plot.PolarPlot.getMargin()",1,1,10,11,1
"org.jfree.chart.plot.PolarPlot.getOrientation()",1,1,9,4,1
"org.jfree.chart.plot.PolarPlot.getPlotType()",1,1,9,11,1
"org.jfree.chart.plot.PolarPlot.getRadiusGridlinePaint()",1,1,11,8,1
"org.jfree.chart.plot.PolarPlot.getRadiusGridlineStroke()",1,1,11,8,1
"org.jfree.chart.plot.PolarPlot.getRenderer()",1,1,10,8,1
"org.jfree.chart.plot.PolarPlot.getRenderer(int)",1,2,18,60,2
"org.jfree.chart.plot.PolarPlot.indexOf(XYDataset)",3,2,20,114,3
"org.jfree.chart.plot.PolarPlot.isAngleGridlinesVisible()",1,1,11,13,1
"org.jfree.chart.plot.PolarPlot.isAngleLabelsVisible()",1,1,10,13,1
"org.jfree.chart.plot.PolarPlot.isCounterClockwise()",1,1,10,11,1
"org.jfree.chart.plot.PolarPlot.isDomainZoomable()",1,1,9,8,1
"org.jfree.chart.plot.PolarPlot.isRadiusGridlinesVisible()",1,1,11,13,1
"org.jfree.chart.plot.PolarPlot.isRadiusMinorGridlinesVisible()",1,1,10,11,1
"org.jfree.chart.plot.PolarPlot.isRangeZoomable()",1,1,9,8,1
"org.jfree.chart.plot.PolarPlot.mapDatasetToAxes(int,List)",2,1,20,104,2
"org.jfree.chart.plot.PolarPlot.mapDatasetToAxis(int,int)",1,1,14,43,1
"org.jfree.chart.plot.PolarPlot.readObject(ObjectInputStream)",1,7,39,505,7
"org.jfree.chart.plot.PolarPlot.refreshAngleTicks()",1,2,19,123,2
"org.jfree.chart.plot.PolarPlot.removeCornerTextItem(String)",1,2,14,33,2
"org.jfree.chart.plot.PolarPlot.render(Graphics2D,Rectangle2D,PlotRenderingInfo)",4,5,37,330,7
"org.jfree.chart.plot.PolarPlot.rendererChanged(RendererChangeEvent)",1,1,11,4,1
"org.jfree.chart.plot.PolarPlot.setAngleGridlinePaint(Paint)",1,1,13,15,1
"org.jfree.chart.plot.PolarPlot.setAngleGridlineStroke(Stroke)",1,1,14,15,1
"org.jfree.chart.plot.PolarPlot.setAngleGridlinesVisible(boolean)",1,2,17,38,2
"org.jfree.chart.plot.PolarPlot.setAngleLabelFont(Font)",1,1,13,26,1
"org.jfree.chart.plot.PolarPlot.setAngleLabelPaint(Paint)",1,1,11,26,1
"org.jfree.chart.plot.PolarPlot.setAngleLabelsVisible(boolean)",1,2,14,38,2
"org.jfree.chart.plot.PolarPlot.setAngleOffset(double)",1,1,14,19,1
"org.jfree.chart.plot.PolarPlot.setAngleTickUnit(TickUnit)",1,1,13,26,1
"org.jfree.chart.plot.PolarPlot.setAxis(ValueAxis)",1,1,9,11,1
"org.jfree.chart.plot.PolarPlot.setAxis(int,ValueAxis)",1,1,14,22,1
"org.jfree.chart.plot.PolarPlot.setAxis(int,ValueAxis,boolean)",1,5,29,164,5
"org.jfree.chart.plot.PolarPlot.setAxisLocation(PolarAxisLocation)",1,1,14,15,1
"org.jfree.chart.plot.PolarPlot.setAxisLocation(PolarAxisLocation,boolean)",1,1,15,19,1
"org.jfree.chart.plot.PolarPlot.setAxisLocation(int,PolarAxisLocation)",1,1,15,22,1
"org.jfree.chart.plot.PolarPlot.setAxisLocation(int,PolarAxisLocation,boolean)",1,2,18,57,2
"org.jfree.chart.plot.PolarPlot.setCounterClockwise(boolean)",1,1,13,15,1
"org.jfree.chart.plot.PolarPlot.setDataset(XYDataset)",1,1,12,11,1
"org.jfree.chart.plot.PolarPlot.setDataset(int,XYDataset)",1,3,25,125,3
"org.jfree.chart.plot.PolarPlot.setFixedLegendItems(LegendItemCollection)",1,1,15,15,1
"org.jfree.chart.plot.PolarPlot.setMargin(int)",1,1,12,19,1
"org.jfree.chart.plot.PolarPlot.setRadiusGridlinePaint(Paint)",1,1,14,15,1
"org.jfree.chart.plot.PolarPlot.setRadiusGridlineStroke(Stroke)",1,1,14,15,1
"org.jfree.chart.plot.PolarPlot.setRadiusGridlinesVisible(boolean)",1,2,17,38,2
"org.jfree.chart.plot.PolarPlot.setRadiusMinorGridlinesVisible(boolean)",1,1,12,19,1
"org.jfree.chart.plot.PolarPlot.setRenderer(PolarItemRenderer)",1,1,12,11,1
"org.jfree.chart.plot.PolarPlot.setRenderer(int,PolarItemRenderer)",1,1,14,22,1
"org.jfree.chart.plot.PolarPlot.setRenderer(int,PolarItemRenderer,boolean)",1,4,27,135,4
"org.jfree.chart.plot.PolarPlot.translateToJava2D(double,double,ValueAxis,Rectangle2D)",1,1,40,621,2
"org.jfree.chart.plot.PolarPlot.writeObject(ObjectOutputStream)",1,1,15,92,1
"org.jfree.chart.plot.PolarPlot.zoom(double)",1,4,22,187,4
"org.jfree.chart.plot.PolarPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D)",1,1,13,4,1
"org.jfree.chart.plot.PolarPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D,boolean)",1,1,16,8,1
"org.jfree.chart.plot.PolarPlot.zoomDomainAxes(double,double,PlotRenderingInfo,Point2D)",1,1,14,6,1
"org.jfree.chart.plot.PolarPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D)",1,1,12,11,1
"org.jfree.chart.plot.PolarPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D,boolean)",1,4,32,206,4
"org.jfree.chart.plot.PolarPlot.zoomRangeAxes(double,double,PlotRenderingInfo,Point2D)",1,1,13,31,1
"org.jfree.chart.plot.PolarPlotTest.testCloning()",1,1,27,310,1
"org.jfree.chart.plot.PolarPlotTest.testEquals()",1,1,81,"1,574",1
"org.jfree.chart.plot.PolarPlotTest.testGetLegendItems()",1,1,19,176,1
"org.jfree.chart.plot.PolarPlotTest.testGetLegendItems2()",1,1,28,350,1
"org.jfree.chart.plot.PolarPlotTest.testSerialization()",1,1,15,140,1
"org.jfree.chart.plot.PolarPlotTest.testTranslateToJava2D_LogAxis()",1,1,18,349,1
"org.jfree.chart.plot.PolarPlotTest.testTranslateToJava2D_NumberAxis()",1,1,33,841,1
"org.jfree.chart.plot.PolarPlotTest.testTranslateToJava2D_NumberAxisAndMargin()",1,1,32,857,1
"org.jfree.chart.plot.RingPlot.RingPlot()",1,1,6,8,1
"org.jfree.chart.plot.RingPlot.RingPlot(PieDataset)",1,1,19,183,1
"org.jfree.chart.plot.RingPlot.drawItem(Graphics2D,int,Rectangle2D,PiePlotState,int)",4,21,139,"2,367",23
"org.jfree.chart.plot.RingPlot.equals(Object)",14,1,52,618,14
"org.jfree.chart.plot.RingPlot.getCenterText()",1,1,11,8,1
"org.jfree.chart.plot.RingPlot.getCenterTextColor()",1,1,11,8,1
"org.jfree.chart.plot.RingPlot.getCenterTextFont()",1,1,11,8,1
"org.jfree.chart.plot.RingPlot.getCenterTextFormatter()",1,1,12,8,1
"org.jfree.chart.plot.RingPlot.getCenterTextMode()",1,1,12,8,1
"org.jfree.chart.plot.RingPlot.getInnerSeparatorExtension()",1,1,12,13,1
"org.jfree.chart.plot.RingPlot.getLabelLinkDepth()",1,1,10,28,1
"org.jfree.chart.plot.RingPlot.getOuterSeparatorExtension()",1,1,12,13,1
"org.jfree.chart.plot.RingPlot.getSectionDepth()",1,1,12,13,1
"org.jfree.chart.plot.RingPlot.getSeparatorPaint()",1,1,10,8,1
"org.jfree.chart.plot.RingPlot.getSeparatorStroke()",1,1,10,8,1
"org.jfree.chart.plot.RingPlot.getSeparatorsVisible()",1,1,11,13,1
"org.jfree.chart.plot.RingPlot.initialise(Graphics2D,Rectangle2D,PiePlot,Integer,PlotRenderingInfo)",1,1,22,46,1
"org.jfree.chart.plot.RingPlot.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.plot.RingPlot.setCenterText(String)",1,1,13,15,1
"org.jfree.chart.plot.RingPlot.setCenterTextColor(Color)",1,1,13,26,1
"org.jfree.chart.plot.RingPlot.setCenterTextFont(Font)",1,1,13,26,1
"org.jfree.chart.plot.RingPlot.setCenterTextFormatter(Format)",1,1,12,22,1
"org.jfree.chart.plot.RingPlot.setCenterTextMode(CenterTextMode)",1,1,17,26,1
"org.jfree.chart.plot.RingPlot.setInnerSeparatorExtension(double)",1,1,14,22,1
"org.jfree.chart.plot.RingPlot.setOuterSeparatorExtension(double)",1,1,13,19,1
"org.jfree.chart.plot.RingPlot.setSectionDepth(double)",1,1,13,19,1
"org.jfree.chart.plot.RingPlot.setSeparatorPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.RingPlot.setSeparatorStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.plot.RingPlot.setSeparatorsVisible(boolean)",1,1,13,19,1
"org.jfree.chart.plot.RingPlot.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.plot.RingPlotTest.testCloning()",1,1,14,136,1
"org.jfree.chart.plot.RingPlotTest.testEquals()",1,1,63,982,1
"org.jfree.chart.plot.RingPlotTest.testSerialization()",1,1,12,76,1
"org.jfree.chart.plot.SpiderWebPlot.SpiderWebPlot()",1,1,6,8,1
"org.jfree.chart.plot.SpiderWebPlot.SpiderWebPlot(CategoryDataset)",1,1,9,11,1
"org.jfree.chart.plot.SpiderWebPlot.SpiderWebPlot(CategoryDataset,TableOrder)",1,2,37,466,2
"org.jfree.chart.plot.SpiderWebPlot.calculateLabelLocation(Rectangle2D,double,Rectangle2D,double)",1,3,34,345,4
"org.jfree.chart.plot.SpiderWebPlot.calculateMaxValue(int,int)",1,4,22,178,5
"org.jfree.chart.plot.SpiderWebPlot.clone()",1,1,19,108,1
"org.jfree.chart.plot.SpiderWebPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",1,7,84,"1,535",7
"org.jfree.chart.plot.SpiderWebPlot.drawLabel(Graphics2D,Rectangle2D,double,int,double,double)",1,2,36,374,2
"org.jfree.chart.plot.SpiderWebPlot.drawRadarPoly(Graphics2D,Rectangle2D,Point2D,PlotRenderingInfo,int,int,double,double)",1,9,103,"1,325",10
"org.jfree.chart.plot.SpiderWebPlot.equals(Object)",29,1,103,"1,504",29
"org.jfree.chart.plot.SpiderWebPlot.getAxisLabelGap()",1,1,10,13,1
"org.jfree.chart.plot.SpiderWebPlot.getAxisLinePaint()",1,1,12,8,1
"org.jfree.chart.plot.SpiderWebPlot.getAxisLineStroke()",1,1,12,8,1
"org.jfree.chart.plot.SpiderWebPlot.getBaseSeriesOutlinePaint()",1,1,9,8,1
"org.jfree.chart.plot.SpiderWebPlot.getBaseSeriesOutlineStroke()",1,1,9,8,1
"org.jfree.chart.plot.SpiderWebPlot.getBaseSeriesPaint()",1,1,11,8,1
"org.jfree.chart.plot.SpiderWebPlot.getDataExtractOrder()",1,1,10,8,1
"org.jfree.chart.plot.SpiderWebPlot.getDataset()",1,1,10,8,1
"org.jfree.chart.plot.SpiderWebPlot.getDirection()",1,1,11,8,1
"org.jfree.chart.plot.SpiderWebPlot.getHeadPercent()",1,1,10,13,1
"org.jfree.chart.plot.SpiderWebPlot.getInteriorGap()",1,1,11,13,1
"org.jfree.chart.plot.SpiderWebPlot.getLabelFont()",1,1,10,8,1
"org.jfree.chart.plot.SpiderWebPlot.getLabelGenerator()",1,1,10,8,1
"org.jfree.chart.plot.SpiderWebPlot.getLabelPaint()",1,1,10,8,1
"org.jfree.chart.plot.SpiderWebPlot.getLegendItemShape()",1,1,10,8,1
"org.jfree.chart.plot.SpiderWebPlot.getLegendItems()",3,4,41,423,6
"org.jfree.chart.plot.SpiderWebPlot.getMaxValue()",1,1,10,13,1
"org.jfree.chart.plot.SpiderWebPlot.getPlotType()",1,1,10,4,1
"org.jfree.chart.plot.SpiderWebPlot.getPlotValue(int,int)",1,3,24,116,3
"org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlinePaint()",1,1,8,8,1
"org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlinePaint(int)",2,1,19,87,3
"org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlineStroke()",1,1,8,8,1
"org.jfree.chart.plot.SpiderWebPlot.getSeriesOutlineStroke(int)",2,1,19,87,3
"org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint()",1,1,10,8,1
"org.jfree.chart.plot.SpiderWebPlot.getSeriesPaint(int)",2,3,29,168,4
"org.jfree.chart.plot.SpiderWebPlot.getStartAngle()",1,1,13,13,1
"org.jfree.chart.plot.SpiderWebPlot.getToolTipGenerator()",1,1,12,8,1
"org.jfree.chart.plot.SpiderWebPlot.getURLGenerator()",1,1,12,8,1
"org.jfree.chart.plot.SpiderWebPlot.getWebPoint(Rectangle2D,double,double)",1,1,17,168,1
"org.jfree.chart.plot.SpiderWebPlot.isWebFilled()",1,1,10,13,1
"org.jfree.chart.plot.SpiderWebPlot.readObject(ObjectInputStream)",1,2,25,247,2
"org.jfree.chart.plot.SpiderWebPlot.setAxisLabelGap(double)",1,1,12,19,1
"org.jfree.chart.plot.SpiderWebPlot.setAxisLinePaint(Paint)",1,1,14,26,1
"org.jfree.chart.plot.SpiderWebPlot.setAxisLineStroke(Stroke)",1,1,14,26,1
"org.jfree.chart.plot.SpiderWebPlot.setBaseSeriesOutlinePaint(Paint)",1,1,10,26,1
"org.jfree.chart.plot.SpiderWebPlot.setBaseSeriesOutlineStroke(Stroke)",1,1,10,26,1
"org.jfree.chart.plot.SpiderWebPlot.setBaseSeriesPaint(Paint)",1,1,12,26,1
"org.jfree.chart.plot.SpiderWebPlot.setDataExtractOrder(TableOrder)",1,1,16,26,1
"org.jfree.chart.plot.SpiderWebPlot.setDataset(CategoryDataset)",1,3,23,106,3
"org.jfree.chart.plot.SpiderWebPlot.setDirection(Rotation)",1,1,13,26,1
"org.jfree.chart.plot.SpiderWebPlot.setHeadPercent(double)",1,1,12,19,1
"org.jfree.chart.plot.SpiderWebPlot.setInteriorGap(double)",2,2,19,94,4
"org.jfree.chart.plot.SpiderWebPlot.setLabelFont(Font)",1,1,13,26,1
"org.jfree.chart.plot.SpiderWebPlot.setLabelGenerator(CategoryItemLabelGenerator)",1,1,12,22,1
"org.jfree.chart.plot.SpiderWebPlot.setLabelPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.SpiderWebPlot.setLegendItemShape(Shape)",1,1,13,26,1
"org.jfree.chart.plot.SpiderWebPlot.setMaxValue(double)",1,1,12,19,1
"org.jfree.chart.plot.SpiderWebPlot.setSeriesOutlinePaint(Paint)",1,1,11,15,1
"org.jfree.chart.plot.SpiderWebPlot.setSeriesOutlinePaint(int,Paint)",1,1,11,28,1
"org.jfree.chart.plot.SpiderWebPlot.setSeriesOutlineStroke(Stroke)",1,1,11,15,1
"org.jfree.chart.plot.SpiderWebPlot.setSeriesOutlineStroke(int,Stroke)",1,1,11,28,1
"org.jfree.chart.plot.SpiderWebPlot.setSeriesPaint(Paint)",1,1,13,15,1
"org.jfree.chart.plot.SpiderWebPlot.setSeriesPaint(int,Paint)",1,1,13,31,1
"org.jfree.chart.plot.SpiderWebPlot.setStartAngle(double)",1,1,16,19,1
"org.jfree.chart.plot.SpiderWebPlot.setToolTipGenerator(CategoryToolTipGenerator)",1,1,14,15,1
"org.jfree.chart.plot.SpiderWebPlot.setURLGenerator(CategoryURLGenerator)",1,1,14,15,1
"org.jfree.chart.plot.SpiderWebPlot.setWebFilled(boolean)",1,1,12,19,1
"org.jfree.chart.plot.SpiderWebPlot.writeObject(ObjectOutputStream)",1,1,20,191,1
"org.jfree.chart.plot.SpiderWebPlotTest.testCloning()",1,1,33,461,1
"org.jfree.chart.plot.SpiderWebPlotTest.testDrawWithNullInfo()",1,2,25,270,2
"org.jfree.chart.plot.SpiderWebPlotTest.testEquals()",1,1,152,"2,868",1
"org.jfree.chart.plot.SpiderWebPlotTest.testGetLegendItems()",1,1,27,387,1
"org.jfree.chart.plot.SpiderWebPlotTest.testSerialization()",1,1,9,25,1
"org.jfree.chart.plot.ThermometerPlot.ThermometerPlot()",1,1,6,8,1
"org.jfree.chart.plot.ThermometerPlot.ThermometerPlot(ValueDataset)",1,2,21,176,2
"org.jfree.chart.plot.ThermometerPlot.clone()",1,3,22,194,3
"org.jfree.chart.plot.ThermometerPlot.datasetChanged(DatasetChangeEvent)",1,5,28,224,6
"org.jfree.chart.plot.ThermometerPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",3,15,180,"3,899",20
"org.jfree.chart.plot.ThermometerPlot.equal(double[][],double[][])",6,2,25,212,6
"org.jfree.chart.plot.ThermometerPlot.equals(Object)",27,2,93,"1,356",27
"org.jfree.chart.plot.ThermometerPlot.getAxisLocation()",1,1,11,13,1
"org.jfree.chart.plot.ThermometerPlot.getBulbDiameter()",1,1,11,15,1
"org.jfree.chart.plot.ThermometerPlot.getBulbRadius()",1,1,9,11,1
"org.jfree.chart.plot.ThermometerPlot.getColumnDiameter()",1,1,11,15,1
"org.jfree.chart.plot.ThermometerPlot.getColumnRadius()",1,1,12,13,1
"org.jfree.chart.plot.ThermometerPlot.getCurrentPaint()",1,4,23,162,5
"org.jfree.chart.plot.ThermometerPlot.getDataRange(ValueAxis)",1,1,11,18,1
"org.jfree.chart.plot.ThermometerPlot.getDataset()",1,1,10,8,1
"org.jfree.chart.plot.ThermometerPlot.getFollowDataInSubranges()",1,1,9,11,1
"org.jfree.chart.plot.ThermometerPlot.getGap()",1,1,13,13,1
"org.jfree.chart.plot.ThermometerPlot.getLegendItems()",1,1,9,4,1
"org.jfree.chart.plot.ThermometerPlot.getLowerBound()",1,1,11,13,1
"org.jfree.chart.plot.ThermometerPlot.getMercuryPaint()",1,1,10,8,1
"org.jfree.chart.plot.ThermometerPlot.getOrientation()",1,1,9,4,1
"org.jfree.chart.plot.ThermometerPlot.getPadding()",1,1,11,8,1
"org.jfree.chart.plot.ThermometerPlot.getPlotType()",1,1,9,11,1
"org.jfree.chart.plot.ThermometerPlot.getRangeAxis()",1,1,10,8,1
"org.jfree.chart.plot.ThermometerPlot.getSubrangePaint(int)",2,1,17,79,3
"org.jfree.chart.plot.ThermometerPlot.getThermometerPaint()",1,1,11,8,1
"org.jfree.chart.plot.ThermometerPlot.getThermometerStroke()",1,1,11,8,1
"org.jfree.chart.plot.ThermometerPlot.getUnits()",1,1,12,13,1
"org.jfree.chart.plot.ThermometerPlot.getUpperBound()",1,1,11,13,1
"org.jfree.chart.plot.ThermometerPlot.getUseSubrangePaint()",1,1,11,13,1
"org.jfree.chart.plot.ThermometerPlot.getValueFont()",1,1,10,8,1
"org.jfree.chart.plot.ThermometerPlot.getValueLocation()",1,1,10,11,1
"org.jfree.chart.plot.ThermometerPlot.getValuePaint()",1,1,10,8,1
"org.jfree.chart.plot.ThermometerPlot.inSubrange(int,double)",1,1,12,68,2
"org.jfree.chart.plot.ThermometerPlot.isDomainZoomable()",1,1,9,8,1
"org.jfree.chart.plot.ThermometerPlot.isRangeZoomable()",1,1,9,8,1
"org.jfree.chart.plot.ThermometerPlot.isValidNumber(double)",1,2,11,36,2
"org.jfree.chart.plot.ThermometerPlot.readObject(ObjectInputStream)",1,3,25,264,3
"org.jfree.chart.plot.ThermometerPlot.setAxisLocation(int)",2,2,19,77,3
"org.jfree.chart.plot.ThermometerPlot.setAxisRange()",1,2,13,135,3
"org.jfree.chart.plot.ThermometerPlot.setBulbRadius(int)",1,1,14,19,1
"org.jfree.chart.plot.ThermometerPlot.setColumnRadius(int)",1,1,14,19,1
"org.jfree.chart.plot.ThermometerPlot.setDataset(ValueDataset)",1,3,25,116,3
"org.jfree.chart.plot.ThermometerPlot.setDisplayRange(int,double,double)",1,4,20,182,6
"org.jfree.chart.plot.ThermometerPlot.setFollowDataInSubranges(boolean)",1,1,10,19,1
"org.jfree.chart.plot.ThermometerPlot.setGap(int)",1,1,15,19,1
"org.jfree.chart.plot.ThermometerPlot.setLowerBound(double)",1,1,11,19,1
"org.jfree.chart.plot.ThermometerPlot.setMercuryPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.ThermometerPlot.setPadding(RectangleInsets)",1,1,13,26,1
"org.jfree.chart.plot.ThermometerPlot.setRange(double,double)",1,1,11,34,1
"org.jfree.chart.plot.ThermometerPlot.setRangeAxis(ValueAxis)",1,1,17,65,1
"org.jfree.chart.plot.ThermometerPlot.setSubrange(int,double,double)",1,1,13,94,3
"org.jfree.chart.plot.ThermometerPlot.setSubrangeInfo(int,double,double)",1,1,10,33,1
"org.jfree.chart.plot.ThermometerPlot.setSubrangeInfo(int,double,double,double,double)",1,2,19,106,3
"org.jfree.chart.plot.ThermometerPlot.setSubrangePaint(int,Paint)",1,2,16,82,4
"org.jfree.chart.plot.ThermometerPlot.setThermometerPaint(Paint)",1,2,14,31,2
"org.jfree.chart.plot.ThermometerPlot.setThermometerStroke(Stroke)",1,2,14,31,2
"org.jfree.chart.plot.ThermometerPlot.setUnits(int)",1,3,23,82,4
"org.jfree.chart.plot.ThermometerPlot.setUpperBound(double)",1,1,11,19,1
"org.jfree.chart.plot.ThermometerPlot.setUseSubrangePaint(boolean)",1,1,11,19,1
"org.jfree.chart.plot.ThermometerPlot.setValueFont(Font)",1,2,14,51,2
"org.jfree.chart.plot.ThermometerPlot.setValueFormat(NumberFormat)",1,1,11,26,1
"org.jfree.chart.plot.ThermometerPlot.setValueLocation(int)",2,2,18,77,3
"org.jfree.chart.plot.ThermometerPlot.setValuePaint(Paint)",1,2,15,51,2
"org.jfree.chart.plot.ThermometerPlot.writeObject(ObjectOutputStream)",1,2,19,187,2
"org.jfree.chart.plot.ThermometerPlot.zoom(double)",1,1,11,4,1
"org.jfree.chart.plot.ThermometerPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D)",1,1,12,4,1
"org.jfree.chart.plot.ThermometerPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D,boolean)",1,1,16,8,1
"org.jfree.chart.plot.ThermometerPlot.zoomDomainAxes(double,double,PlotRenderingInfo,Point2D)",1,1,13,6,1
"org.jfree.chart.plot.ThermometerPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D)",1,1,12,19,1
"org.jfree.chart.plot.ThermometerPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D,boolean)",1,1,18,72,1
"org.jfree.chart.plot.ThermometerPlot.zoomRangeAxes(double,double,PlotRenderingInfo,Point2D)",1,1,13,26,1
"org.jfree.chart.plot.ThermometerPlotTest.testCloning()",1,1,11,71,1
"org.jfree.chart.plot.ThermometerPlotTest.testEquals()",1,1,89,"1,675",1
"org.jfree.chart.plot.ThermometerPlotTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.plot.ThermometerPlotTest.testSerialization2()",1,1,11,76,1
"org.jfree.chart.plot.ValueMarker.ValueMarker(double)",1,1,9,19,1
"org.jfree.chart.plot.ValueMarker.ValueMarker(double,Paint,Stroke)",1,1,10,30,1
"org.jfree.chart.plot.ValueMarker.ValueMarker(double,Paint,Stroke,Paint,Stroke,float)",1,1,15,48,1
"org.jfree.chart.plot.ValueMarker.equals(Object)",5,1,32,130,5
"org.jfree.chart.plot.ValueMarker.getValue()",1,1,10,13,1
"org.jfree.chart.plot.ValueMarker.setValue(double)",1,1,14,26,1
"org.jfree.chart.plot.ValueMarkerTest.markerChanged(MarkerChangeEvent)",1,1,9,11,1
"org.jfree.chart.plot.ValueMarkerTest.test1802195()",1,2,15,66,2
"org.jfree.chart.plot.ValueMarkerTest.test1808376()",1,1,16,171,1
"org.jfree.chart.plot.ValueMarkerTest.testCloning()",1,1,11,77,1
"org.jfree.chart.plot.ValueMarkerTest.testEquals()",1,1,70,"1,361",1
"org.jfree.chart.plot.ValueMarkerTest.testGetSetValue()",1,1,13,112,1
"org.jfree.chart.plot.ValueMarkerTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.plot.WaferMapPlot.WaferMapPlot()",1,1,6,8,1
"org.jfree.chart.plot.WaferMapPlot.WaferMapPlot(WaferMapDataset)",1,1,8,11,1
"org.jfree.chart.plot.WaferMapPlot.WaferMapPlot(WaferMapDataset,WaferMapRenderer)",1,3,19,116,3
"org.jfree.chart.plot.WaferMapPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",2,2,29,155,4
"org.jfree.chart.plot.WaferMapPlot.drawChipGrid(Graphics2D,Rectangle2D)",1,8,70,"1,315",8
"org.jfree.chart.plot.WaferMapPlot.drawWaferEdge(Graphics2D,Rectangle2D)",1,2,42,488,2
"org.jfree.chart.plot.WaferMapPlot.getDataset()",1,1,8,8,1
"org.jfree.chart.plot.WaferMapPlot.getLegendItems()",1,1,9,11,1
"org.jfree.chart.plot.WaferMapPlot.getPlotType()",1,1,9,4,1
"org.jfree.chart.plot.WaferMapPlot.getWaferEdge(Rectangle2D)",1,4,36,329,4
"org.jfree.chart.plot.WaferMapPlot.rendererChanged(RendererChangeEvent)",1,1,9,4,1
"org.jfree.chart.plot.WaferMapPlot.setDataset(WaferMapDataset)",1,3,21,106,3
"org.jfree.chart.plot.WaferMapPlot.setRenderer(WaferMapRenderer)",1,3,17,76,3
"org.jfree.chart.plot.XYCrosshairState.XYCrosshairState()",1,1,5,0,1
"org.jfree.chart.plot.XYPlot.XYPlot()",1,1,7,14,1
"org.jfree.chart.plot.XYPlot.XYPlot(XYDataset,ValueAxis,ValueAxis,XYItemRenderer)",1,5,84,"1,321",5
"org.jfree.chart.plot.XYPlot.addAnnotation(XYAnnotation)",1,1,12,11,1
"org.jfree.chart.plot.XYPlot.addAnnotation(XYAnnotation,boolean)",1,2,17,59,2
"org.jfree.chart.plot.XYPlot.addDomainMarker(Marker)",1,1,16,11,1
"org.jfree.chart.plot.XYPlot.addDomainMarker(Marker,Layer)",1,1,15,19,1
"org.jfree.chart.plot.XYPlot.addDomainMarker(int,Marker,Layer)",1,1,18,30,1
"org.jfree.chart.plot.XYPlot.addDomainMarker(int,Marker,Layer,boolean)",1,6,43,318,6
"org.jfree.chart.plot.XYPlot.addRangeMarker(Marker)",1,1,14,11,1
"org.jfree.chart.plot.XYPlot.addRangeMarker(Marker,Layer)",1,1,15,19,1
"org.jfree.chart.plot.XYPlot.addRangeMarker(int,Marker,Layer)",1,1,17,30,1
"org.jfree.chart.plot.XYPlot.addRangeMarker(int,Marker,Layer,boolean)",1,6,40,279,6
"org.jfree.chart.plot.XYPlot.annotationChanged(AnnotationChangeEvent)",1,2,18,51,2
"org.jfree.chart.plot.XYPlot.calculateAxisSpace(Graphics2D,Rectangle2D)",1,1,16,62,1
"org.jfree.chart.plot.XYPlot.calculateDomainAxisSpace(Graphics2D,Rectangle2D,AxisSpace)",1,6,41,348,7
"org.jfree.chart.plot.XYPlot.calculateRangeAxisSpace(Graphics2D,Rectangle2D,AxisSpace)",1,6,41,348,7
"org.jfree.chart.plot.XYPlot.checkAxisIndices(List<Integer>)",5,2,26,129,5
"org.jfree.chart.plot.XYPlot.clearAnnotations()",1,2,13,38,2
"org.jfree.chart.plot.XYPlot.clearDomainAxes()",1,3,15,62,3
"org.jfree.chart.plot.XYPlot.clearDomainMarkers()",1,5,23,136,5
"org.jfree.chart.plot.XYPlot.clearDomainMarkers(int)",1,7,36,261,7
"org.jfree.chart.plot.XYPlot.clearRangeAxes()",1,3,15,62,3
"org.jfree.chart.plot.XYPlot.clearRangeMarkers()",1,5,23,128,5
"org.jfree.chart.plot.XYPlot.clearRangeMarkers(int)",1,7,34,253,7
"org.jfree.chart.plot.XYPlot.clone()",1,12,73,"1,016",12
"org.jfree.chart.plot.XYPlot.configureDomainAxes()",1,3,10,41,3
"org.jfree.chart.plot.XYPlot.configureRangeAxes()",1,3,12,41,3
"org.jfree.chart.plot.XYPlot.datasetChanged(DatasetChangeEvent)",1,2,20,77,2
"org.jfree.chart.plot.XYPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",3,36,233,"4,149",44
"org.jfree.chart.plot.XYPlot.drawAnnotations(Graphics2D,Rectangle2D,PlotRenderingInfo)",1,2,17,89,2
"org.jfree.chart.plot.XYPlot.drawAxes(Graphics2D,Rectangle2D,Rectangle2D,PlotRenderingInfo)",1,9,75,979,9
"org.jfree.chart.plot.XYPlot.drawBackground(Graphics2D,Rectangle2D)",1,1,12,41,1
"org.jfree.chart.plot.XYPlot.drawDomainCrosshair(Graphics2D,Rectangle2D,PlotOrientation,double,ValueAxis,Stroke,Paint)",2,2,39,328,3
"org.jfree.chart.plot.XYPlot.drawDomainGridlines(Graphics2D,Rectangle2D,List)",2,9,44,351,11
"org.jfree.chart.plot.XYPlot.drawDomainMarkers(Graphics2D,Rectangle2D,int,Layer)",3,3,30,204,6
"org.jfree.chart.plot.XYPlot.drawDomainTickBands(Graphics2D,Rectangle2D,List)",1,5,34,255,5
"org.jfree.chart.plot.XYPlot.drawHorizontalLine(Graphics2D,Rectangle2D,double,Stroke,Paint)",1,3,26,175,3
"org.jfree.chart.plot.XYPlot.drawQuadrants(Graphics2D,Rectangle2D)",3,16,108,"2,132",23
"org.jfree.chart.plot.XYPlot.drawRangeCrosshair(Graphics2D,Rectangle2D,PlotOrientation,double,ValueAxis,Stroke,Paint)",2,2,38,328,3
"org.jfree.chart.plot.XYPlot.drawRangeGridlines(Graphics2D,Rectangle2D,List)",2,12,47,406,13
"org.jfree.chart.plot.XYPlot.drawRangeMarkers(Graphics2D,Rectangle2D,int,Layer)",3,3,30,204,6
"org.jfree.chart.plot.XYPlot.drawRangeTickBands(Graphics2D,Rectangle2D,List)",1,5,34,255,5
"org.jfree.chart.plot.XYPlot.drawVerticalLine(Graphics2D,Rectangle2D,double,Stroke,Paint)",1,3,25,175,3
"org.jfree.chart.plot.XYPlot.drawZeroDomainBaseline(Graphics2D,Rectangle2D)",1,3,17,81,3
"org.jfree.chart.plot.XYPlot.drawZeroRangeBaseline(Graphics2D,Rectangle2D)",1,2,14,60,2
"org.jfree.chart.plot.XYPlot.equals(Object)",57,2,214,"3,421",57
"org.jfree.chart.plot.XYPlot.findDomainAxisIndex(ValueAxis)",3,3,8,66,3
"org.jfree.chart.plot.XYPlot.findRangeAxisIndex(ValueAxis)",3,3,8,66,3
"org.jfree.chart.plot.XYPlot.getAnnotations()",1,1,12,11,1
"org.jfree.chart.plot.XYPlot.getAxisOffset()",1,1,10,8,1
"org.jfree.chart.plot.XYPlot.getDataRange(ValueAxis)",1,20,96,900,20
"org.jfree.chart.plot.XYPlot.getDataset()",1,1,11,11,1
"org.jfree.chart.plot.XYPlot.getDataset(int)",1,1,13,22,1
"org.jfree.chart.plot.XYPlot.getDatasetCount()",1,1,8,15,1
"org.jfree.chart.plot.XYPlot.getDatasetIndices(DatasetRenderingOrder)",1,4,20,108,4
"org.jfree.chart.plot.XYPlot.getDatasetRenderingOrder()",1,1,10,8,1
"org.jfree.chart.plot.XYPlot.getDatasetsMappedToDomainAxis(Integer)",1,5,26,185,5
"org.jfree.chart.plot.XYPlot.getDatasetsMappedToRangeAxis(Integer)",1,5,26,185,5
"org.jfree.chart.plot.XYPlot.getDomainAxis()",1,1,13,11,1
"org.jfree.chart.plot.XYPlot.getDomainAxis(int)",1,3,21,88,3
"org.jfree.chart.plot.XYPlot.getDomainAxisCount()",1,1,10,15,1
"org.jfree.chart.plot.XYPlot.getDomainAxisEdge()",1,1,13,15,1
"org.jfree.chart.plot.XYPlot.getDomainAxisEdge(int)",1,1,13,31,1
"org.jfree.chart.plot.XYPlot.getDomainAxisForDataset(int)",1,2,22,118,2
"org.jfree.chart.plot.XYPlot.getDomainAxisIndex(ValueAxis)",1,3,21,76,3
"org.jfree.chart.plot.XYPlot.getDomainAxisLocation()",1,1,10,15,1
"org.jfree.chart.plot.XYPlot.getDomainAxisLocation(int)",1,2,18,59,2
"org.jfree.chart.plot.XYPlot.getDomainCrosshairPaint()",1,1,12,8,1
"org.jfree.chart.plot.XYPlot.getDomainCrosshairStroke()",1,1,12,8,1
"org.jfree.chart.plot.XYPlot.getDomainCrosshairValue()",1,1,10,13,1
"org.jfree.chart.plot.XYPlot.getDomainGridlinePaint()",1,1,11,8,1
"org.jfree.chart.plot.XYPlot.getDomainGridlineStroke()",1,1,11,8,1
"org.jfree.chart.plot.XYPlot.getDomainMarkers(Layer)",1,1,12,11,1
"org.jfree.chart.plot.XYPlot.getDomainMarkers(int,Layer)",1,4,25,146,4
"org.jfree.chart.plot.XYPlot.getDomainMinorGridlinePaint()",1,1,13,8,1
"org.jfree.chart.plot.XYPlot.getDomainMinorGridlineStroke()",1,1,13,8,1
"org.jfree.chart.plot.XYPlot.getDomainTickBandPaint()",1,1,11,8,1
"org.jfree.chart.plot.XYPlot.getDomainZeroBaselinePaint()",1,1,13,8,1
"org.jfree.chart.plot.XYPlot.getDomainZeroBaselineStroke()",1,1,12,8,1
"org.jfree.chart.plot.XYPlot.getFixedDomainAxisSpace()",1,1,10,8,1
"org.jfree.chart.plot.XYPlot.getFixedLegendItems()",1,1,10,8,1
"org.jfree.chart.plot.XYPlot.getFixedRangeAxisSpace()",1,1,10,8,1
"org.jfree.chart.plot.XYPlot.getIndexOf(XYItemRenderer)",3,3,17,66,3
"org.jfree.chart.plot.XYPlot.getLegendItems()",4,8,38,335,10
"org.jfree.chart.plot.XYPlot.getOrientation()",1,1,11,8,1
"org.jfree.chart.plot.XYPlot.getPlotType()",1,1,9,11,1
"org.jfree.chart.plot.XYPlot.getQuadrantOrigin()",1,1,11,8,1
"org.jfree.chart.plot.XYPlot.getQuadrantPaint(int)",2,1,16,80,3
"org.jfree.chart.plot.XYPlot.getRangeAxis()",1,1,13,11,1
"org.jfree.chart.plot.XYPlot.getRangeAxis(int)",1,3,21,88,3
"org.jfree.chart.plot.XYPlot.getRangeAxisCount()",1,1,10,15,1
"org.jfree.chart.plot.XYPlot.getRangeAxisEdge()",1,1,12,15,1
"org.jfree.chart.plot.XYPlot.getRangeAxisEdge(int)",1,1,14,31,1
"org.jfree.chart.plot.XYPlot.getRangeAxisForDataset(int)",1,2,22,118,2
"org.jfree.chart.plot.XYPlot.getRangeAxisIndex(ValueAxis)",1,3,21,76,3
"org.jfree.chart.plot.XYPlot.getRangeAxisLocation()",1,1,10,15,1
"org.jfree.chart.plot.XYPlot.getRangeAxisLocation(int)",1,2,18,59,2
"org.jfree.chart.plot.XYPlot.getRangeCrosshairPaint()",1,1,12,8,1
"org.jfree.chart.plot.XYPlot.getRangeCrosshairStroke()",1,1,12,8,1
"org.jfree.chart.plot.XYPlot.getRangeCrosshairValue()",1,1,10,13,1
"org.jfree.chart.plot.XYPlot.getRangeGridlinePaint()",1,1,11,8,1
"org.jfree.chart.plot.XYPlot.getRangeGridlineStroke()",1,1,11,8,1
"org.jfree.chart.plot.XYPlot.getRangeMarkers(Layer)",1,1,12,11,1
"org.jfree.chart.plot.XYPlot.getRangeMarkers(int,Layer)",1,4,25,146,4
"org.jfree.chart.plot.XYPlot.getRangeMinorGridlinePaint()",1,1,13,8,1
"org.jfree.chart.plot.XYPlot.getRangeMinorGridlineStroke()",1,1,13,8,1
"org.jfree.chart.plot.XYPlot.getRangeTickBandPaint()",1,1,11,8,1
"org.jfree.chart.plot.XYPlot.getRangeZeroBaselinePaint()",1,1,11,8,1
"org.jfree.chart.plot.XYPlot.getRangeZeroBaselineStroke()",1,1,10,8,1
"org.jfree.chart.plot.XYPlot.getRenderer()",1,1,10,8,1
"org.jfree.chart.plot.XYPlot.getRenderer(int)",1,1,12,22,1
"org.jfree.chart.plot.XYPlot.getRendererCount()",1,1,10,15,1
"org.jfree.chart.plot.XYPlot.getRendererForDataset(XYDataset)",2,2,21,88,3
"org.jfree.chart.plot.XYPlot.getRendererIndices(DatasetRenderingOrder)",1,4,13,108,4
"org.jfree.chart.plot.XYPlot.getSeriesCount()",1,2,14,48,2
"org.jfree.chart.plot.XYPlot.getSeriesRenderingOrder()",1,1,10,8,1
"org.jfree.chart.plot.XYPlot.getShadowGenerator()",1,1,10,8,1
"org.jfree.chart.plot.XYPlot.getWeight()",1,1,11,13,1
"org.jfree.chart.plot.XYPlot.handleClick(int,int,PlotRenderingInfo)",1,4,27,178,4
"org.jfree.chart.plot.XYPlot.indexOf(XYDataset)",3,3,16,66,3
"org.jfree.chart.plot.XYPlot.integerise(Rectangle2D)",1,1,14,124,1
"org.jfree.chart.plot.XYPlot.isDomainCrosshairLockedOnData()",1,1,11,13,1
"org.jfree.chart.plot.XYPlot.isDomainCrosshairVisible()",1,1,10,13,1
"org.jfree.chart.plot.XYPlot.isDomainGridlinesVisible()",1,1,11,13,1
"org.jfree.chart.plot.XYPlot.isDomainMinorGridlinesVisible()",1,1,13,13,1
"org.jfree.chart.plot.XYPlot.isDomainPannable()",1,1,12,11,1
"org.jfree.chart.plot.XYPlot.isDomainZeroBaselineVisible()",1,1,13,13,1
"org.jfree.chart.plot.XYPlot.isDomainZoomable()",1,1,12,8,1
"org.jfree.chart.plot.XYPlot.isRangeCrosshairLockedOnData()",1,1,11,13,1
"org.jfree.chart.plot.XYPlot.isRangeCrosshairVisible()",1,1,11,13,1
"org.jfree.chart.plot.XYPlot.isRangeGridlinesVisible()",1,1,11,13,1
"org.jfree.chart.plot.XYPlot.isRangeMinorGridlinesVisible()",1,1,13,13,1
"org.jfree.chart.plot.XYPlot.isRangePannable()",1,1,12,11,1
"org.jfree.chart.plot.XYPlot.isRangeZeroBaselineVisible()",1,1,11,13,1
"org.jfree.chart.plot.XYPlot.isRangeZoomable()",1,1,12,8,1
"org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxes(int,List)",1,1,18,82,1
"org.jfree.chart.plot.XYPlot.mapDatasetToDomainAxis(int,int)",1,1,14,49,1
"org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxes(int,List)",1,1,18,82,1
"org.jfree.chart.plot.XYPlot.mapDatasetToRangeAxis(int,int)",1,1,14,49,1
"org.jfree.chart.plot.XYPlot.panDomainAxes(double,PlotRenderingInfo,Point2D)",4,2,24,142,5
"org.jfree.chart.plot.XYPlot.panRangeAxes(double,PlotRenderingInfo,Point2D)",4,2,24,142,5
"org.jfree.chart.plot.XYPlot.readObject(ObjectInputStream)",1,10,59,843,10
"org.jfree.chart.plot.XYPlot.removeAnnotation(XYAnnotation)",1,1,14,15,1
"org.jfree.chart.plot.XYPlot.removeAnnotation(XYAnnotation,boolean)",1,2,20,82,3
"org.jfree.chart.plot.XYPlot.removeDomainMarker(Marker)",1,1,14,15,1
"org.jfree.chart.plot.XYPlot.removeDomainMarker(Marker,Layer)",1,1,15,19,1
"org.jfree.chart.plot.XYPlot.removeDomainMarker(int,Marker,Layer)",1,1,16,28,1
"org.jfree.chart.plot.XYPlot.removeDomainMarker(int,Marker,Layer,boolean)",2,3,34,174,5
"org.jfree.chart.plot.XYPlot.removeRangeMarker(Marker)",1,1,14,15,1
"org.jfree.chart.plot.XYPlot.removeRangeMarker(Marker,Layer)",1,1,15,19,1
"org.jfree.chart.plot.XYPlot.removeRangeMarker(int,Marker,Layer)",1,1,16,28,1
"org.jfree.chart.plot.XYPlot.removeRangeMarker(int,Marker,Layer,boolean)",2,3,36,209,5
"org.jfree.chart.plot.XYPlot.render(Graphics2D,Rectangle2D,int,PlotRenderingInfo,CrosshairState)",9,12,96,"1,492",16
"org.jfree.chart.plot.XYPlot.rendererChanged(RendererChangeEvent)",1,2,15,24,2
"org.jfree.chart.plot.XYPlot.setAxisOffset(RectangleInsets)",1,1,13,26,1
"org.jfree.chart.plot.XYPlot.setDataset(XYDataset)",1,1,12,15,1
"org.jfree.chart.plot.XYPlot.setDataset(int,XYDataset)",1,3,22,125,3
"org.jfree.chart.plot.XYPlot.setDatasetRenderingOrder(DatasetRenderingOrder)",1,1,15,26,1
"org.jfree.chart.plot.XYPlot.setDomainAxes(ValueAxis[])",1,2,14,62,2
"org.jfree.chart.plot.XYPlot.setDomainAxis(ValueAxis)",1,1,12,15,1
"org.jfree.chart.plot.XYPlot.setDomainAxis(int,ValueAxis)",1,1,13,25,1
"org.jfree.chart.plot.XYPlot.setDomainAxis(int,ValueAxis,boolean)",1,5,27,164,5
"org.jfree.chart.plot.XYPlot.setDomainAxisLocation(AxisLocation)",1,1,12,15,1
"org.jfree.chart.plot.XYPlot.setDomainAxisLocation(AxisLocation,boolean)",1,1,13,19,1
"org.jfree.chart.plot.XYPlot.setDomainAxisLocation(int,AxisLocation)",1,1,14,22,1
"org.jfree.chart.plot.XYPlot.setDomainAxisLocation(int,AxisLocation,boolean)",2,2,25,110,4
"org.jfree.chart.plot.XYPlot.setDomainCrosshairLockedOnData(boolean)",1,2,15,38,2
"org.jfree.chart.plot.XYPlot.setDomainCrosshairPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.XYPlot.setDomainCrosshairStroke(Stroke)",1,1,14,26,1
"org.jfree.chart.plot.XYPlot.setDomainCrosshairValue(double)",1,1,11,15,1
"org.jfree.chart.plot.XYPlot.setDomainCrosshairValue(double,boolean)",1,3,16,43,3
"org.jfree.chart.plot.XYPlot.setDomainCrosshairVisible(boolean)",1,2,15,38,2
"org.jfree.chart.plot.XYPlot.setDomainGridlinePaint(Paint)",1,1,16,26,1
"org.jfree.chart.plot.XYPlot.setDomainGridlineStroke(Stroke)",1,1,16,26,1
"org.jfree.chart.plot.XYPlot.setDomainGridlinesVisible(boolean)",1,2,17,38,2
"org.jfree.chart.plot.XYPlot.setDomainMinorGridlinePaint(Paint)",1,1,18,26,1
"org.jfree.chart.plot.XYPlot.setDomainMinorGridlineStroke(Stroke)",1,1,18,26,1
"org.jfree.chart.plot.XYPlot.setDomainMinorGridlinesVisible(boolean)",1,2,19,38,2
"org.jfree.chart.plot.XYPlot.setDomainPannable(boolean)",1,1,11,15,1
"org.jfree.chart.plot.XYPlot.setDomainTickBandPaint(Paint)",1,1,11,15,1
"org.jfree.chart.plot.XYPlot.setDomainZeroBaselinePaint(Paint)",1,1,15,26,1
"org.jfree.chart.plot.XYPlot.setDomainZeroBaselineStroke(Stroke)",1,1,15,26,1
"org.jfree.chart.plot.XYPlot.setDomainZeroBaselineVisible(boolean)",1,1,15,19,1
"org.jfree.chart.plot.XYPlot.setFixedDomainAxisSpace(AxisSpace)",1,1,11,11,1
"org.jfree.chart.plot.XYPlot.setFixedDomainAxisSpace(AxisSpace,boolean)",1,2,17,28,2
"org.jfree.chart.plot.XYPlot.setFixedLegendItems(LegendItemCollection)",1,1,13,15,1
"org.jfree.chart.plot.XYPlot.setFixedRangeAxisSpace(AxisSpace)",1,1,11,11,1
"org.jfree.chart.plot.XYPlot.setFixedRangeAxisSpace(AxisSpace,boolean)",1,2,17,28,2
"org.jfree.chart.plot.XYPlot.setOrientation(PlotOrientation)",1,2,15,46,2
"org.jfree.chart.plot.XYPlot.setQuadrantOrigin(Point2D)",1,1,13,26,1
"org.jfree.chart.plot.XYPlot.setQuadrantPaint(int,Paint)",2,1,17,91,3
"org.jfree.chart.plot.XYPlot.setRangeAxes(ValueAxis[])",1,2,14,62,2
"org.jfree.chart.plot.XYPlot.setRangeAxis(ValueAxis)",1,4,25,137,4
"org.jfree.chart.plot.XYPlot.setRangeAxis(int,ValueAxis)",1,1,12,22,1
"org.jfree.chart.plot.XYPlot.setRangeAxis(int,ValueAxis,boolean)",1,5,27,164,5
"org.jfree.chart.plot.XYPlot.setRangeAxisLocation(AxisLocation)",1,1,12,15,1
"org.jfree.chart.plot.XYPlot.setRangeAxisLocation(AxisLocation,boolean)",1,1,13,19,1
"org.jfree.chart.plot.XYPlot.setRangeAxisLocation(int,AxisLocation)",1,1,13,22,1
"org.jfree.chart.plot.XYPlot.setRangeAxisLocation(int,AxisLocation,boolean)",2,2,25,110,4
"org.jfree.chart.plot.XYPlot.setRangeCrosshairLockedOnData(boolean)",1,2,15,38,2
"org.jfree.chart.plot.XYPlot.setRangeCrosshairPaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.XYPlot.setRangeCrosshairStroke(Stroke)",1,1,14,26,1
"org.jfree.chart.plot.XYPlot.setRangeCrosshairValue(double)",1,1,13,15,1
"org.jfree.chart.plot.XYPlot.setRangeCrosshairValue(double,boolean)",1,3,16,43,3
"org.jfree.chart.plot.XYPlot.setRangeCrosshairVisible(boolean)",1,2,15,38,2
"org.jfree.chart.plot.XYPlot.setRangeGridlinePaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.XYPlot.setRangeGridlineStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.plot.XYPlot.setRangeGridlinesVisible(boolean)",1,2,17,38,2
"org.jfree.chart.plot.XYPlot.setRangeMinorGridlinePaint(Paint)",1,1,15,26,1
"org.jfree.chart.plot.XYPlot.setRangeMinorGridlineStroke(Stroke)",1,1,15,26,1
"org.jfree.chart.plot.XYPlot.setRangeMinorGridlinesVisible(boolean)",1,2,19,38,2
"org.jfree.chart.plot.XYPlot.setRangePannable(boolean)",1,1,11,15,1
"org.jfree.chart.plot.XYPlot.setRangeTickBandPaint(Paint)",1,1,11,15,1
"org.jfree.chart.plot.XYPlot.setRangeZeroBaselinePaint(Paint)",1,1,13,26,1
"org.jfree.chart.plot.XYPlot.setRangeZeroBaselineStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.plot.XYPlot.setRangeZeroBaselineVisible(boolean)",1,1,13,19,1
"org.jfree.chart.plot.XYPlot.setRenderer(XYItemRenderer)",1,1,12,11,1
"org.jfree.chart.plot.XYPlot.setRenderer(int,XYItemRenderer)",1,1,14,22,1
"org.jfree.chart.plot.XYPlot.setRenderer(int,XYItemRenderer,boolean)",1,4,29,149,4
"org.jfree.chart.plot.XYPlot.setRenderers(XYItemRenderer[])",1,2,12,62,2
"org.jfree.chart.plot.XYPlot.setSeriesRenderingOrder(SeriesRenderingOrder)",1,1,15,26,1
"org.jfree.chart.plot.XYPlot.setShadowGenerator(ShadowGenerator)",1,1,12,15,1
"org.jfree.chart.plot.XYPlot.setWeight(int)",1,1,12,19,1
"org.jfree.chart.plot.XYPlot.writeObject(ObjectOutputStream)",1,2,32,485,2
"org.jfree.chart.plot.XYPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D)",1,1,15,26,1
"org.jfree.chart.plot.XYPlot.zoomDomainAxes(double,PlotRenderingInfo,Point2D,boolean)",3,4,34,208,5
"org.jfree.chart.plot.XYPlot.zoomDomainAxes(double,double,PlotRenderingInfo,Point2D)",1,3,23,68,3
"org.jfree.chart.plot.XYPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D)",1,1,15,31,1
"org.jfree.chart.plot.XYPlot.zoomRangeAxes(double,PlotRenderingInfo,Point2D,boolean)",3,4,35,208,5
"org.jfree.chart.plot.XYPlot.zoomRangeAxes(double,double,PlotRenderingInfo,Point2D)",1,3,19,68,3
"org.jfree.chart.plot.XYPlotTest.createDataset1()",1,1,26,591,1
"org.jfree.chart.plot.XYPlotTest.createDataset2()",1,1,11,18,1
"org.jfree.chart.plot.XYPlotTest.test1654215()",1,2,22,196,2
"org.jfree.chart.plot.XYPlotTest.testAddDomainMarker()",1,1,15,105,1
"org.jfree.chart.plot.XYPlotTest.testAddRangeMarker()",1,1,15,105,1
"org.jfree.chart.plot.XYPlotTest.testAxisIndices()",1,1,16,197,1
"org.jfree.chart.plot.XYPlotTest.testAxisLocationIndices()",1,1,18,197,1
"org.jfree.chart.plot.XYPlotTest.testBug2817504()",1,1,17,126,1
"org.jfree.chart.plot.XYPlotTest.testCloneIndependence()",1,1,47,864,1
"org.jfree.chart.plot.XYPlotTest.testCloning()",1,1,11,71,1
"org.jfree.chart.plot.XYPlotTest.testCloning2()",1,1,18,224,1
"org.jfree.chart.plot.XYPlotTest.testCloning3()",1,1,18,164,1
"org.jfree.chart.plot.XYPlotTest.testCloning4()",1,1,17,140,1
"org.jfree.chart.plot.XYPlotTest.testCloning_QuadrantOrigin()",1,1,14,126,1
"org.jfree.chart.plot.XYPlotTest.testCloning_QuadrantPaint()",1,1,18,205,1
"org.jfree.chart.plot.XYPlotTest.testDatasetIndices()",1,1,21,205,1
"org.jfree.chart.plot.XYPlotTest.testDomainMarkerIndices()",1,1,21,247,1
"org.jfree.chart.plot.XYPlotTest.testDrawRangeGridlines()",1,2,22,189,2
"org.jfree.chart.plot.XYPlotTest.testDrawSeriesWithZeroItems()",1,2,22,244,2
"org.jfree.chart.plot.XYPlotTest.testEquals()",1,1,273,"6,085",1
"org.jfree.chart.plot.XYPlotTest.testEquals_ObjectList()",1,1,13,82,1
"org.jfree.chart.plot.XYPlotTest.testEquals_ObjectList2()",1,1,13,71,1
"org.jfree.chart.plot.XYPlotTest.testEquals_ObjectList3()",1,1,13,82,1
"org.jfree.chart.plot.XYPlotTest.testEquals_ObjectList4()",1,1,13,71,1
"org.jfree.chart.plot.XYPlotTest.testEquals_ObjectList5()",1,1,13,66,1
"org.jfree.chart.plot.XYPlotTest.testGetDataRange()",1,1,24,370,1
"org.jfree.chart.plot.XYPlotTest.testGetDataRangeWithMultipleDatasets()",1,1,33,590,1
"org.jfree.chart.plot.XYPlotTest.testGetDatasetCount()",1,1,7,19,1
"org.jfree.chart.plot.XYPlotTest.testGetDomainAxisForDataset()",1,1,36,401,2
"org.jfree.chart.plot.XYPlotTest.testGetLegendItems()",1,1,17,100,1
"org.jfree.chart.plot.XYPlotTest.testGetRangeAxisForDataset()",1,1,36,401,2
"org.jfree.chart.plot.XYPlotTest.testGetRendererForDataset()",1,1,24,225,1
"org.jfree.chart.plot.XYPlotTest.testGetRendererForDataset2()",1,1,19,157,1
"org.jfree.chart.plot.XYPlotTest.testMapDatasetToDomainAxis()",1,1,18,187,1
"org.jfree.chart.plot.XYPlotTest.testMapDatasetToRangeAxis()",1,1,18,187,1
"org.jfree.chart.plot.XYPlotTest.testRangeMarkerIndices()",1,1,20,247,1
"org.jfree.chart.plot.XYPlotTest.testRemoveAnnotation()",1,1,22,215,1
"org.jfree.chart.plot.XYPlotTest.testRemoveDomainMarker()",1,1,9,22,1
"org.jfree.chart.plot.XYPlotTest.testRemoveRangeMarker()",1,1,9,22,1
"org.jfree.chart.plot.XYPlotTest.testRendererIndices()",1,1,15,159,1
"org.jfree.chart.plot.XYPlotTest.testSerialization1()",1,1,13,66,1
"org.jfree.chart.plot.XYPlotTest.testSerialization2()",1,1,14,74,1
"org.jfree.chart.plot.XYPlotTest.testSerialization3()",1,2,24,89,2
"org.jfree.chart.plot.XYPlotTest.testSerialization4()",1,2,23,222,2
"org.jfree.chart.plot.XYPlotTest.testSerialization5()",1,1,43,514,1
"org.jfree.chart.plot.XYPlotTest.testSetNullRenderer()",1,1,17,84,2
"org.jfree.chart.plot.XYPlotTest.testSetRenderer()",1,1,16,78,1
"org.jfree.chart.plot.dial.AbstractDialLayer.AbstractDialLayer()",1,1,7,18,1
"org.jfree.chart.plot.dial.AbstractDialLayer.addChangeListener(DialLayerChangeListener)",1,1,11,19,1
"org.jfree.chart.plot.dial.AbstractDialLayer.clone()",1,1,15,26,1
"org.jfree.chart.plot.dial.AbstractDialLayer.equals(Object)",3,1,18,79,3
"org.jfree.chart.plot.dial.AbstractDialLayer.hasListener(EventListener)",1,1,14,33,1
"org.jfree.chart.plot.dial.AbstractDialLayer.hashCode()",1,1,11,33,1
"org.jfree.chart.plot.dial.AbstractDialLayer.isVisible()",1,1,12,13,1
"org.jfree.chart.plot.dial.AbstractDialLayer.notifyListeners(DialLayerChangeEvent)",1,3,15,118,3
"org.jfree.chart.plot.dial.AbstractDialLayer.readObject(ObjectInputStream)",1,1,13,24,1
"org.jfree.chart.plot.dial.AbstractDialLayer.removeChangeListener(DialLayerChangeListener)",1,1,11,19,1
"org.jfree.chart.plot.dial.AbstractDialLayer.setVisible(boolean)",1,1,13,26,1
"org.jfree.chart.plot.dial.AbstractDialLayerTest.testCloning()",1,1,17,128,1
"org.jfree.chart.plot.dial.AbstractDialLayerTest.testEquals()",1,1,14,73,1
"org.jfree.chart.plot.dial.AbstractDialLayerTest.testSerialization()",1,1,15,71,1
"org.jfree.chart.plot.dial.ArcDialFrame.ArcDialFrame()",1,1,7,11,1
"org.jfree.chart.plot.dial.ArcDialFrame.ArcDialFrame(double,double)",1,1,16,118,1
"org.jfree.chart.plot.dial.ArcDialFrame.clone()",1,1,12,11,1
"org.jfree.chart.plot.dial.ArcDialFrame.draw(Graphics2D,DialPlot,Rectangle2D,Rectangle2D)",1,1,23,142,1
"org.jfree.chart.plot.dial.ArcDialFrame.equals(Object)",10,1,39,386,10
"org.jfree.chart.plot.dial.ArcDialFrame.getBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.ArcDialFrame.getExtent()",1,1,10,13,1
"org.jfree.chart.plot.dial.ArcDialFrame.getForegroundPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.ArcDialFrame.getInnerRadius()",1,1,10,13,1
"org.jfree.chart.plot.dial.ArcDialFrame.getOuterRadius()",1,1,10,13,1
"org.jfree.chart.plot.dial.ArcDialFrame.getOuterWindow(Rectangle2D)",1,1,29,386,1
"org.jfree.chart.plot.dial.ArcDialFrame.getStartAngle()",1,1,10,13,1
"org.jfree.chart.plot.dial.ArcDialFrame.getStroke()",1,1,10,8,1
"org.jfree.chart.plot.dial.ArcDialFrame.getWindow(Rectangle2D)",1,1,26,256,1
"org.jfree.chart.plot.dial.ArcDialFrame.hashCode()",1,1,23,412,1
"org.jfree.chart.plot.dial.ArcDialFrame.isClippedToWindow()",1,1,10,8,1
"org.jfree.chart.plot.dial.ArcDialFrame.readObject(ObjectInputStream)",1,1,15,58,1
"org.jfree.chart.plot.dial.ArcDialFrame.setBackgroundPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.ArcDialFrame.setExtent(double)",1,1,12,26,1
"org.jfree.chart.plot.dial.ArcDialFrame.setForegroundPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.ArcDialFrame.setInnerRadius(double)",2,1,15,59,2
"org.jfree.chart.plot.dial.ArcDialFrame.setOuterRadius(double)",2,1,15,59,2
"org.jfree.chart.plot.dial.ArcDialFrame.setStartAngle(double)",1,1,12,26,1
"org.jfree.chart.plot.dial.ArcDialFrame.setStroke(Stroke)",1,1,13,34,1
"org.jfree.chart.plot.dial.ArcDialFrame.writeObject(ObjectOutputStream)",1,1,13,58,1
"org.jfree.chart.plot.dial.ArcDialFrameTest.testCloning()",1,1,16,128,1
"org.jfree.chart.plot.dial.ArcDialFrameTest.testEquals()",1,1,53,701,1
"org.jfree.chart.plot.dial.ArcDialFrameTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.plot.dial.ArcDialFrameTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.plot.dial.DialBackground.DialBackground()",1,1,7,8,1
"org.jfree.chart.plot.dial.DialBackground.DialBackground(Paint)",1,1,13,30,1
"org.jfree.chart.plot.dial.DialBackground.clone()",1,1,12,11,1
"org.jfree.chart.plot.dial.DialBackground.draw(Graphics2D,DialPlot,Rectangle2D,Rectangle2D)",1,2,21,70,2
"org.jfree.chart.plot.dial.DialBackground.equals(Object)",5,1,25,159,5
"org.jfree.chart.plot.dial.DialBackground.getGradientPaintTransformer()",1,1,11,8,1
"org.jfree.chart.plot.dial.DialBackground.getPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialBackground.hashCode()",1,1,12,81,1
"org.jfree.chart.plot.dial.DialBackground.isClippedToWindow()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialBackground.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.plot.dial.DialBackground.setGradientPaintTransformer(GradientPaintTransformer)",1,1,14,34,1
"org.jfree.chart.plot.dial.DialBackground.setPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialBackground.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.plot.dial.DialBackgroundTest.testCloning()",1,1,27,297,1
"org.jfree.chart.plot.dial.DialBackgroundTest.testEquals()",1,1,28,271,1
"org.jfree.chart.plot.dial.DialBackgroundTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.plot.dial.DialBackgroundTest.testSerialization()",1,1,18,116,1
"org.jfree.chart.plot.dial.DialCap.DialCap()",1,1,10,48,1
"org.jfree.chart.plot.dial.DialCap.clone()",1,1,12,11,1
"org.jfree.chart.plot.dial.DialCap.draw(Graphics2D,DialPlot,Rectangle2D,Rectangle2D)",1,1,23,153,1
"org.jfree.chart.plot.dial.DialCap.equals(Object)",7,1,30,250,7
"org.jfree.chart.plot.dial.DialCap.getFillPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialCap.getOutlinePaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialCap.getOutlineStroke()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialCap.getRadius()",1,1,11,13,1
"org.jfree.chart.plot.dial.DialCap.hashCode()",1,1,14,114,1
"org.jfree.chart.plot.dial.DialCap.isClippedToWindow()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialCap.readObject(ObjectInputStream)",1,1,15,58,1
"org.jfree.chart.plot.dial.DialCap.setFillPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialCap.setOutlinePaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialCap.setOutlineStroke(Stroke)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialCap.setRadius(double)",2,1,16,59,2
"org.jfree.chart.plot.dial.DialCap.writeObject(ObjectOutputStream)",1,1,13,58,1
"org.jfree.chart.plot.dial.DialCapTest.testCloning()",1,1,28,347,1
"org.jfree.chart.plot.dial.DialCapTest.testEquals()",1,1,37,458,1
"org.jfree.chart.plot.dial.DialCapTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.plot.dial.DialCapTest.testSerialization()",1,1,19,158,1
"org.jfree.chart.plot.dial.DialLayerChangeEvent.DialLayerChangeEvent(DialLayer)",1,1,9,18,1
"org.jfree.chart.plot.dial.DialLayerChangeEvent.getDialLayer()",1,1,8,8,1
"org.jfree.chart.plot.dial.DialPlot.DialPlot()",1,1,6,8,1
"org.jfree.chart.plot.dial.DialPlot.DialPlot(ValueDataset)",1,2,22,191,2
"org.jfree.chart.plot.dial.DialPlot.addLayer(DialLayer)",1,1,12,43,1
"org.jfree.chart.plot.dial.DialPlot.addPointer(DialPointer)",1,1,12,43,1
"org.jfree.chart.plot.dial.DialPlot.addScale(int,DialScale)",1,2,18,125,2
"org.jfree.chart.plot.dial.DialPlot.dialLayerChanged(DialLayerChangeEvent)",1,1,10,4,1
"org.jfree.chart.plot.dial.DialPlot.draw(Graphics2D,Rectangle2D,Point2D,PlotState,PlotRenderingInfo)",1,14,79,905,14
"org.jfree.chart.plot.dial.DialPlot.equals(Object)",12,1,47,496,12
"org.jfree.chart.plot.dial.DialPlot.getBackground()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialPlot.getCap()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialPlot.getDataset()",1,1,8,8,1
"org.jfree.chart.plot.dial.DialPlot.getDataset(int)",1,2,14,57,2
"org.jfree.chart.plot.dial.DialPlot.getDatasetCount()",1,1,8,15,1
"org.jfree.chart.plot.dial.DialPlot.getDialFrame()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialPlot.getLayerIndex(DialLayer)",1,1,11,31,1
"org.jfree.chart.plot.dial.DialPlot.getPlotType()",1,1,9,4,1
"org.jfree.chart.plot.dial.DialPlot.getPointerForDataset(int)",3,2,19,81,3
"org.jfree.chart.plot.dial.DialPlot.getPointerIndex(DialPointer)",1,1,11,31,1
"org.jfree.chart.plot.dial.DialPlot.getScale(int)",1,2,14,57,2
"org.jfree.chart.plot.dial.DialPlot.getScaleForDataset(int)",1,2,15,80,2
"org.jfree.chart.plot.dial.DialPlot.getValue(int)",1,3,18,85,3
"org.jfree.chart.plot.dial.DialPlot.getViewHeight()",1,1,11,20,1
"org.jfree.chart.plot.dial.DialPlot.getViewWidth()",1,1,11,20,1
"org.jfree.chart.plot.dial.DialPlot.getViewX()",1,1,11,20,1
"org.jfree.chart.plot.dial.DialPlot.getViewY()",1,1,11,20,1
"org.jfree.chart.plot.dial.DialPlot.hashCode()",1,1,21,412,1
"org.jfree.chart.plot.dial.DialPlot.mapDatasetToScale(int,int)",1,1,10,36,1
"org.jfree.chart.plot.dial.DialPlot.readObject(ObjectInputStream)",1,1,12,11,1
"org.jfree.chart.plot.dial.DialPlot.rectangleByRadius(Rectangle2D,double,double)",1,1,18,164,1
"org.jfree.chart.plot.dial.DialPlot.removeLayer(DialLayer)",1,1,10,11,1
"org.jfree.chart.plot.dial.DialPlot.removeLayer(int)",1,2,14,72,2
"org.jfree.chart.plot.dial.DialPlot.removePointer(DialPointer)",1,1,10,11,1
"org.jfree.chart.plot.dial.DialPlot.removePointer(int)",1,2,14,72,2
"org.jfree.chart.plot.dial.DialPlot.setBackground(DialLayer)",1,3,18,76,3
"org.jfree.chart.plot.dial.DialPlot.setCap(DialLayer)",1,3,18,76,3
"org.jfree.chart.plot.dial.DialPlot.setDataset(ValueDataset)",1,1,10,11,1
"org.jfree.chart.plot.dial.DialPlot.setDataset(int,ValueDataset)",1,3,19,129,3
"org.jfree.chart.plot.dial.DialPlot.setDialFrame(DialFrame)",1,1,15,53,1
"org.jfree.chart.plot.dial.DialPlot.setView(double,double,double,double)",1,1,21,70,1
"org.jfree.chart.plot.dial.DialPlot.viewToFrame(Rectangle2D)",1,1,14,153,1
"org.jfree.chart.plot.dial.DialPlot.writeObject(ObjectOutputStream)",1,1,10,11,1
"org.jfree.chart.plot.dial.DialPlotTest.plotChanged(PlotChangeEvent)",1,1,9,11,1
"org.jfree.chart.plot.dial.DialPlotTest.testBackgroundListener()",1,1,20,163,1
"org.jfree.chart.plot.dial.DialPlotTest.testCapListener()",1,1,20,155,1
"org.jfree.chart.plot.dial.DialPlotTest.testCloning()",1,1,11,71,1
"org.jfree.chart.plot.dial.DialPlotTest.testEquals()",1,1,52,703,1
"org.jfree.chart.plot.dial.DialPlotTest.testFrameListener()",1,1,20,155,1
"org.jfree.chart.plot.dial.DialPlotTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.plot.dial.DialPlotTest.testLayerListener()",1,1,24,216,1
"org.jfree.chart.plot.dial.DialPlotTest.testScaleListener()",1,1,20,163,1
"org.jfree.chart.plot.dial.DialPlotTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.plot.dial.DialPointer.DialPointer()",1,1,6,8,1
"org.jfree.chart.plot.dial.DialPointer.DialPointer(int)",1,1,9,22,1
"org.jfree.chart.plot.dial.DialPointer.Pin.Pin()",1,1,6,8,1
"org.jfree.chart.plot.dial.DialPointer.Pin.Pin(int)",1,1,11,51,1
"org.jfree.chart.plot.dial.DialPointer.Pin.draw(Graphics2D,DialPlot,Rectangle2D,Rectangle2D)",1,1,24,242,1
"org.jfree.chart.plot.dial.DialPointer.Pin.equals(Object)",5,1,24,159,5
"org.jfree.chart.plot.dial.DialPointer.Pin.getPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialPointer.Pin.getStroke()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialPointer.Pin.hashCode()",1,1,12,58,1
"org.jfree.chart.plot.dial.DialPointer.Pin.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.plot.dial.DialPointer.Pin.setPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialPointer.Pin.setStroke(Stroke)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialPointer.Pin.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.Pointer()",1,1,6,8,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.Pointer(int)",1,1,11,50,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.draw(Graphics2D,DialPlot,Rectangle2D,Rectangle2D)",1,1,52,886,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.equals(Object)",6,1,27,200,6
"org.jfree.chart.plot.dial.DialPointer.Pointer.getFillPaint()",1,1,12,8,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.getOutlinePaint()",1,1,12,8,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.getWidthRadius()",1,1,10,13,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.hashCode()",1,1,13,78,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.readObject(ObjectInputStream)",1,1,14,41,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.setFillPaint(Paint)",1,1,15,34,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.setOutlinePaint(Paint)",1,1,15,34,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.setWidthRadius(double)",1,1,12,26,1
"org.jfree.chart.plot.dial.DialPointer.Pointer.writeObject(ObjectOutputStream)",1,1,12,41,1
"org.jfree.chart.plot.dial.DialPointer.clone()",1,1,12,11,1
"org.jfree.chart.plot.dial.DialPointer.equals(Object)",5,1,24,148,5
"org.jfree.chart.plot.dial.DialPointer.getDatasetIndex()",1,1,10,11,1
"org.jfree.chart.plot.dial.DialPointer.getRadius()",1,1,11,13,1
"org.jfree.chart.plot.dial.DialPointer.hashCode()",1,1,11,33,1
"org.jfree.chart.plot.dial.DialPointer.isClippedToWindow()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialPointer.setDatasetIndex(int)",1,1,12,26,1
"org.jfree.chart.plot.dial.DialPointer.setRadius(double)",1,1,12,26,1
"org.jfree.chart.plot.dial.DialPointerTest.testCloning()",1,1,16,134,1
"org.jfree.chart.plot.dial.DialPointerTest.testEquals()",1,1,19,136,1
"org.jfree.chart.plot.dial.DialPointerTest.testEqualsPin()",1,1,18,140,1
"org.jfree.chart.plot.dial.DialPointerTest.testEqualsPointer()",1,1,17,125,1
"org.jfree.chart.plot.dial.DialPointerTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.plot.dial.DialPointerTest.testSerialization()",1,1,10,26,1
"org.jfree.chart.plot.dial.DialPointerTest.testSerialization2()",1,1,9,26,1
"org.jfree.chart.plot.dial.DialTextAnnotation.DialTextAnnotation(String)",1,1,14,112,1
"org.jfree.chart.plot.dial.DialTextAnnotation.clone()",1,1,12,11,1
"org.jfree.chart.plot.dial.DialTextAnnotation.draw(Graphics2D,DialPlot,Rectangle2D,Rectangle2D)",1,1,23,167,1
"org.jfree.chart.plot.dial.DialTextAnnotation.equals(Object)",9,1,36,351,9
"org.jfree.chart.plot.dial.DialTextAnnotation.getAnchor()",1,1,11,8,1
"org.jfree.chart.plot.dial.DialTextAnnotation.getAngle()",1,1,11,13,1
"org.jfree.chart.plot.dial.DialTextAnnotation.getFont()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialTextAnnotation.getLabel()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialTextAnnotation.getPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialTextAnnotation.getRadius()",1,1,12,13,1
"org.jfree.chart.plot.dial.DialTextAnnotation.hashCode()",1,1,18,315,1
"org.jfree.chart.plot.dial.DialTextAnnotation.isClippedToWindow()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialTextAnnotation.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.plot.dial.DialTextAnnotation.setAnchor(TextAnchor)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialTextAnnotation.setAngle(double)",1,1,13,30,1
"org.jfree.chart.plot.dial.DialTextAnnotation.setFont(Font)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialTextAnnotation.setLabel(String)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialTextAnnotation.setPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialTextAnnotation.setRadius(double)",2,1,18,62,2
"org.jfree.chart.plot.dial.DialTextAnnotation.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.plot.dial.DialTextAnnotationTest.testCloning()",1,1,17,134,1
"org.jfree.chart.plot.dial.DialTextAnnotationTest.testEquals()",1,1,40,449,1
"org.jfree.chart.plot.dial.DialTextAnnotationTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.plot.dial.DialTextAnnotationTest.testSerialization()",1,1,16,105,1
"org.jfree.chart.plot.dial.DialValueIndicator.DialValueIndicator()",1,1,6,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.DialValueIndicator(int)",1,1,22,302,1
"org.jfree.chart.plot.dial.DialValueIndicator.clone()",1,1,12,11,1
"org.jfree.chart.plot.dial.DialValueIndicator.draw(Graphics2D,DialPlot,Rectangle2D,Rectangle2D)",1,2,62,950,2
"org.jfree.chart.plot.dial.DialValueIndicator.equals(Object)",17,1,61,801,17
"org.jfree.chart.plot.dial.DialValueIndicator.fixToRange(double,double,double)",4,1,24,103,4
"org.jfree.chart.plot.dial.DialValueIndicator.getAngle()",1,1,11,13,1
"org.jfree.chart.plot.dial.DialValueIndicator.getBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.getDatasetIndex()",1,1,11,13,1
"org.jfree.chart.plot.dial.DialValueIndicator.getFont()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.getFrameAnchor()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.getInsets()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.getMaxTemplateValue()",1,1,13,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.getNumberFormat()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.getOutlinePaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.getOutlineStroke()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.getPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.getRadius()",1,1,10,13,1
"org.jfree.chart.plot.dial.DialValueIndicator.getTemplateValue()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.getTextAnchor()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.getValueAnchor()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.hashCode()",1,1,16,148,1
"org.jfree.chart.plot.dial.DialValueIndicator.isClippedToWindow()",1,1,10,8,1
"org.jfree.chart.plot.dial.DialValueIndicator.readObject(ObjectInputStream)",1,1,16,75,1
"org.jfree.chart.plot.dial.DialValueIndicator.setAngle(double)",1,1,12,26,1
"org.jfree.chart.plot.dial.DialValueIndicator.setBackgroundPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialValueIndicator.setDatasetIndex(int)",1,1,12,26,1
"org.jfree.chart.plot.dial.DialValueIndicator.setFont(Font)",1,1,11,34,1
"org.jfree.chart.plot.dial.DialValueIndicator.setFrameAnchor(RectangleAnchor)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialValueIndicator.setInsets(RectangleInsets)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialValueIndicator.setMaxTemplateValue(Number)",1,1,14,22,1
"org.jfree.chart.plot.dial.DialValueIndicator.setNumberFormat(NumberFormat)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialValueIndicator.setOutlinePaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialValueIndicator.setOutlineStroke(Stroke)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialValueIndicator.setPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialValueIndicator.setRadius(double)",1,1,12,26,1
"org.jfree.chart.plot.dial.DialValueIndicator.setTemplateValue(Number)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialValueIndicator.setTextAnchor(TextAnchor)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialValueIndicator.setValueAnchor(RectangleAnchor)",1,1,13,34,1
"org.jfree.chart.plot.dial.DialValueIndicator.writeObject(ObjectOutputStream)",1,1,14,75,1
"org.jfree.chart.plot.dial.DialValueIndicatorTest.testCloning()",1,1,17,134,1
"org.jfree.chart.plot.dial.DialValueIndicatorTest.testEquals()",1,1,85,"1,427",1
"org.jfree.chart.plot.dial.DialValueIndicatorTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.plot.dial.DialValueIndicatorTest.testSerialization()",1,1,10,26,1
"org.jfree.chart.plot.dial.MyDialLayerChangeListener.MyDialLayerChangeListener()",1,1,5,0,1
"org.jfree.chart.plot.dial.MyDialLayerChangeListener.dialLayerChanged(DialLayerChangeEvent)",1,1,8,2,1
"org.jfree.chart.plot.dial.StandardDialFrame.StandardDialFrame()",1,1,9,48,1
"org.jfree.chart.plot.dial.StandardDialFrame.clone()",1,1,12,11,1
"org.jfree.chart.plot.dial.StandardDialFrame.draw(Graphics2D,DialPlot,Rectangle2D,Rectangle2D)",1,1,27,245,1
"org.jfree.chart.plot.dial.StandardDialFrame.equals(Object)",7,1,30,250,7
"org.jfree.chart.plot.dial.StandardDialFrame.getBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialFrame.getForegroundPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialFrame.getRadius()",1,1,10,13,1
"org.jfree.chart.plot.dial.StandardDialFrame.getStroke()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialFrame.getWindow(Rectangle2D)",1,1,15,60,1
"org.jfree.chart.plot.dial.StandardDialFrame.hashCode()",1,1,17,197,1
"org.jfree.chart.plot.dial.StandardDialFrame.isClippedToWindow()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialFrame.readObject(ObjectInputStream)",1,1,15,58,1
"org.jfree.chart.plot.dial.StandardDialFrame.setBackgroundPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.StandardDialFrame.setForegroundPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.StandardDialFrame.setRadius(double)",2,1,16,59,2
"org.jfree.chart.plot.dial.StandardDialFrame.setStroke(Stroke)",1,1,13,34,1
"org.jfree.chart.plot.dial.StandardDialFrame.writeObject(ObjectOutputStream)",1,1,13,58,1
"org.jfree.chart.plot.dial.StandardDialFrameTest.testCloning()",1,1,16,128,1
"org.jfree.chart.plot.dial.StandardDialFrameTest.testEquals()",1,1,38,476,1
"org.jfree.chart.plot.dial.StandardDialFrameTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.plot.dial.StandardDialFrameTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.plot.dial.StandardDialRange.StandardDialRange()",1,1,6,15,1
"org.jfree.chart.plot.dial.StandardDialRange.StandardDialRange(double,double,Paint)",1,1,16,98,1
"org.jfree.chart.plot.dial.StandardDialRange.clone()",1,1,12,11,1
"org.jfree.chart.plot.dial.StandardDialRange.draw(Graphics2D,DialPlot,Rectangle2D,Rectangle2D)",2,1,31,341,2
"org.jfree.chart.plot.dial.StandardDialRange.equals(Object)",9,1,36,326,9
"org.jfree.chart.plot.dial.StandardDialRange.getInnerRadius()",1,1,10,13,1
"org.jfree.chart.plot.dial.StandardDialRange.getLowerBound()",1,1,10,13,1
"org.jfree.chart.plot.dial.StandardDialRange.getOuterRadius()",1,1,10,13,1
"org.jfree.chart.plot.dial.StandardDialRange.getPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialRange.getScaleIndex()",1,1,10,13,1
"org.jfree.chart.plot.dial.StandardDialRange.getUpperBound()",1,1,10,13,1
"org.jfree.chart.plot.dial.StandardDialRange.hashCode()",1,1,19,325,1
"org.jfree.chart.plot.dial.StandardDialRange.isClippedToWindow()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialRange.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.plot.dial.StandardDialRange.setBounds(double,double)",2,1,16,76,2
"org.jfree.chart.plot.dial.StandardDialRange.setInnerRadius(double)",1,1,12,26,1
"org.jfree.chart.plot.dial.StandardDialRange.setLowerBound(double)",2,1,16,62,2
"org.jfree.chart.plot.dial.StandardDialRange.setOuterRadius(double)",1,1,12,26,1
"org.jfree.chart.plot.dial.StandardDialRange.setPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.StandardDialRange.setScaleIndex(int)",1,1,12,26,1
"org.jfree.chart.plot.dial.StandardDialRange.setUpperBound(double)",2,1,16,62,2
"org.jfree.chart.plot.dial.StandardDialRange.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.plot.dial.StandardDialRangeTest.testCloning()",1,1,16,128,1
"org.jfree.chart.plot.dial.StandardDialRangeTest.testEquals()",1,1,31,333,1
"org.jfree.chart.plot.dial.StandardDialRangeTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.plot.dial.StandardDialRangeTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.plot.dial.StandardDialScale.StandardDialScale()",1,1,6,33,1
"org.jfree.chart.plot.dial.StandardDialScale.StandardDialScale(double,double,double,double,double,int)",2,1,40,430,2
"org.jfree.chart.plot.dial.StandardDialScale.angleToValue(double)",1,1,15,83,1
"org.jfree.chart.plot.dial.StandardDialScale.clone()",1,1,11,11,1
"org.jfree.chart.plot.dial.StandardDialScale.draw(Graphics2D,DialPlot,Rectangle2D,Rectangle2D)",5,7,80,"1,519",11
"org.jfree.chart.plot.dial.StandardDialScale.equals(Object)",20,1,70,917,20
"org.jfree.chart.plot.dial.StandardDialScale.getExtent()",1,1,10,13,1
"org.jfree.chart.plot.dial.StandardDialScale.getFirstTickLabelVisible()",1,1,11,13,1
"org.jfree.chart.plot.dial.StandardDialScale.getLowerBound()",1,1,12,13,1
"org.jfree.chart.plot.dial.StandardDialScale.getMajorTickIncrement()",1,1,10,13,1
"org.jfree.chart.plot.dial.StandardDialScale.getMajorTickLength()",1,1,12,13,1
"org.jfree.chart.plot.dial.StandardDialScale.getMajorTickPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialScale.getMajorTickStroke()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialScale.getMinorTickCount()",1,1,10,13,1
"org.jfree.chart.plot.dial.StandardDialScale.getMinorTickLength()",1,1,12,13,1
"org.jfree.chart.plot.dial.StandardDialScale.getMinorTickPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialScale.getMinorTickStroke()",1,1,12,8,1
"org.jfree.chart.plot.dial.StandardDialScale.getStartAngle()",1,1,11,13,1
"org.jfree.chart.plot.dial.StandardDialScale.getTickLabelFont()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialScale.getTickLabelFormatter()",1,1,11,8,1
"org.jfree.chart.plot.dial.StandardDialScale.getTickLabelOffset()",1,1,10,13,1
"org.jfree.chart.plot.dial.StandardDialScale.getTickLabelPaint()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialScale.getTickLabelsVisible()",1,1,11,13,1
"org.jfree.chart.plot.dial.StandardDialScale.getTickRadius()",1,1,11,13,1
"org.jfree.chart.plot.dial.StandardDialScale.getUpperBound()",1,1,12,13,1
"org.jfree.chart.plot.dial.StandardDialScale.hashCode()",1,1,38,350,1
"org.jfree.chart.plot.dial.StandardDialScale.isClippedToWindow()",1,1,10,8,1
"org.jfree.chart.plot.dial.StandardDialScale.readObject(ObjectInputStream)",1,1,17,92,1
"org.jfree.chart.plot.dial.StandardDialScale.setExtent(double)",1,1,12,26,1
"org.jfree.chart.plot.dial.StandardDialScale.setFirstTickLabelVisible(boolean)",1,1,13,26,1
"org.jfree.chart.plot.dial.StandardDialScale.setLowerBound(double)",1,1,14,26,1
"org.jfree.chart.plot.dial.StandardDialScale.setMajorTickIncrement(double)",2,1,16,59,2
"org.jfree.chart.plot.dial.StandardDialScale.setMajorTickLength(double)",2,1,15,59,2
"org.jfree.chart.plot.dial.StandardDialScale.setMajorTickPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.StandardDialScale.setMajorTickStroke(Stroke)",1,1,13,34,1
"org.jfree.chart.plot.dial.StandardDialScale.setMinorTickCount(int)",2,1,16,59,2
"org.jfree.chart.plot.dial.StandardDialScale.setMinorTickLength(double)",2,1,15,59,2
"org.jfree.chart.plot.dial.StandardDialScale.setMinorTickPaint(Paint)",1,1,13,34,1
"org.jfree.chart.plot.dial.StandardDialScale.setMinorTickStroke(Stroke)",1,1,15,34,1
"org.jfree.chart.plot.dial.StandardDialScale.setStartAngle(double)",1,1,12,26,1
"org.jfree.chart.plot.dial.StandardDialScale.setTickLabelFont(Font)",1,1,13,34,1
"org.jfree.chart.plot.dial.StandardDialScale.setTickLabelFormatter(NumberFormat)",1,1,14,34,1
"org.jfree.chart.plot.dial.StandardDialScale.setTickLabelOffset(double)",1,1,12,26,1
"org.jfree.chart.plot.dial.StandardDialScale.setTickLabelPaint(Paint)",1,1,11,34,1
"org.jfree.chart.plot.dial.StandardDialScale.setTickLabelsVisible(boolean)",1,1,13,26,1
"org.jfree.chart.plot.dial.StandardDialScale.setTickRadius(double)",2,1,16,59,2
"org.jfree.chart.plot.dial.StandardDialScale.setUpperBound(double)",1,1,14,26,1
"org.jfree.chart.plot.dial.StandardDialScale.valueToAngle(double)",1,1,16,97,1
"org.jfree.chart.plot.dial.StandardDialScale.writeObject(ObjectOutputStream)",1,1,15,92,1
"org.jfree.chart.plot.dial.StandardDialScaleTest.testAngleToValue()",1,1,16,294,1
"org.jfree.chart.plot.dial.StandardDialScaleTest.testCloning()",1,1,27,314,1
"org.jfree.chart.plot.dial.StandardDialScaleTest.testEquals()",1,1,92,"1,679",1
"org.jfree.chart.plot.dial.StandardDialScaleTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.plot.dial.StandardDialScaleTest.testSerialization()",1,1,18,130,1
"org.jfree.chart.plot.dial.StandardDialScaleTest.testValueToAngle()",1,1,16,294,1
"org.jfree.chart.renderer.AbstractRenderer.AbstractRenderer()",1,1,52,821,1
"org.jfree.chart.renderer.AbstractRenderer.addChangeListener(RendererChangeListener)",1,1,11,31,1
"org.jfree.chart.renderer.AbstractRenderer.beginElementGroup(Graphics2D,ItemKey)",1,1,17,60,1
"org.jfree.chart.renderer.AbstractRenderer.calculateLabelAnchorPoint(ItemLabelAnchor,double,double,PlotOrientation)",1,1,118,"2,317",26
"org.jfree.chart.renderer.AbstractRenderer.clearSeriesPaints(boolean)",1,2,14,28,2
"org.jfree.chart.renderer.AbstractRenderer.clearSeriesStrokes(boolean)",1,2,14,28,2
"org.jfree.chart.renderer.AbstractRenderer.clone()",1,15,96,"1,099",19
"org.jfree.chart.renderer.AbstractRenderer.endElementGroup(Graphics2D)",1,1,11,15,1
"org.jfree.chart.renderer.AbstractRenderer.equals(Object)",41,1,157,"2,301",41
"org.jfree.chart.renderer.AbstractRenderer.fireChangeEvent()",1,1,15,11,1
"org.jfree.chart.renderer.AbstractRenderer.getAutoPopulateSeriesFillPaint()",1,1,14,18,1
"org.jfree.chart.renderer.AbstractRenderer.getAutoPopulateSeriesOutlinePaint()",1,1,14,18,1
"org.jfree.chart.renderer.AbstractRenderer.getAutoPopulateSeriesOutlineStroke()",1,1,14,18,1
"org.jfree.chart.renderer.AbstractRenderer.getAutoPopulateSeriesPaint()",1,1,13,18,1
"org.jfree.chart.renderer.AbstractRenderer.getAutoPopulateSeriesShape()",1,1,13,18,1
"org.jfree.chart.renderer.AbstractRenderer.getAutoPopulateSeriesStroke()",1,1,13,18,1
"org.jfree.chart.renderer.AbstractRenderer.getDataBoundsIncludesVisibleSeriesOnly()",1,1,11,11,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultCreateEntities()",1,1,10,13,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultEntityRadius()",1,1,11,13,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultFillPaint()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultItemLabelFont()",1,1,11,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultItemLabelPaint()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultItemLabelsVisible()",1,1,11,13,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultLegendShape()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultLegendTextFont()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultLegendTextPaint()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultNegativeItemLabelPosition()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultOutlinePaint()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultOutlineStroke()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultPaint()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultPositiveItemLabelPosition()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultSeriesVisible()",1,1,10,13,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultSeriesVisibleInLegend()",1,1,10,13,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultShape()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getDefaultStroke()",1,1,10,8,1
"org.jfree.chart.renderer.AbstractRenderer.getItemCreateEntity(int,int)",2,1,17,53,2
"org.jfree.chart.renderer.AbstractRenderer.getItemFillPaint(int,int)",1,1,14,16,1
"org.jfree.chart.renderer.AbstractRenderer.getItemLabelAnchorOffset()",1,1,10,13,1
"org.jfree.chart.renderer.AbstractRenderer.getItemLabelFont(int,int)",1,1,15,48,2
"org.jfree.chart.renderer.AbstractRenderer.getItemLabelPaint(int,int)",1,1,15,48,2
"org.jfree.chart.renderer.AbstractRenderer.getItemOutlinePaint(int,int)",1,1,16,13,1
"org.jfree.chart.renderer.AbstractRenderer.getItemOutlineStroke(int,int)",1,1,14,16,1
"org.jfree.chart.renderer.AbstractRenderer.getItemPaint(int,int)",1,1,16,13,1
"org.jfree.chart.renderer.AbstractRenderer.getItemShape(int,int)",1,1,15,16,1
"org.jfree.chart.renderer.AbstractRenderer.getItemStroke(int,int)",1,1,14,13,1
"org.jfree.chart.renderer.AbstractRenderer.getItemVisible(int,int)",1,1,12,18,1
"org.jfree.chart.renderer.AbstractRenderer.getLegendShape(int)",1,1,15,22,1
"org.jfree.chart.renderer.AbstractRenderer.getLegendTextFont(int)",1,1,15,22,1
"org.jfree.chart.renderer.AbstractRenderer.getLegendTextPaint(int)",1,1,15,22,1
"org.jfree.chart.renderer.AbstractRenderer.getNegativeItemLabelPosition(int,int)",1,1,15,18,1
"org.jfree.chart.renderer.AbstractRenderer.getPositiveItemLabelPosition(int,int)",1,1,13,18,1
"org.jfree.chart.renderer.AbstractRenderer.getSeriesCreateEntities(int)",1,1,13,22,1
"org.jfree.chart.renderer.AbstractRenderer.getSeriesFillPaint(int)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.getSeriesItemLabelFont(int)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.getSeriesItemLabelPaint(int)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.getSeriesNegativeItemLabelPosition(int)",1,1,18,57,2
"org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlinePaint(int)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.getSeriesOutlineStroke(int)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.getSeriesPaint(int)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.getSeriesPositiveItemLabelPosition(int)",1,1,18,57,2
"org.jfree.chart.renderer.AbstractRenderer.getSeriesShape(int)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.getSeriesStroke(int)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.getSeriesVisible(int)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.getSeriesVisibleInLegend(int)",1,1,15,25,1
"org.jfree.chart.renderer.AbstractRenderer.getTreatLegendShapeAsLine()",1,1,11,11,1
"org.jfree.chart.renderer.AbstractRenderer.hasListener(EventListener)",1,1,13,33,1
"org.jfree.chart.renderer.AbstractRenderer.hashCode()",1,1,39,413,1
"org.jfree.chart.renderer.AbstractRenderer.isItemLabelVisible(int,int)",1,1,12,18,1
"org.jfree.chart.renderer.AbstractRenderer.isSeriesItemLabelsVisible(int)",2,1,15,59,2
"org.jfree.chart.renderer.AbstractRenderer.isSeriesVisible(int)",1,1,18,68,2
"org.jfree.chart.renderer.AbstractRenderer.isSeriesVisibleInLegend(int)",1,1,16,68,2
"org.jfree.chart.renderer.AbstractRenderer.lookupLegendShape(int)",1,2,19,71,3
"org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextFont(int)",1,1,16,44,2
"org.jfree.chart.renderer.AbstractRenderer.lookupLegendTextPaint(int)",1,1,16,44,2
"org.jfree.chart.renderer.AbstractRenderer.lookupSeriesFillPaint(int)",1,3,23,135,5
"org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlinePaint(int)",1,3,23,135,5
"org.jfree.chart.renderer.AbstractRenderer.lookupSeriesOutlineStroke(int)",1,3,23,135,5
"org.jfree.chart.renderer.AbstractRenderer.lookupSeriesPaint(int)",1,3,23,135,5
"org.jfree.chart.renderer.AbstractRenderer.lookupSeriesShape(int)",1,3,23,135,5
"org.jfree.chart.renderer.AbstractRenderer.lookupSeriesStroke(int)",1,3,23,135,5
"org.jfree.chart.renderer.AbstractRenderer.notifyListeners(RendererChangeEvent)",1,3,13,118,3
"org.jfree.chart.renderer.AbstractRenderer.readObject(ObjectInputStream)",1,1,24,190,1
"org.jfree.chart.renderer.AbstractRenderer.removeChangeListener(RendererChangeListener)",1,1,12,31,1
"org.jfree.chart.renderer.AbstractRenderer.setAutoPopulateSeriesFillPaint(boolean)",1,1,14,19,1
"org.jfree.chart.renderer.AbstractRenderer.setAutoPopulateSeriesOutlinePaint(boolean)",1,1,14,19,1
"org.jfree.chart.renderer.AbstractRenderer.setAutoPopulateSeriesOutlineStroke(boolean)",1,1,14,19,1
"org.jfree.chart.renderer.AbstractRenderer.setAutoPopulateSeriesPaint(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.AbstractRenderer.setAutoPopulateSeriesShape(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.AbstractRenderer.setAutoPopulateSeriesStroke(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.AbstractRenderer.setDataBoundsIncludesVisibleSeriesOnly(boolean)",1,1,13,31,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultCreateEntities(boolean)",1,1,13,15,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultCreateEntities(boolean,boolean)",1,2,16,31,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultEntityRadius(int)",1,1,11,15,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultFillPaint(Paint)",1,1,12,11,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultFillPaint(Paint,boolean)",1,2,16,41,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultItemLabelFont(Font)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultItemLabelFont(Font,boolean)",1,2,16,28,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultItemLabelPaint(Paint)",1,1,12,11,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultItemLabelPaint(Paint,boolean)",1,2,17,41,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultItemLabelsVisible(boolean)",1,1,11,15,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultItemLabelsVisible(boolean,boolean)",1,2,17,31,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultLegendShape(Shape)",1,1,12,15,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultLegendTextFont(Font)",1,1,13,26,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultLegendTextPaint(Paint)",1,1,12,15,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultNegativeItemLabelPosition(ItemLabelPosition)",1,1,12,11,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultNegativeItemLabelPosition(ItemLabelPosition,boolean)",1,2,17,41,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultOutlinePaint(Paint)",1,1,12,11,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultOutlinePaint(Paint,boolean)",1,2,16,41,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultOutlineStroke(Stroke)",1,1,11,11,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultOutlineStroke(Stroke,boolean)",1,2,17,41,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultPaint(Paint)",1,1,12,11,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultPaint(Paint,boolean)",1,2,15,28,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultPositiveItemLabelPosition(ItemLabelPosition)",1,1,12,11,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultPositiveItemLabelPosition(ItemLabelPosition,boolean)",1,2,17,41,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultSeriesVisible(boolean)",1,1,12,15,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultSeriesVisible(boolean,boolean)",1,2,20,50,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultSeriesVisibleInLegend(boolean)",1,1,12,15,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultSeriesVisibleInLegend(boolean,boolean)",1,2,16,31,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultShape(Shape)",1,1,12,11,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultShape(Shape,boolean)",1,2,16,41,2
"org.jfree.chart.renderer.AbstractRenderer.setDefaultStroke(Stroke)",1,1,12,11,1
"org.jfree.chart.renderer.AbstractRenderer.setDefaultStroke(Stroke,boolean)",1,2,16,41,2
"org.jfree.chart.renderer.AbstractRenderer.setItemLabelAnchorOffset(double)",1,1,11,19,1
"org.jfree.chart.renderer.AbstractRenderer.setLegendShape(int,Shape)",1,1,13,28,1
"org.jfree.chart.renderer.AbstractRenderer.setLegendTextFont(int,Font)",1,1,13,28,1
"org.jfree.chart.renderer.AbstractRenderer.setLegendTextPaint(int,Paint)",1,1,13,28,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesCreateEntities(int,Boolean)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesCreateEntities(int,Boolean,boolean)",1,2,18,46,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesFillPaint(int,Paint)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesFillPaint(int,Paint,boolean)",1,2,16,46,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont(int,Font)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelFont(int,Font,boolean)",1,2,17,46,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint(int,Paint)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelPaint(int,Paint,boolean)",1,2,18,46,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible(int,Boolean)",1,1,10,19,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible(int,Boolean,boolean)",1,2,16,43,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesItemLabelsVisible(int,boolean)",1,1,10,24,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition(int,ItemLabelPosition)",1,1,13,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesNegativeItemLabelPosition(int,ItemLabelPosition,boolean)",1,2,18,46,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint(int,Paint)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlinePaint(int,Paint,boolean)",1,2,16,46,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke(int,Stroke)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesOutlineStroke(int,Stroke,boolean)",1,2,17,46,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint(int,Paint)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesPaint(int,Paint,boolean)",1,2,16,46,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition(int,ItemLabelPosition)",1,1,13,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesPositiveItemLabelPosition(int,ItemLabelPosition,boolean)",1,2,18,46,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesShape(int,Shape)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesShape(int,Shape,boolean)",1,2,16,46,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke(int,Stroke)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesStroke(int,Stroke,boolean)",1,2,16,46,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesVisible(int,Boolean)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesVisible(int,Boolean,boolean)",1,2,22,66,2
"org.jfree.chart.renderer.AbstractRenderer.setSeriesVisibleInLegend(int,Boolean)",1,1,12,22,1
"org.jfree.chart.renderer.AbstractRenderer.setSeriesVisibleInLegend(int,Boolean,boolean)",1,2,18,46,2
"org.jfree.chart.renderer.AbstractRenderer.setTreatLegendShapeAsLine(boolean)",1,2,14,38,2
"org.jfree.chart.renderer.AbstractRenderer.writeObject(ObjectOutputStream)",1,1,19,170,1
"org.jfree.chart.renderer.AbstractRendererTest.MyRendererChangeListener.MyRendererChangeListener()",1,1,6,8,1
"org.jfree.chart.renderer.AbstractRendererTest.MyRendererChangeListener.rendererChanged(RendererChangeEvent)",1,1,4,11,1
"org.jfree.chart.renderer.AbstractRendererTest.TestRenderer.setTreatLegendShapeAsLine(boolean)",1,1,4,15,1
"org.jfree.chart.renderer.AbstractRendererTest.testAutoPopulateFlagDefaults()",1,1,13,99,1
"org.jfree.chart.renderer.AbstractRendererTest.testCloning()",1,1,103,"2,678",1
"org.jfree.chart.renderer.AbstractRendererTest.testCloning2()",1,1,19,230,1
"org.jfree.chart.renderer.AbstractRendererTest.testEquals()",1,1,214,"4,563",1
"org.jfree.chart.renderer.AbstractRendererTest.testEquals2()",1,1,14,73,1
"org.jfree.chart.renderer.AbstractRendererTest.testEquals_ObjectList()",1,1,10,121,1
"org.jfree.chart.renderer.AbstractRendererTest.testEquals_ObjectList2()",1,1,10,121,1
"org.jfree.chart.renderer.AbstractRendererTest.testEquals_ObjectList3()",1,1,13,103,1
"org.jfree.chart.renderer.AbstractRendererTest.testEquals_ObjectList4()",1,1,13,103,1
"org.jfree.chart.renderer.AbstractRendererTest.testEventNotification()",1,1,84,"1,144",1
"org.jfree.chart.renderer.AbstractRendererTest.testFillPaintLookup()",1,1,19,165,1
"org.jfree.chart.renderer.AbstractRendererTest.testOutlinePaintLookup()",1,1,19,165,1
"org.jfree.chart.renderer.AbstractRendererTest.testPaintLookup()",1,1,19,165,1
"org.jfree.chart.renderer.AbstractRendererTest.testSerialization()",1,2,21,182,2
"org.jfree.chart.renderer.AreaRendererEndTypeTest.testEquals()",1,1,11,28,1
"org.jfree.chart.renderer.AreaRendererEndTypeTest.testSerialization()",1,1,11,51,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.DefaultPolarItemRenderer()",1,1,17,187,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.addEntity(EntityCollection,Shape,XYDataset,int,int,double,double)",2,4,44,443,6
"org.jfree.chart.renderer.DefaultPolarItemRenderer.clone()",1,6,35,298,6
"org.jfree.chart.renderer.DefaultPolarItemRenderer.drawAngularGridLines(Graphics2D,PolarPlot,List,Rectangle2D)",1,4,41,508,4
"org.jfree.chart.renderer.DefaultPolarItemRenderer.drawRadialGridLines(Graphics2D,PolarPlot,ValueAxis,List,Rectangle2D)",1,4,39,504,4
"org.jfree.chart.renderer.DefaultPolarItemRenderer.drawSeries(Graphics2D,Rectangle2D,PlotRenderingInfo,PolarPlot,XYDataset,int)",5,14,97,"1,411",17
"org.jfree.chart.renderer.DefaultPolarItemRenderer.equals(Object)",15,1,58,667,15
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getBaseToolTipGenerator()",1,1,11,8,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getConnectFirstAndLastPoint()",1,1,11,11,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getDrawOutlineWhenFilled()",1,1,11,11,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getDrawingSupplier()",1,2,14,38,2
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getFillComposite()",1,1,10,8,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getLegendItem(int)",3,5,55,598,7
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getLegendItemToolTipGenerator()",1,1,11,8,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getLegendItemURLGenerator()",1,1,11,8,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getLegendLine()",1,1,10,8,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getPlot()",1,1,11,8,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getSeriesToolTipGenerator(int)",1,1,11,19,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getShapesVisible()",1,1,11,11,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getToolTipGenerator(int,int)",1,1,19,57,2
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getURLGenerator()",1,1,11,8,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.getUseFillPaint()",1,1,13,13,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.isSeriesFilled(int)",1,2,16,70,2
"org.jfree.chart.renderer.DefaultPolarItemRenderer.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setBaseToolTipGenerator(XYToolTipGenerator)",1,1,13,15,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setConnectFirstAndLastPoint(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setDrawOutlineWhenFilled(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setFillComposite(Composite)",1,1,14,26,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setLegendItemToolTipGenerator(XYSeriesLabelGenerator)",1,1,14,15,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setLegendItemURLGenerator(XYSeriesLabelGenerator)",1,1,13,15,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setLegendLine(Shape)",1,1,13,26,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setPlot(PolarPlot)",1,1,11,11,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setSeriesFilled(int,boolean)",1,1,9,33,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setSeriesToolTipGenerator(int,XYToolTipGenerator)",1,1,14,28,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setShapesVisible(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setURLGenerator(XYURLGenerator)",1,1,12,15,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.setUseFillPaint(boolean)",1,1,14,19,1
"org.jfree.chart.renderer.DefaultPolarItemRenderer.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.renderer.DefaultPolarItemRendererTest.testCloning()",1,1,15,144,1
"org.jfree.chart.renderer.DefaultPolarItemRendererTest.testEquals()",1,1,13,82,1
"org.jfree.chart.renderer.DefaultPolarItemRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.DefaultPolarItemRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.GrayPaintScale.GrayPaintScale()",1,1,6,11,1
"org.jfree.chart.renderer.GrayPaintScale.GrayPaintScale(double,double)",1,1,12,22,1
"org.jfree.chart.renderer.GrayPaintScale.GrayPaintScale(double,double,int)",3,1,26,136,4
"org.jfree.chart.renderer.GrayPaintScale.clone()",1,1,12,11,1
"org.jfree.chart.renderer.GrayPaintScale.equals(Object)",6,1,33,174,6
"org.jfree.chart.renderer.GrayPaintScale.getAlpha()",1,1,10,11,1
"org.jfree.chart.renderer.GrayPaintScale.getLowerBound()",1,1,11,11,1
"org.jfree.chart.renderer.GrayPaintScale.getPaint(double)",1,1,18,137,1
"org.jfree.chart.renderer.GrayPaintScale.getUpperBound()",1,1,11,11,1
"org.jfree.chart.renderer.GrayPaintScale.hashCode()",1,1,13,85,1
"org.jfree.chart.renderer.GrayPaintScaleTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.GrayPaintScaleTest.testConstructor()",1,1,10,62,1
"org.jfree.chart.renderer.GrayPaintScaleTest.testEquals()",1,1,25,273,1
"org.jfree.chart.renderer.GrayPaintScaleTest.testGetPaint()",1,1,17,136,1
"org.jfree.chart.renderer.GrayPaintScaleTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.LookupPaintScale.LookupPaintScale()",1,1,6,15,1
"org.jfree.chart.renderer.LookupPaintScale.LookupPaintScale(double,double,Paint)",2,1,20,102,2
"org.jfree.chart.renderer.LookupPaintScale.PaintItem.PaintItem(double,Paint)",1,1,10,22,1
"org.jfree.chart.renderer.LookupPaintScale.PaintItem.compareTo(Object)",3,1,20,100,3
"org.jfree.chart.renderer.LookupPaintScale.PaintItem.equals(Object)",5,1,24,141,5
"org.jfree.chart.renderer.LookupPaintScale.PaintItem.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.renderer.LookupPaintScale.PaintItem.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.renderer.LookupPaintScale.add(double,Paint)",1,2,20,127,2
"org.jfree.chart.renderer.LookupPaintScale.clone()",1,1,14,36,1
"org.jfree.chart.renderer.LookupPaintScale.equals(Object)",7,1,30,230,7
"org.jfree.chart.renderer.LookupPaintScale.getDefaultPaint()",1,1,8,8,1
"org.jfree.chart.renderer.LookupPaintScale.getLowerBound()",1,1,11,11,1
"org.jfree.chart.renderer.LookupPaintScale.getPaint(double)",5,4,48,524,10
"org.jfree.chart.renderer.LookupPaintScale.getUpperBound()",1,1,11,11,1
"org.jfree.chart.renderer.LookupPaintScale.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.renderer.LookupPaintScale.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.renderer.LookupPaintScaleTest.testCloning()",1,1,25,343,1
"org.jfree.chart.renderer.LookupPaintScaleTest.testConstructor1()",1,1,9,43,1
"org.jfree.chart.renderer.LookupPaintScaleTest.testConstructor2()",1,1,10,74,1
"org.jfree.chart.renderer.LookupPaintScaleTest.testEquals()",1,1,20,241,1
"org.jfree.chart.renderer.LookupPaintScaleTest.testGeneral()",1,1,39,721,1
"org.jfree.chart.renderer.LookupPaintScaleTest.testSerialization()",1,1,15,156,1
"org.jfree.chart.renderer.NotOutlierException.NotOutlierException(String)",1,1,8,8,1
"org.jfree.chart.renderer.Outlier.Outlier(double,double,double)",1,1,12,53,1
"org.jfree.chart.renderer.Outlier.compareTo(Object)",3,3,24,131,4
"org.jfree.chart.renderer.Outlier.equals(Object)",5,1,24,141,5
"org.jfree.chart.renderer.Outlier.getPoint()",1,1,9,8,1
"org.jfree.chart.renderer.Outlier.getRadius()",1,1,8,11,1
"org.jfree.chart.renderer.Outlier.getX()",1,1,9,11,1
"org.jfree.chart.renderer.Outlier.getY()",1,1,9,11,1
"org.jfree.chart.renderer.Outlier.overlaps(Outlier)",1,4,16,148,4
"org.jfree.chart.renderer.Outlier.setPoint(Point2D)",1,1,9,11,1
"org.jfree.chart.renderer.Outlier.setRadius(double)",1,1,8,15,1
"org.jfree.chart.renderer.Outlier.toString()",1,1,9,19,1
"org.jfree.chart.renderer.OutlierList.OutlierList(Outlier)",1,1,9,15,1
"org.jfree.chart.renderer.OutlierList.add(Outlier)",1,1,10,19,1
"org.jfree.chart.renderer.OutlierList.getAveragedOutlier()",1,1,8,8,1
"org.jfree.chart.renderer.OutlierList.getItemCount()",1,1,8,15,1
"org.jfree.chart.renderer.OutlierList.isMultiple()",1,1,9,11,1
"org.jfree.chart.renderer.OutlierList.isOverlapped(Outlier)",2,1,15,48,2
"org.jfree.chart.renderer.OutlierList.setAveragedOutlier(Outlier)",1,1,8,11,1
"org.jfree.chart.renderer.OutlierList.setMultiple(boolean)",1,1,9,15,1
"org.jfree.chart.renderer.OutlierList.updateAveragedOutlier()",1,2,17,146,2
"org.jfree.chart.renderer.OutlierListCollection.OutlierListCollection()",1,1,6,8,1
"org.jfree.chart.renderer.OutlierListCollection.add(Outlier)",2,5,31,187,5
"org.jfree.chart.renderer.OutlierListCollection.isHighFarOut()",1,1,9,11,1
"org.jfree.chart.renderer.OutlierListCollection.isLowFarOut()",1,1,9,11,1
"org.jfree.chart.renderer.OutlierListCollection.iterator()",1,1,8,11,1
"org.jfree.chart.renderer.OutlierListCollection.setHighFarOut(boolean)",1,1,9,15,1
"org.jfree.chart.renderer.OutlierListCollection.setLowFarOut(boolean)",1,1,9,15,1
"org.jfree.chart.renderer.OutlierListCollection.updateOutlierList(OutlierList,Outlier)",1,1,17,51,1
"org.jfree.chart.renderer.OutlierTest.testCloning()",1,1,8,28,1
"org.jfree.chart.renderer.OutlierTest.testConstructor()",1,1,10,89,1
"org.jfree.chart.renderer.OutlierTest.testEquals()",1,1,22,258,1
"org.jfree.chart.renderer.OutlierTest.testSerialization()",1,1,8,28,1
"org.jfree.chart.renderer.RendererChangeDetector.RendererChangeDetector()",1,1,6,8,1
"org.jfree.chart.renderer.RendererChangeDetector.getNotified()",1,1,9,11,1
"org.jfree.chart.renderer.RendererChangeDetector.rendererChanged(RendererChangeEvent)",1,1,9,11,1
"org.jfree.chart.renderer.RendererChangeDetector.setNotified(boolean)",1,1,9,15,1
"org.jfree.chart.renderer.RendererState.RendererState(PlotRenderingInfo)",1,1,9,18,1
"org.jfree.chart.renderer.RendererState.getElementHinting()",1,1,11,11,1
"org.jfree.chart.renderer.RendererState.getEntityCollection()",1,3,17,65,3
"org.jfree.chart.renderer.RendererState.getInfo()",1,1,8,8,1
"org.jfree.chart.renderer.RendererState.setElementHinting(boolean)",1,1,10,15,1
"org.jfree.chart.renderer.RendererUtils.findLiveItems(XYDataset,int,double,double)",1,1,23,116,2
"org.jfree.chart.renderer.RendererUtils.findLiveItemsLowerBound(XYDataset,int,double,double)",9,7,93,"1,032",16
"org.jfree.chart.renderer.RendererUtils.findLiveItemsUpperBound(XYDataset,int,double,double)",9,7,91,"1,081",16
"org.jfree.chart.renderer.RendererUtilsTest.test3561093()",1,1,21,243,1
"org.jfree.chart.renderer.RendererUtilsTest.testFindLiveItemsLowerBound_Ascending()",1,1,6,"1,039",1
"org.jfree.chart.renderer.RendererUtilsTest.testFindLiveItemsLowerBound_Descending()",1,1,6,"1,146",1
"org.jfree.chart.renderer.RendererUtilsTest.testFindLiveItemsLowerBound_Unordered()",1,1,51,807,1
"org.jfree.chart.renderer.RendererUtilsTest.testFindLiveItemsUpperBound_Ascending()",1,1,6,"1,039",1
"org.jfree.chart.renderer.RendererUtilsTest.testFindLiveItemsUpperBound_Descending()",1,1,6,"1,146",1
"org.jfree.chart.renderer.RendererUtilsTest.testFindLiveItemsUpperBound_Unordered()",1,1,51,807,1
"org.jfree.chart.renderer.WaferMapRenderer.WaferMapRenderer()",1,1,6,10,1
"org.jfree.chart.renderer.WaferMapRenderer.WaferMapRenderer(Integer,Integer)",1,4,22,140,4
"org.jfree.chart.renderer.WaferMapRenderer.WaferMapRenderer(int,int)",1,1,9,25,1
"org.jfree.chart.renderer.WaferMapRenderer.getChipColor(Number)",1,1,10,11,1
"org.jfree.chart.renderer.WaferMapRenderer.getDrawingSupplier()",1,2,14,38,2
"org.jfree.chart.renderer.WaferMapRenderer.getLegendCollection()",1,7,52,573,7
"org.jfree.chart.renderer.WaferMapRenderer.getMaxPaintValue(Integer)",1,4,20,133,4
"org.jfree.chart.renderer.WaferMapRenderer.getMinPaintValue(Integer)",1,4,20,133,4
"org.jfree.chart.renderer.WaferMapRenderer.getPaintIndex(Number)",1,1,10,24,1
"org.jfree.chart.renderer.WaferMapRenderer.getPlot()",1,1,8,8,1
"org.jfree.chart.renderer.WaferMapRenderer.isMethodValid(int)",4,2,14,57,4
"org.jfree.chart.renderer.WaferMapRenderer.makePaintIndex()",3,4,33,300,7
"org.jfree.chart.renderer.WaferMapRenderer.makePositionIndex(Set)",1,2,22,209,4
"org.jfree.chart.renderer.WaferMapRenderer.makeValueIndex(Number,Number,Set)",1,2,25,247,4
"org.jfree.chart.renderer.WaferMapRenderer.setPlot(WaferMapPlot)",1,1,9,15,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.AbstractCategoryItemRenderer()",1,1,16,36,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.addEntity(EntityCollection,Shape,CategoryDataset,int,int,double,double)",2,4,47,490,6
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.addItemEntity(EntityCollection,CategoryDataset,int,int,Shape)",2,3,29,267,4
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.beginElementGroup(Graphics2D,Comparable,Comparable)",1,1,17,19,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.calculateDomainMarkerTextAnchorPoint(Graphics2D,PlotOrientation,Rectangle2D,Rectangle2D,RectangleInsets,LengthAdjustmentType,RectangleAnchor)",1,3,28,110,3
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.calculateRangeMarkerTextAnchorPoint(Graphics2D,PlotOrientation,Rectangle2D,Rectangle2D,RectangleInsets,LengthAdjustmentType,RectangleAnchor)",1,3,27,110,3
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.clone()",7,13,75,634,13
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.createState(PlotRenderingInfo)",1,1,15,11,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawBackground(Graphics2D,CategoryPlot,Rectangle2D)",1,1,14,15,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawDomainGridline(Graphics2D,CategoryPlot,Rectangle2D,double)",1,3,42,343,5
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawDomainMarker(Graphics2D,CategoryPlot,CategoryAxis,CategoryMarker,Rectangle2D)",5,7,81,"1,160",8
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawItemLabel(Graphics2D,PlotOrientation,CategoryDataset,int,int,double,double,boolean)",1,3,39,342,3
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawOutline(Graphics2D,CategoryPlot,Rectangle2D)",1,1,14,15,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeLine(Graphics2D,CategoryPlot,ValueAxis,Rectangle2D,double,Paint,Stroke)",2,3,39,351,4
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.drawRangeMarker(Graphics2D,CategoryPlot,ValueAxis,Marker,Rectangle2D)",7,18,165,"2,796",20
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.equals(Object)",12,1,54,504,12
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds(CategoryDataset)",1,1,13,11,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.findRangeBounds(CategoryDataset,boolean)",3,4,32,185,5
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getColumnCount()",1,1,9,11,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDefaultItemLabelGenerator()",1,1,11,8,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDefaultItemURLGenerator()",1,1,11,8,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDefaultToolTipGenerator()",1,1,11,8,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDomainAxis(CategoryPlot,int)",1,2,15,48,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getDrawingSupplier()",1,2,14,38,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getItemLabelGenerator(int,int)",1,1,16,16,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getItemMiddle(Comparable,Comparable,CategoryDataset,CategoryAxis,Rectangle2D,RectangleEdge)",1,1,21,33,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getItemURLGenerator(int,int)",1,1,14,13,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItem(int,int)",3,5,53,557,7
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemLabelGenerator()",1,1,10,8,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemToolTipGenerator()",1,1,10,8,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItemURLGenerator()",1,1,10,8,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getLegendItems()",3,8,42,415,10
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPassCount()",1,1,11,8,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getPlot()",1,1,13,8,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getRangeAxis(CategoryPlot,int)",1,2,15,48,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getRowCount()",1,1,9,11,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getSeriesItemLabelGenerator(int)",1,1,19,57,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getSeriesItemURLGenerator(int)",1,1,18,57,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getSeriesToolTipGenerator(int)",1,1,14,22,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.getToolTipGenerator(int,int)",1,1,20,48,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.hashCode()",1,1,10,18,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.initialise(Graphics2D,Rectangle2D,CategoryPlot,int,PlotRenderingInfo)",1,3,44,361,4
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setDefaultItemLabelGenerator(CategoryItemLabelGenerator)",1,1,13,11,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setDefaultItemLabelGenerator(CategoryItemLabelGenerator,boolean)",1,2,17,28,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setDefaultItemURLGenerator(CategoryURLGenerator)",1,1,12,11,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setDefaultItemURLGenerator(CategoryURLGenerator,boolean)",1,2,16,28,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setDefaultToolTipGenerator(CategoryToolTipGenerator)",1,1,12,11,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setDefaultToolTipGenerator(CategoryToolTipGenerator,boolean)",1,2,16,28,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setLegendItemLabelGenerator(CategorySeriesLabelGenerator)",1,1,14,26,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setLegendItemToolTipGenerator(CategorySeriesLabelGenerator)",1,1,13,15,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setLegendItemURLGenerator(CategorySeriesLabelGenerator)",1,1,13,15,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setPlot(CategoryPlot)",1,1,14,22,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesItemLabelGenerator(int,CategoryItemLabelGenerator)",1,1,14,22,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesItemLabelGenerator(int,CategoryItemLabelGenerator,boolean)",1,2,18,46,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesItemURLGenerator(int,CategoryURLGenerator)",1,1,14,22,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesItemURLGenerator(int,CategoryURLGenerator,boolean)",1,2,18,46,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int,CategoryToolTipGenerator)",1,1,14,22,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.setSeriesToolTipGenerator(int,CategoryToolTipGenerator,boolean)",1,2,18,46,2
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer.updateCrosshairValues(CategoryCrosshairState,Comparable,Comparable,double,int,double,double,PlotOrientation)",1,3,35,153,3
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.test2947660()",1,1,18,182,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testCloning1()",1,1,24,253,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testCloning2()",1,1,25,265,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testCloning_LegendItemLabelGenerator()",1,1,18,124,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testCloning_LegendItemToolTipGenerator()",1,1,18,124,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testCloning_LegendItemURLGenerator()",1,1,18,124,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testEquals()",1,1,69,719,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testEquals_ObjectList()",1,1,10,89,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testEquals_ObjectList2()",1,1,10,89,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testEquals_ObjectList3()",1,1,10,73,1
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest.testFindRangeBounds()",1,1,17,212,1
"org.jfree.chart.renderer.category.AreaRenderer.AreaRenderer()",1,1,8,48,1
"org.jfree.chart.renderer.category.AreaRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.category.AreaRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",3,11,114,"1,967",16
"org.jfree.chart.renderer.category.AreaRenderer.equals(Object)",4,1,21,114,4
"org.jfree.chart.renderer.category.AreaRenderer.getEndType()",1,1,11,8,1
"org.jfree.chart.renderer.category.AreaRenderer.getLegendItem(int,int)",3,5,50,516,7
"org.jfree.chart.renderer.category.AreaRenderer.setEndType(AreaRendererEndType)",1,1,13,26,1
"org.jfree.chart.renderer.category.AreaRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.category.AreaRendererTest.testEquals()",1,1,13,72,1
"org.jfree.chart.renderer.category.AreaRendererTest.testGetLegendItemSeriesIndex()",1,1,23,292,1
"org.jfree.chart.renderer.category.AreaRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.AreaRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.AreaRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.category.BarRenderer.BarRenderer()",1,1,22,267,1
"org.jfree.chart.renderer.category.BarRenderer.calculateBarL0L1(double)",3,1,23,178,3
"org.jfree.chart.renderer.category.BarRenderer.calculateBarW0(CategoryPlot,PlotOrientation,Rectangle2D,CategoryAxis,CategoryItemRendererState,int,int)",1,4,47,455,4
"org.jfree.chart.renderer.category.BarRenderer.calculateBarWidth(CategoryPlot,Rectangle2D,int,CategoryItemRendererState)",1,8,46,533,8
"org.jfree.chart.renderer.category.BarRenderer.calculateLabelAnchorPoint(ItemLabelAnchor,Rectangle2D,PlotOrientation)",1,1,105,"1,701",26
"org.jfree.chart.renderer.category.BarRenderer.calculateSeriesWidth(double,CategoryAxis,int,int)",1,2,19,125,2
"org.jfree.chart.renderer.category.BarRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",4,10,116,"1,643",22
"org.jfree.chart.renderer.category.BarRenderer.drawItemLabel(Graphics2D,CategoryDataset,int,int,CategoryPlot,CategoryItemLabelGenerator,Rectangle2D,boolean)",2,8,68,625,9
"org.jfree.chart.renderer.category.BarRenderer.equals(Object)",16,1,60,698,16
"org.jfree.chart.renderer.category.BarRenderer.findRangeBounds(CategoryDataset,boolean)",2,3,26,104,4
"org.jfree.chart.renderer.category.BarRenderer.getBarPainter()",1,1,12,8,1
"org.jfree.chart.renderer.category.BarRenderer.getBase()",1,1,11,13,1
"org.jfree.chart.renderer.category.BarRenderer.getDefaultBarPainter()",1,1,10,8,1
"org.jfree.chart.renderer.category.BarRenderer.getDefaultShadowsVisible()",1,1,12,13,1
"org.jfree.chart.renderer.category.BarRenderer.getGradientPaintTransformer()",1,1,11,8,1
"org.jfree.chart.renderer.category.BarRenderer.getIncludeBaseInRange()",1,1,15,13,1
"org.jfree.chart.renderer.category.BarRenderer.getItemMargin()",1,1,11,13,1
"org.jfree.chart.renderer.category.BarRenderer.getLegendItem(int,int)",3,6,54,635,8
"org.jfree.chart.renderer.category.BarRenderer.getLowerClip()",1,1,10,11,1
"org.jfree.chart.renderer.category.BarRenderer.getMaximumBarWidth()",1,1,11,13,1
"org.jfree.chart.renderer.category.BarRenderer.getMinimumBarLength()",1,1,11,13,1
"org.jfree.chart.renderer.category.BarRenderer.getNegativeItemLabelPositionFallback()",1,1,11,8,1
"org.jfree.chart.renderer.category.BarRenderer.getPositiveItemLabelPositionFallback()",1,1,11,8,1
"org.jfree.chart.renderer.category.BarRenderer.getShadowPaint()",1,1,12,8,1
"org.jfree.chart.renderer.category.BarRenderer.getShadowXOffset()",1,1,10,11,1
"org.jfree.chart.renderer.category.BarRenderer.getShadowYOffset()",1,1,10,11,1
"org.jfree.chart.renderer.category.BarRenderer.getShadowsVisible()",1,1,11,11,1
"org.jfree.chart.renderer.category.BarRenderer.getUpperClip()",1,1,10,11,1
"org.jfree.chart.renderer.category.BarRenderer.initialise(Graphics2D,Rectangle2D,CategoryPlot,int,PlotRenderingInfo)",1,1,27,125,1
"org.jfree.chart.renderer.category.BarRenderer.isDrawBarOutline()",1,1,10,13,1
"org.jfree.chart.renderer.category.BarRenderer.isInternalAnchor(ItemLabelAnchor)",1,1,22,175,13
"org.jfree.chart.renderer.category.BarRenderer.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.renderer.category.BarRenderer.setBarPainter(BarPainter)",1,1,15,26,1
"org.jfree.chart.renderer.category.BarRenderer.setBase(double)",1,1,12,19,1
"org.jfree.chart.renderer.category.BarRenderer.setDefaultBarPainter(BarPainter)",1,1,11,22,1
"org.jfree.chart.renderer.category.BarRenderer.setDefaultShadowsVisible(boolean)",1,1,12,15,1
"org.jfree.chart.renderer.category.BarRenderer.setDrawBarOutline(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.category.BarRenderer.setGradientPaintTransformer(GradientPaintTransformer)",1,1,13,15,1
"org.jfree.chart.renderer.category.BarRenderer.setIncludeBaseInRange(boolean)",1,2,18,38,2
"org.jfree.chart.renderer.category.BarRenderer.setItemMargin(double)",1,1,14,19,1
"org.jfree.chart.renderer.category.BarRenderer.setMaximumBarWidth(double)",1,1,13,19,1
"org.jfree.chart.renderer.category.BarRenderer.setMinimumBarLength(double)",2,1,21,51,2
"org.jfree.chart.renderer.category.BarRenderer.setNegativeItemLabelPositionFallback(ItemLabelPosition)",1,1,14,15,1
"org.jfree.chart.renderer.category.BarRenderer.setPositiveItemLabelPositionFallback(ItemLabelPosition)",1,1,14,15,1
"org.jfree.chart.renderer.category.BarRenderer.setShadowPaint(Paint)",1,1,15,26,1
"org.jfree.chart.renderer.category.BarRenderer.setShadowVisible(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.category.BarRenderer.setShadowXOffset(double)",1,1,12,19,1
"org.jfree.chart.renderer.category.BarRenderer.setShadowYOffset(double)",1,1,12,19,1
"org.jfree.chart.renderer.category.BarRenderer.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.renderer.category.BarRendererTest.testCloning()",1,1,13,118,1
"org.jfree.chart.renderer.category.BarRendererTest.testEquals()",1,1,80,"1,106",1
"org.jfree.chart.renderer.category.BarRendererTest.testEventNotification()",1,1,12,57,1
"org.jfree.chart.renderer.category.BarRendererTest.testFindRangeBounds()",1,1,24,427,1
"org.jfree.chart.renderer.category.BarRendererTest.testGetLegendItem()",1,1,17,148,1
"org.jfree.chart.renderer.category.BarRendererTest.testGetLegendItemSeriesIndex()",1,1,23,292,1
"org.jfree.chart.renderer.category.BarRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.BarRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.BarRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.BoxAndWhiskerRenderer()",1,1,14,142,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.drawEllipse(Point2D,double,Graphics2D)",1,1,12,64,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.drawHighFarOut(double,Graphics2D,double,double)",1,1,15,175,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int)",1,14,126,"2,353",17
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",3,3,39,242,5
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.drawLowFarOut(double,Graphics2D,double,double)",1,1,15,175,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.drawMultipleEllipse(Point2D,double,double,Graphics2D)",1,1,17,138,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.drawVerticalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int)",1,25,198,"3,983",28
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.equals(Object)",11,1,43,420,11
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.findRangeBounds(CategoryDataset)",1,1,12,15,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getArtifactPaint()",1,1,11,8,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getFillBox()",1,1,10,13,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getItemMargin()",1,1,11,13,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getLegendItem(int,int)",3,5,49,516,7
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getMaximumBarWidth()",1,1,13,13,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getUseOutlinePaintForWhiskers()",1,1,11,11,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.getWhiskerWidth()",1,1,12,13,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.initialise(Graphics2D,Rectangle2D,CategoryPlot,int,PlotRenderingInfo)",1,7,54,561,7
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.isMeanVisible()",1,1,13,13,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.isMedianVisible()",1,1,13,13,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setArtifactPaint(Paint)",1,1,13,26,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setFillBox(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setItemMargin(double)",1,1,12,19,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setMaximumBarWidth(double)",1,1,16,19,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setMeanVisible(boolean)",2,1,18,43,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setMedianVisible(boolean)",2,1,18,43,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setUseOutlinePaintForWhiskers(boolean)",2,1,16,43,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.setWhiskerWidth(double)",3,1,22,100,4
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testBug1572478Horizontal()",1,1,4,354,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testBug1572478Vertical()",1,1,4,333,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testDrawWithNullInfo()",1,2,24,211,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testDrawWithNullMaxOutlier()",1,1,27,242,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testDrawWithNullMaxRegular()",1,2,24,211,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testDrawWithNullMean()",1,1,27,242,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testDrawWithNullMedian()",1,1,27,242,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testDrawWithNullMinOutlier()",1,1,27,235,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testDrawWithNullMinRegular()",1,1,27,242,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testDrawWithNullQ1()",1,1,27,242,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testDrawWithNullQ3()",1,1,27,242,2
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testEquals()",1,1,35,488,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testGetLegendItem()",1,1,23,238,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testGetLegendItemSeriesIndex()",1,1,23,292,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.category.CategoryItemRendererState.CategoryItemRendererState(PlotRenderingInfo)",1,1,11,30,1
"org.jfree.chart.renderer.category.CategoryItemRendererState.getBarWidth()",1,1,10,13,1
"org.jfree.chart.renderer.category.CategoryItemRendererState.getCrosshairState()",1,1,12,8,1
"org.jfree.chart.renderer.category.CategoryItemRendererState.getSeriesRunningTotal()",1,1,10,13,1
"org.jfree.chart.renderer.category.CategoryItemRendererState.getVisibleSeriesArray()",2,1,16,96,2
"org.jfree.chart.renderer.category.CategoryItemRendererState.getVisibleSeriesCount()",2,1,14,48,2
"org.jfree.chart.renderer.category.CategoryItemRendererState.getVisibleSeriesIndex(int)",4,1,25,144,4
"org.jfree.chart.renderer.category.CategoryItemRendererState.setBarWidth(double)",1,1,11,15,1
"org.jfree.chart.renderer.category.CategoryItemRendererState.setCrosshairState(CategoryCrosshairState)",1,1,12,11,1
"org.jfree.chart.renderer.category.CategoryItemRendererState.setSeriesRunningTotal(double)",1,1,11,11,1
"org.jfree.chart.renderer.category.CategoryItemRendererState.setVisibleSeriesArray(int[])",1,1,10,15,1
"org.jfree.chart.renderer.category.CategoryStepRenderer.CategoryStepRenderer()",1,1,6,8,1
"org.jfree.chart.renderer.category.CategoryStepRenderer.CategoryStepRenderer(boolean)",1,1,10,46,1
"org.jfree.chart.renderer.category.CategoryStepRenderer.State.State(PlotRenderingInfo)",1,1,10,19,1
"org.jfree.chart.renderer.category.CategoryStepRenderer.createState(PlotRenderingInfo)",1,1,14,11,1
"org.jfree.chart.renderer.category.CategoryStepRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",3,6,83,"1,281",10
"org.jfree.chart.renderer.category.CategoryStepRenderer.drawLine(Graphics2D,State,PlotOrientation,double,double,double,double)",1,3,29,154,3
"org.jfree.chart.renderer.category.CategoryStepRenderer.equals(Object)",4,1,21,110,4
"org.jfree.chart.renderer.category.CategoryStepRenderer.getLegendItem(int,int)",3,5,47,471,7
"org.jfree.chart.renderer.category.CategoryStepRenderer.getStagger()",1,1,8,11,1
"org.jfree.chart.renderer.category.CategoryStepRenderer.setStagger(boolean)",1,1,11,19,1
"org.jfree.chart.renderer.category.CategoryStepRendererTest.testCloning()",1,1,11,77,1
"org.jfree.chart.renderer.category.CategoryStepRendererTest.testEquals()",1,1,13,79,1
"org.jfree.chart.renderer.category.CategoryStepRendererTest.testGetLegendItemSeriesIndex()",1,1,23,292,1
"org.jfree.chart.renderer.category.CategoryStepRendererTest.testPublicCloneable()",1,1,8,19,1
"org.jfree.chart.renderer.category.CategoryStepRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.category.DefaultCategoryItemRendererTest.testCloning()",1,1,12,71,1
"org.jfree.chart.renderer.category.DefaultCategoryItemRendererTest.testEquals()",1,1,9,18,1
"org.jfree.chart.renderer.category.DefaultCategoryItemRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.DefaultCategoryItemRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.DefaultCategoryItemRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.category.GanttRenderer.GanttRenderer()",1,1,11,64,1
"org.jfree.chart.renderer.category.GanttRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",1,2,29,138,2
"org.jfree.chart.renderer.category.GanttRenderer.drawTask(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,GanttCategoryDataset,int,int)",3,12,130,"2,240",19
"org.jfree.chart.renderer.category.GanttRenderer.drawTasks(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,GanttCategoryDataset,int,int)",4,13,133,"2,312",19
"org.jfree.chart.renderer.category.GanttRenderer.equals(Object)",7,1,30,243,7
"org.jfree.chart.renderer.category.GanttRenderer.getCompletePaint()",1,1,10,8,1
"org.jfree.chart.renderer.category.GanttRenderer.getEndPercent()",1,1,11,13,1
"org.jfree.chart.renderer.category.GanttRenderer.getIncompletePaint()",1,1,10,8,1
"org.jfree.chart.renderer.category.GanttRenderer.getItemMiddle(Comparable,Comparable,CategoryDataset,CategoryAxis,Rectangle2D,RectangleEdge)",1,1,21,38,1
"org.jfree.chart.renderer.category.GanttRenderer.getStartPercent()",1,1,11,13,1
"org.jfree.chart.renderer.category.GanttRenderer.readObject(ObjectInputStream)",1,1,14,41,1
"org.jfree.chart.renderer.category.GanttRenderer.setCompletePaint(Paint)",1,1,13,26,1
"org.jfree.chart.renderer.category.GanttRenderer.setEndPercent(double)",1,1,13,19,1
"org.jfree.chart.renderer.category.GanttRenderer.setIncompletePaint(Paint)",1,1,13,26,1
"org.jfree.chart.renderer.category.GanttRenderer.setStartPercent(double)",1,1,13,19,1
"org.jfree.chart.renderer.category.GanttRenderer.writeObject(ObjectOutputStream)",1,1,12,41,1
"org.jfree.chart.renderer.category.GanttRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.category.GanttRendererTest.testEquals()",1,1,25,257,1
"org.jfree.chart.renderer.category.GanttRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.GanttRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.GanttRendererTest.testSerialization()",1,1,13,101,1
"org.jfree.chart.renderer.category.GradientBarPainter.GradientBarPainter()",1,1,6,15,1
"org.jfree.chart.renderer.category.GradientBarPainter.GradientBarPainter(double,double,double)",1,1,12,41,1
"org.jfree.chart.renderer.category.GradientBarPainter.createShadow(RectangularShape,double,double,RectangleEdge,boolean)",1,1,51,423,9
"org.jfree.chart.renderer.category.GradientBarPainter.equals(Object)",6,1,27,174,6
"org.jfree.chart.renderer.category.GradientBarPainter.hashCode()",1,1,13,69,1
"org.jfree.chart.renderer.category.GradientBarPainter.paintBar(Graphics2D,BarRenderer,int,int,RectangularShape,RectangleEdge)",2,7,87,"1,571",11
"org.jfree.chart.renderer.category.GradientBarPainter.paintBarShadow(Graphics2D,BarRenderer,int,int,RectangularShape,RectangleEdge,boolean)",3,2,30,161,3
"org.jfree.chart.renderer.category.GradientBarPainter.splitHorizontalBar(RectangularShape,double,double,double)",1,1,28,385,1
"org.jfree.chart.renderer.category.GradientBarPainter.splitVerticalBar(RectangularShape,double,double,double)",1,1,28,385,1
"org.jfree.chart.renderer.category.GradientBarPainterTest.testCloning()",1,1,10,38,1
"org.jfree.chart.renderer.category.GradientBarPainterTest.testEquals()",1,1,21,261,1
"org.jfree.chart.renderer.category.GradientBarPainterTest.testHashcode()",1,1,12,89,1
"org.jfree.chart.renderer.category.GradientBarPainterTest.testSerialization()",1,1,9,36,1
"org.jfree.chart.renderer.category.GroupedStackedBarRenderer.GroupedStackedBarRenderer()",1,1,7,15,1
"org.jfree.chart.renderer.category.GroupedStackedBarRenderer.calculateBarW0(CategoryPlot,PlotOrientation,Rectangle2D,CategoryAxis,CategoryItemRendererState,int,int)",1,3,50,524,3
"org.jfree.chart.renderer.category.GroupedStackedBarRenderer.calculateBarWidth(CategoryPlot,Rectangle2D,int,CategoryItemRendererState)",1,7,48,508,7
"org.jfree.chart.renderer.category.GroupedStackedBarRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",2,10,108,"1,498",21
"org.jfree.chart.renderer.category.GroupedStackedBarRenderer.equals(Object)",4,1,21,114,4
"org.jfree.chart.renderer.category.GroupedStackedBarRenderer.findRangeBounds(CategoryDataset)",2,1,18,43,2
"org.jfree.chart.renderer.category.GroupedStackedBarRenderer.setSeriesToGroupMap(KeyToGroupMap)",1,1,11,26,1
"org.jfree.chart.renderer.category.GroupedStackedBarRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.category.GroupedStackedBarRendererTest.testDrawWithNullInfo()",1,2,25,197,2
"org.jfree.chart.renderer.category.GroupedStackedBarRendererTest.testEquals()",1,1,19,148,1
"org.jfree.chart.renderer.category.GroupedStackedBarRendererTest.testFindRangeBounds()",1,1,26,451,1
"org.jfree.chart.renderer.category.GroupedStackedBarRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.GroupedStackedBarRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.category.IntervalBarRenderer.IntervalBarRenderer()",1,1,6,4,1
"org.jfree.chart.renderer.category.IntervalBarRenderer.drawInterval(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,IntervalCategoryDataset,int,int)",4,9,90,"1,157",13
"org.jfree.chart.renderer.category.IntervalBarRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",1,2,28,138,2
"org.jfree.chart.renderer.category.IntervalBarRenderer.equals(Object)",3,1,18,66,3
"org.jfree.chart.renderer.category.IntervalBarRenderer.findRangeBounds(CategoryDataset)",1,1,14,11,1
"org.jfree.chart.renderer.category.IntervalBarRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.category.IntervalBarRendererTest.testDrawWithNullInfo()",1,2,24,204,2
"org.jfree.chart.renderer.category.IntervalBarRendererTest.testEquals()",1,1,12,38,1
"org.jfree.chart.renderer.category.IntervalBarRendererTest.testFindRangeBounds()",1,1,22,354,1
"org.jfree.chart.renderer.category.IntervalBarRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.IntervalBarRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.IntervalBarRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.category.LayeredBarRenderer.LayeredBarRenderer()",1,1,7,15,1
"org.jfree.chart.renderer.category.LayeredBarRenderer.calculateBarWidth(CategoryPlot,Rectangle2D,int,CategoryItemRendererState)",1,6,44,434,6
"org.jfree.chart.renderer.category.LayeredBarRenderer.drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int)",6,9,112,"1,736",22
"org.jfree.chart.renderer.category.LayeredBarRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",1,3,28,146,3
"org.jfree.chart.renderer.category.LayeredBarRenderer.drawVerticalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int)",6,11,113,"1,787",21
"org.jfree.chart.renderer.category.LayeredBarRenderer.getSeriesBarWidth(int)",1,2,16,70,2
"org.jfree.chart.renderer.category.LayeredBarRenderer.setSeriesBarWidth(int,double)",1,1,10,33,1
"org.jfree.chart.renderer.category.LayeredBarRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.category.LayeredBarRendererTest.testDrawWithNullInfo()",1,2,20,112,2
"org.jfree.chart.renderer.category.LayeredBarRendererTest.testEquals()",1,1,9,18,1
"org.jfree.chart.renderer.category.LayeredBarRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.LayeredBarRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.LayeredBarRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.category.LevelRenderer.LevelRenderer()",1,1,13,94,1
"org.jfree.chart.renderer.category.LevelRenderer.calculateBarW0(CategoryPlot,PlotOrientation,Rectangle2D,CategoryAxis,CategoryItemRendererState,int,int)",1,4,47,452,4
"org.jfree.chart.renderer.category.LevelRenderer.calculateItemWidth(CategoryPlot,Rectangle2D,int,CategoryItemRendererState)",1,8,43,533,8
"org.jfree.chart.renderer.category.LevelRenderer.calculateSeriesWidth(double,CategoryAxis,int,int)",1,2,19,125,2
"org.jfree.chart.renderer.category.LevelRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",3,7,79,"1,041",9
"org.jfree.chart.renderer.category.LevelRenderer.equals(Object)",5,1,24,148,5
"org.jfree.chart.renderer.category.LevelRenderer.getItemMargin()",1,1,10,13,1
"org.jfree.chart.renderer.category.LevelRenderer.getItemMiddle(Comparable,Comparable,CategoryDataset,CategoryAxis,Rectangle2D,RectangleEdge)",1,1,21,43,1
"org.jfree.chart.renderer.category.LevelRenderer.getMaximumItemWidth()",1,1,11,13,1
"org.jfree.chart.renderer.category.LevelRenderer.hashCode()",1,1,12,56,1
"org.jfree.chart.renderer.category.LevelRenderer.initialise(Graphics2D,Rectangle2D,CategoryPlot,int,PlotRenderingInfo)",1,1,24,57,1
"org.jfree.chart.renderer.category.LevelRenderer.setItemMargin(double)",1,1,14,19,1
"org.jfree.chart.renderer.category.LevelRenderer.setMaximumItemWidth(double)",1,1,13,19,1
"org.jfree.chart.renderer.category.LevelRendererTest.checkIndependence(LevelRenderer,LevelRenderer)",1,1,18,89,3
"org.jfree.chart.renderer.category.LevelRendererTest.testCloning()",1,1,14,122,1
"org.jfree.chart.renderer.category.LevelRendererTest.testDrawWithNullInfo()",1,2,20,112,2
"org.jfree.chart.renderer.category.LevelRendererTest.testEquals()",1,1,18,143,1
"org.jfree.chart.renderer.category.LevelRendererTest.testGetLegendItemSeriesIndex()",1,1,23,292,1
"org.jfree.chart.renderer.category.LevelRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.LevelRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.LevelRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.LineAndShapeRenderer()",1,1,6,10,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.LineAndShapeRenderer(boolean,boolean)",1,1,20,169,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.clone()",1,1,18,79,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",5,20,139,"2,055",26
"org.jfree.chart.renderer.category.LineAndShapeRenderer.equals(Object)",12,1,48,478,12
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getDefaultLinesVisible()",1,1,10,11,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getDefaultShapesFilled()",1,1,10,13,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getDefaultShapesVisible()",1,1,10,13,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getDrawOutlines()",1,1,11,13,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemLineVisible(int,int)",2,1,16,53,2
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemMargin()",1,1,16,13,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeFilled(int,int)",1,1,14,18,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getItemShapeVisible(int,int)",2,1,16,53,2
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getLegendItem(int,int)",3,8,57,786,9
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getPassCount()",1,1,9,8,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesLinesVisible(int)",1,1,13,22,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesFilled(int)",2,1,15,59,2
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getSeriesShapesVisible(int)",1,1,13,22,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getUseFillPaint()",1,1,12,13,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getUseOutlinePaint()",1,1,11,13,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.getUseSeriesOffset()",1,1,13,13,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setDefaultLinesVisible(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setDefaultShapesFilled(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setDefaultShapesVisible(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setDrawOutlines(boolean)",1,1,16,19,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setItemMargin(double)",2,1,19,72,3
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesLinesVisible(int,Boolean)",1,1,13,31,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesLinesVisible(int,boolean)",1,1,12,26,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesFilled(int,Boolean)",1,1,13,31,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesFilled(int,boolean)",1,1,13,26,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible(int,Boolean)",1,1,13,31,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setSeriesShapesVisible(int,boolean)",1,1,12,26,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setUseFillPaint(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setUseOutlinePaint(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.category.LineAndShapeRenderer.setUseSeriesOffset(boolean)",1,1,15,19,1
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.checkIndependence(LineAndShapeRenderer,LineAndShapeRenderer)",14,1,67,622,14
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.testCloning()",1,1,12,88,1
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.testEquals()",1,1,45,673,1
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.testFindRangeBounds()",1,1,21,348,1
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.testGetLegendItemSeriesIndex()",1,1,23,292,1
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.LineAndShapeRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.MinMaxCategoryRenderer()",1,1,6,4,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",1,12,101,"1,668",13
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.equals(Object)",6,1,31,203,6
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getGroupPaint()",1,1,11,8,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getGroupStroke()",1,1,11,8,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon(Shape,Paint,Paint)",1,3,4,306,3
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getIcon(Shape,boolean,boolean)",1,3,4,261,3
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getMaxIcon()",1,1,11,8,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getMinIcon()",1,1,11,8,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.getObjectIcon()",1,1,10,8,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.isDrawLines()",1,1,11,13,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.readObject(ObjectInputStream)",1,1,19,256,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.setDrawLines(boolean)",1,2,15,38,2
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.setGroupPaint(Paint)",1,1,14,26,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.setGroupStroke(Stroke)",1,1,12,26,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.setMaxIcon(Icon)",1,1,14,26,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.setMinIcon(Icon)",1,1,14,26,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.setObjectIcon(Icon)",1,1,13,26,1
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.renderer.category.MinMaxCategoryRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.category.MinMaxCategoryRendererTest.testDrawWithNullInfo()",1,2,20,106,2
"org.jfree.chart.renderer.category.MinMaxCategoryRendererTest.testEquals()",1,1,23,272,1
"org.jfree.chart.renderer.category.MinMaxCategoryRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.MinMaxCategoryRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.MinMaxCategoryRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.category.ScatterRenderer.ScatterRenderer()",1,1,12,81,1
"org.jfree.chart.renderer.category.ScatterRenderer.clone()",1,1,14,36,1
"org.jfree.chart.renderer.category.ScatterRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",4,9,79,934,12
"org.jfree.chart.renderer.category.ScatterRenderer.equals(Object)",10,1,39,372,10
"org.jfree.chart.renderer.category.ScatterRenderer.findRangeBounds(CategoryDataset)",1,1,14,11,1
"org.jfree.chart.renderer.category.ScatterRenderer.getBaseShapesFilled()",1,1,8,11,1
"org.jfree.chart.renderer.category.ScatterRenderer.getDrawOutlines()",1,1,11,13,1
"org.jfree.chart.renderer.category.ScatterRenderer.getItemMargin()",1,1,14,13,1
"org.jfree.chart.renderer.category.ScatterRenderer.getItemShapeFilled(int,int)",1,1,13,18,1
"org.jfree.chart.renderer.category.ScatterRenderer.getLegendItem(int,int)",3,8,55,732,9
"org.jfree.chart.renderer.category.ScatterRenderer.getSeriesShapesFilled(int)",2,2,16,70,2
"org.jfree.chart.renderer.category.ScatterRenderer.getUseFillPaint()",1,1,10,11,1
"org.jfree.chart.renderer.category.ScatterRenderer.getUseOutlinePaint()",1,1,11,13,1
"org.jfree.chart.renderer.category.ScatterRenderer.getUseSeriesOffset()",1,1,11,13,1
"org.jfree.chart.renderer.category.ScatterRenderer.readObject(ObjectInputStream)",1,1,11,11,1
"org.jfree.chart.renderer.category.ScatterRenderer.setBaseShapesFilled(boolean)",1,1,10,19,1
"org.jfree.chart.renderer.category.ScatterRenderer.setDrawOutlines(boolean)",1,1,15,19,1
"org.jfree.chart.renderer.category.ScatterRenderer.setItemMargin(double)",2,1,17,72,3
"org.jfree.chart.renderer.category.ScatterRenderer.setSeriesShapesFilled(int,Boolean)",1,1,11,28,1
"org.jfree.chart.renderer.category.ScatterRenderer.setSeriesShapesFilled(int,boolean)",1,1,11,38,1
"org.jfree.chart.renderer.category.ScatterRenderer.setUseFillPaint(boolean)",1,1,11,19,1
"org.jfree.chart.renderer.category.ScatterRenderer.setUseOutlinePaint(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.category.ScatterRenderer.setUseSeriesOffset(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.category.ScatterRenderer.writeObject(ObjectOutputStream)",1,1,9,11,1
"org.jfree.chart.renderer.category.ScatterRendererTest.checkIndependence(ScatterRenderer,ScatterRenderer)",6,1,34,199,6
"org.jfree.chart.renderer.category.ScatterRendererTest.testCloning()",1,1,12,88,1
"org.jfree.chart.renderer.category.ScatterRendererTest.testEquals()",1,1,33,387,1
"org.jfree.chart.renderer.category.ScatterRendererTest.testFindRangeBounds()",1,1,27,470,1
"org.jfree.chart.renderer.category.ScatterRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.ScatterRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.ScatterRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.category.StackedAreaRenderer.StackedAreaRenderer()",1,1,6,8,1
"org.jfree.chart.renderer.category.StackedAreaRenderer.StackedAreaRenderer(boolean)",1,1,10,19,1
"org.jfree.chart.renderer.category.StackedAreaRenderer.adjustedStackValues(double[],double[])",1,1,26,233,5
"org.jfree.chart.renderer.category.StackedAreaRenderer.averageStackValues(double[],double[])",1,1,15,103,1
"org.jfree.chart.renderer.category.StackedAreaRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",2,15,192,"3,697",16
"org.jfree.chart.renderer.category.StackedAreaRenderer.equals(Object)",4,1,21,110,4
"org.jfree.chart.renderer.category.StackedAreaRenderer.findRangeBounds(CategoryDataset)",3,2,20,66,3
"org.jfree.chart.renderer.category.StackedAreaRenderer.getPassCount()",1,1,11,8,1
"org.jfree.chart.renderer.category.StackedAreaRenderer.getRenderAsPercentages()",1,1,12,11,1
"org.jfree.chart.renderer.category.StackedAreaRenderer.getStackValues(CategoryDataset,int,int,int[])",1,5,44,343,8
"org.jfree.chart.renderer.category.StackedAreaRenderer.setRenderAsPercentages(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.category.StackedAreaRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.category.StackedAreaRendererTest.testEquals()",1,1,13,72,1
"org.jfree.chart.renderer.category.StackedAreaRendererTest.testFindRangeBounds()",1,1,21,343,1
"org.jfree.chart.renderer.category.StackedAreaRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.StackedAreaRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.StackedAreaRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.category.StackedBarRenderer.StackedBarRenderer()",1,1,10,8,1
"org.jfree.chart.renderer.category.StackedBarRenderer.StackedBarRenderer(boolean)",1,1,18,72,1
"org.jfree.chart.renderer.category.StackedBarRenderer.calculateBarWidth(CategoryPlot,Rectangle2D,int,CategoryItemRendererState)",1,6,40,396,6
"org.jfree.chart.renderer.category.StackedBarRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",3,17,126,"1,863",30
"org.jfree.chart.renderer.category.StackedBarRenderer.equals(Object)",4,1,21,110,4
"org.jfree.chart.renderer.category.StackedBarRenderer.findRangeBounds(CategoryDataset)",3,2,20,72,3
"org.jfree.chart.renderer.category.StackedBarRenderer.getPassCount()",1,1,12,8,1
"org.jfree.chart.renderer.category.StackedBarRenderer.getRenderAsPercentages()",1,1,12,13,1
"org.jfree.chart.renderer.category.StackedBarRenderer.setRenderAsPercentages(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.category.StackedBarRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.category.StackedBarRendererTest.testEquals()",1,1,14,86,1
"org.jfree.chart.renderer.category.StackedBarRendererTest.testFindRangeBounds()",1,1,21,343,1
"org.jfree.chart.renderer.category.StackedBarRendererTest.testHashCode()",1,1,12,60,1
"org.jfree.chart.renderer.category.StackedBarRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.StackedBarRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.category.StandardBarPainter.StandardBarPainter()",1,1,5,0,1
"org.jfree.chart.renderer.category.StandardBarPainter.createShadow(RectangularShape,double,double,RectangleEdge,boolean)",1,1,51,423,9
"org.jfree.chart.renderer.category.StandardBarPainter.equals(Object)",3,1,17,55,3
"org.jfree.chart.renderer.category.StandardBarPainter.hashCode()",1,1,11,13,1
"org.jfree.chart.renderer.category.StandardBarPainter.paintBar(Graphics2D,BarRenderer,int,int,RectangularShape,RectangleEdge)",1,4,33,266,6
"org.jfree.chart.renderer.category.StandardBarPainter.paintBarShadow(Graphics2D,BarRenderer,int,int,RectangularShape,RectangleEdge,boolean)",3,2,30,161,3
"org.jfree.chart.renderer.category.StandardBarPainterTest.testCloning()",1,1,10,23,1
"org.jfree.chart.renderer.category.StandardBarPainterTest.testEquals()",1,1,9,18,1
"org.jfree.chart.renderer.category.StandardBarPainterTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.StandardBarPainterTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.category.StatisticalBarRenderer.StatisticalBarRenderer()",1,1,8,31,1
"org.jfree.chart.renderer.category.StatisticalBarRenderer.drawHorizontalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int,int)",6,13,134,"1,999",22
"org.jfree.chart.renderer.category.StatisticalBarRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",3,3,40,275,5
"org.jfree.chart.renderer.category.StatisticalBarRenderer.drawVerticalItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,StatisticalCategoryDataset,int,int,int)",6,13,134,"2,015",22
"org.jfree.chart.renderer.category.StatisticalBarRenderer.equals(Object)",5,1,26,159,5
"org.jfree.chart.renderer.category.StatisticalBarRenderer.findRangeBounds(CategoryDataset)",1,1,14,11,1
"org.jfree.chart.renderer.category.StatisticalBarRenderer.getErrorIndicatorPaint()",1,1,11,8,1
"org.jfree.chart.renderer.category.StatisticalBarRenderer.getErrorIndicatorStroke()",1,1,13,8,1
"org.jfree.chart.renderer.category.StatisticalBarRenderer.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.renderer.category.StatisticalBarRenderer.setErrorIndicatorPaint(Paint)",1,1,13,15,1
"org.jfree.chart.renderer.category.StatisticalBarRenderer.setErrorIndicatorStroke(Stroke)",1,1,16,15,1
"org.jfree.chart.renderer.category.StatisticalBarRenderer.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testDrawWithNullDeviationHorizontal()",1,2,24,173,2
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testDrawWithNullDeviationVertical()",1,2,23,155,2
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testDrawWithNullInfo()",1,2,22,151,2
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testDrawWithNullMeanHorizontal()",1,2,24,173,2
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testDrawWithNullMeanVertical()",1,2,23,155,2
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testEquals()",1,1,17,136,1
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testFindRangeBounds()",1,1,26,465,1
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.StatisticalBarRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.StatisticalLineAndShapeRenderer()",1,1,6,10,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.StatisticalLineAndShapeRenderer(boolean,boolean)",1,1,12,43,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",5,27,199,"3,249",33
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.equals(Object)",5,1,27,159,5
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.findRangeBounds(CategoryDataset)",1,1,13,11,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.getErrorIndicatorPaint()",1,1,11,8,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.getErrorIndicatorStroke()",1,1,13,8,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.hashCode()",1,1,11,38,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.setErrorIndicatorPaint(Paint)",1,1,13,15,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.setErrorIndicatorStroke(Stroke)",1,1,15,15,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest.test1562759()",1,1,13,69,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest.testCloning()",1,1,13,71,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest.testDrawWithNullInfo()",1,2,22,151,2
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest.testEquals()",1,1,16,86,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest.testFindRangeBounds()",1,1,24,384,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest.testHashcode()",1,1,14,60,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest.testPublicCloneable()",1,1,9,15,1
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest.testSerialization()",1,1,11,22,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.WaterfallBarRenderer()",1,1,13,165,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.WaterfallBarRenderer(Paint,Paint,Paint,Paint)",1,1,27,142,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.drawItem(Graphics2D,CategoryItemRendererState,Rectangle2D,CategoryPlot,CategoryAxis,ValueAxis,CategoryDataset,int,int,int)",1,15,114,"1,658",18
"org.jfree.chart.renderer.category.WaterfallBarRenderer.equals(Object)",8,1,35,271,8
"org.jfree.chart.renderer.category.WaterfallBarRenderer.findRangeBounds(CategoryDataset)",3,4,44,428,7
"org.jfree.chart.renderer.category.WaterfallBarRenderer.getFirstBarPaint()",1,1,8,8,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.getLastBarPaint()",1,1,8,8,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.getNegativeBarPaint()",1,1,8,8,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.getPositiveBarPaint()",1,1,8,8,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.readObject(ObjectInputStream)",1,1,16,72,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.setFirstBarPaint(Paint)",1,1,11,26,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.setLastBarPaint(Paint)",1,1,11,26,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.setNegativeBarPaint(Paint)",1,1,11,26,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.setPositiveBarPaint(Paint)",1,1,10,26,1
"org.jfree.chart.renderer.category.WaterfallBarRenderer.writeObject(ObjectOutputStream)",1,1,14,72,1
"org.jfree.chart.renderer.category.WaterfallBarRendererTest.testCloning()",1,1,16,132,1
"org.jfree.chart.renderer.category.WaterfallBarRendererTest.testEquals()",1,1,29,239,1
"org.jfree.chart.renderer.category.WaterfallBarRendererTest.testFindRangeBounds()",1,1,8,19,1
"org.jfree.chart.renderer.category.WaterfallBarRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.category.WaterfallBarRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.category.WaterfallBarRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.AbstractXYItemRenderer()",1,1,15,81,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.addAnnotation(XYAnnotation)",1,1,12,11,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.addAnnotation(XYAnnotation,Layer)",3,3,25,146,3
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.addEntity(EntityCollection,Shape,XYDataset,int,int,double,double)",2,4,43,340,5
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.annotationChanged(AnnotationChangeEvent)",1,1,12,4,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.beginElementGroup(Graphics2D,Comparable,int)",1,1,16,24,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.calculateDomainMarkerTextAnchorPoint(Graphics2D,PlotOrientation,Rectangle2D,Rectangle2D,RectangleInsets,LengthAdjustmentType,RectangleAnchor)",1,3,28,110,3
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.calculateRangeMarkerTextAnchorPoint(Graphics2D,PlotOrientation,Rectangle2D,Rectangle2D,RectangleInsets,LengthAdjustmentType,RectangleAnchor)",1,3,28,110,3
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.clone()",1,1,32,245,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawAnnotations(Graphics2D,Rectangle2D,ValueAxis,ValueAxis,Layer,PlotRenderingInfo)",3,4,31,197,4
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainLine(Graphics2D,XYPlot,ValueAxis,Rectangle2D,double,Paint,Stroke)",2,3,39,338,4
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawDomainMarker(Graphics2D,XYPlot,ValueAxis,Marker,Rectangle2D)",7,18,159,"2,803",20
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawItemLabel(Graphics2D,PlotOrientation,XYDataset,int,int,double,double,boolean)",1,3,40,342,3
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeLine(Graphics2D,XYPlot,ValueAxis,Rectangle2D,double,Paint,Stroke)",2,3,37,351,4
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.drawRangeMarker(Graphics2D,XYPlot,ValueAxis,Marker,Rectangle2D)",7,18,159,"2,803",20
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.equals(Object)",13,1,53,567,13
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.fillDomainGridBand(Graphics2D,XYPlot,ValueAxis,Rectangle2D,double,double)",1,3,33,312,3
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.fillRangeGridBand(Graphics2D,XYPlot,ValueAxis,Rectangle2D,double,double)",1,3,32,312,3
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds(XYDataset)",1,1,15,11,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findDomainBounds(XYDataset,boolean)",3,4,30,178,5
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds(XYDataset)",1,1,15,11,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.findRangeBounds(XYDataset,boolean)",3,7,48,393,9
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getAnnotations()",1,1,15,30,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDefaultItemLabelGenerator()",1,1,9,8,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDefaultToolTipGenerator()",1,1,11,8,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getDrawingSupplier()",1,2,14,38,2
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getItemLabelGenerator(int,int)",1,1,21,60,2
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItem(int,int)",3,5,60,641,7
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemLabelGenerator()",1,1,11,8,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemToolTipGenerator()",1,1,10,8,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItemURLGenerator()",1,1,10,8,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getLegendItems()",2,5,27,225,6
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPassCount()",1,1,11,8,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getPlot()",1,1,9,8,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getSeriesItemLabelGenerator(int)",1,1,11,19,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getSeriesToolTipGenerator(int)",1,1,11,19,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getToolTipGenerator(int,int)",1,1,20,57,2
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.getURLGenerator()",1,1,9,8,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,22,8,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.lineTo(GeneralPath,double,double)",1,1,14,34,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.moveTo(GeneralPath,double,double)",1,1,14,34,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.removeAnnotation(XYAnnotation)",1,1,18,71,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.removeAnnotations()",1,3,16,69,3
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setDefaultItemLabelGenerator(XYItemLabelGenerator)",1,1,11,15,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setDefaultToolTipGenerator(XYToolTipGenerator)",1,1,13,15,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setLegendItemLabelGenerator(XYSeriesLabelGenerator)",1,1,14,26,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setLegendItemToolTipGenerator(XYSeriesLabelGenerator)",1,1,13,15,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setLegendItemURLGenerator(XYSeriesLabelGenerator)",1,1,12,15,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setPlot(XYPlot)",1,1,9,11,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setSeriesItemLabelGenerator(int,XYItemLabelGenerator)",1,1,13,28,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setSeriesToolTipGenerator(int,XYToolTipGenerator)",1,1,13,28,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.setURLGenerator(XYURLGenerator)",1,1,11,15,1
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer.updateCrosshairValues(CrosshairState,double,double,int,double,double,PlotOrientation)",1,5,42,210,5
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.createDataset1()",1,1,14,72,1
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.testCloning_LegendItemLabelGenerator()",1,1,17,124,1
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.testCloning_LegendItemToolTipGenerator()",1,1,18,124,1
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.testCloning_LegendItemURLGenerator()",1,1,18,124,1
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.testEquals_ObjectList()",1,1,10,79,1
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.testEquals_ObjectList2()",1,1,10,73,1
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.testFindDomainBounds()",1,1,14,94,1
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest.testFindRangeBounds()",1,1,9,26,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.CandlestickRenderer()",1,1,6,11,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.CandlestickRenderer(double)",1,1,11,19,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.CandlestickRenderer(double,boolean,XYToolTipGenerator)",1,1,24,108,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",4,21,216,"3,621",26
"org.jfree.chart.renderer.xy.CandlestickRenderer.equals(Object)",13,1,49,527,13
"org.jfree.chart.renderer.xy.CandlestickRenderer.findRangeBounds(XYDataset)",1,1,13,11,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.getAutoWidthFactor()",1,1,12,13,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.getAutoWidthGap()",1,1,11,13,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.getAutoWidthMethod()",1,1,10,13,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.getCandleWidth()",1,1,10,13,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.getDownPaint()",1,1,11,8,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.getDrawVolume()",1,1,13,13,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.getMaxCandleWidthInMilliseconds()",1,1,10,13,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.getUpPaint()",1,1,11,8,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.getUseOutlinePaint()",1,1,14,13,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.getVolumePaint()",1,1,13,8,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,4,46,391,5
"org.jfree.chart.renderer.xy.CandlestickRenderer.readObject(ObjectInputStream)",1,1,15,56,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.setAutoWidthFactor(double)",1,2,18,53,2
"org.jfree.chart.renderer.xy.CandlestickRenderer.setAutoWidthGap(double)",1,2,19,53,2
"org.jfree.chart.renderer.xy.CandlestickRenderer.setAutoWidthMethod(int)",1,2,32,53,2
"org.jfree.chart.renderer.xy.CandlestickRenderer.setCandleWidth(double)",1,2,19,53,2
"org.jfree.chart.renderer.xy.CandlestickRenderer.setDownPaint(Paint)",1,1,11,15,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.setDrawVolume(boolean)",1,2,15,38,2
"org.jfree.chart.renderer.xy.CandlestickRenderer.setMaxCandleWidthInMilliseconds(double)",1,1,16,33,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.setUpPaint(Paint)",1,1,13,15,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.setUseOutlinePaint(boolean)",1,2,17,38,2
"org.jfree.chart.renderer.xy.CandlestickRenderer.setVolumePaint(Paint)",1,1,16,26,1
"org.jfree.chart.renderer.xy.CandlestickRenderer.writeObject(ObjectOutputStream)",1,1,13,56,1
"org.jfree.chart.renderer.xy.CandlestickRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.CandlestickRendererTest.testConstructor()",1,1,14,116,1
"org.jfree.chart.renderer.xy.CandlestickRendererTest.testEquals()",1,1,61,903,1
"org.jfree.chart.renderer.xy.CandlestickRendererTest.testFindRangeBounds()",1,1,26,285,1
"org.jfree.chart.renderer.xy.CandlestickRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.CandlestickRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.CandlestickRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.ClusteredXYBarRenderer()",1,1,6,11,1
"org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.ClusteredXYBarRenderer(double,boolean)",1,1,12,28,1
"org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",4,12,129,"2,058",23
"org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.equals(Object)",4,1,23,110,4
"org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBounds(XYDataset)",3,2,20,64,3
"org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.findDomainBoundsWithOffset(IntervalXYDataset)",2,3,35,392,4
"org.jfree.chart.renderer.xy.ClusteredXYBarRenderer.getPassCount()",1,1,11,8,1
"org.jfree.chart.renderer.xy.ClusteredXYBarRendererTest.createSampleDataset1()",1,1,27,597,1
"org.jfree.chart.renderer.xy.ClusteredXYBarRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.ClusteredXYBarRendererTest.testEquals()",1,1,18,150,1
"org.jfree.chart.renderer.xy.ClusteredXYBarRendererTest.testFindDomainBounds()",1,1,18,180,1
"org.jfree.chart.renderer.xy.ClusteredXYBarRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.ClusteredXYBarRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.ClusteredXYBarRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.CyclicXYItemRenderer()",1,1,6,4,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.CyclicXYItemRenderer(int)",1,1,8,11,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.CyclicXYItemRenderer(int,XYToolTipGenerator)",1,1,9,15,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.CyclicXYItemRenderer(int,XYToolTipGenerator,XYURLGenerator)",1,1,12,19,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.OverwriteDataSet(double[],double[],XYDataset)",1,1,16,154,2
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.addChangeListener(DatasetChangeListener)",1,1,9,2,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.getDomainOrder()",1,1,9,4,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.getGroup()",1,1,10,11,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.getItemCount(int)",1,1,11,18,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.getSeriesCount()",1,1,9,15,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.getSeriesKey(int)",1,1,11,19,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.getX(int,int)",1,1,12,18,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.getXValue(int,int)",1,2,18,68,2
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.getY(int,int)",1,1,12,18,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.getYValue(int,int)",1,2,18,68,2
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.indexOf(Comparable)",1,1,11,19,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.removeChangeListener(DatasetChangeListener)",1,1,9,2,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet.setGroup(DatasetGroup)",1,1,9,2,1
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",5,29,185,"3,830",48
"org.jfree.chart.renderer.xy.DeviationRenderer.DeviationRenderer()",1,1,7,10,1
"org.jfree.chart.renderer.xy.DeviationRenderer.DeviationRenderer(boolean,boolean)",1,1,11,44,1
"org.jfree.chart.renderer.xy.DeviationRenderer.State.State(PlotRenderingInfo)",1,1,10,30,1
"org.jfree.chart.renderer.xy.DeviationRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",2,12,104,"1,789",13
"org.jfree.chart.renderer.xy.DeviationRenderer.equals(Object)",4,1,21,110,4
"org.jfree.chart.renderer.xy.DeviationRenderer.findRangeBounds(XYDataset)",1,1,13,11,1
"org.jfree.chart.renderer.xy.DeviationRenderer.getAlpha()",1,1,10,13,1
"org.jfree.chart.renderer.xy.DeviationRenderer.getPassCount()",1,1,10,8,1
"org.jfree.chart.renderer.xy.DeviationRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,20,33,1
"org.jfree.chart.renderer.xy.DeviationRenderer.isItemPass(int)",1,1,14,22,1
"org.jfree.chart.renderer.xy.DeviationRenderer.isLinePass(int)",1,1,14,22,1
"org.jfree.chart.renderer.xy.DeviationRenderer.setAlpha(float)",2,1,16,72,3
"org.jfree.chart.renderer.xy.DeviationRenderer.setDrawSeriesLineAsPath(boolean)",1,1,10,4,1
"org.jfree.chart.renderer.xy.DeviationRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.DeviationRendererTest.testEquals()",1,1,15,86,1
"org.jfree.chart.renderer.xy.DeviationRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.DeviationRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.DeviationRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.xy.GradientXYBarPainter.GradientXYBarPainter()",1,1,6,15,1
"org.jfree.chart.renderer.xy.GradientXYBarPainter.GradientXYBarPainter(double,double,double)",1,1,12,41,1
"org.jfree.chart.renderer.xy.GradientXYBarPainter.createShadow(RectangularShape,double,double,RectangleEdge,boolean)",1,1,51,423,9
"org.jfree.chart.renderer.xy.GradientXYBarPainter.equals(Object)",6,1,27,174,6
"org.jfree.chart.renderer.xy.GradientXYBarPainter.hashCode()",1,1,13,69,1
"org.jfree.chart.renderer.xy.GradientXYBarPainter.paintBar(Graphics2D,XYBarRenderer,int,int,RectangularShape,RectangleEdge)",2,7,86,"1,571",11
"org.jfree.chart.renderer.xy.GradientXYBarPainter.paintBarShadow(Graphics2D,XYBarRenderer,int,int,RectangularShape,RectangleEdge,boolean)",3,2,30,156,3
"org.jfree.chart.renderer.xy.GradientXYBarPainter.splitHorizontalBar(RectangularShape,double,double,double)",1,1,28,385,1
"org.jfree.chart.renderer.xy.GradientXYBarPainter.splitVerticalBar(RectangularShape,double,double,double)",1,1,28,385,1
"org.jfree.chart.renderer.xy.GradientXYBarPainterTest.testCloning()",1,1,10,38,1
"org.jfree.chart.renderer.xy.GradientXYBarPainterTest.testEquals()",1,1,21,261,1
"org.jfree.chart.renderer.xy.GradientXYBarPainterTest.testHashcode()",1,1,12,89,1
"org.jfree.chart.renderer.xy.GradientXYBarPainterTest.testSerialization()",1,1,10,36,1
"org.jfree.chart.renderer.xy.HighLowRenderer.HighLowRenderer()",1,1,9,38,1
"org.jfree.chart.renderer.xy.HighLowRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.HighLowRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",5,23,135,"2,197",26
"org.jfree.chart.renderer.xy.HighLowRenderer.equals(Object)",9,1,36,310,9
"org.jfree.chart.renderer.xy.HighLowRenderer.findRangeBounds(XYDataset)",2,2,18,38,2
"org.jfree.chart.renderer.xy.HighLowRenderer.getCloseTickPaint()",1,1,11,8,1
"org.jfree.chart.renderer.xy.HighLowRenderer.getDrawCloseTicks()",1,1,11,13,1
"org.jfree.chart.renderer.xy.HighLowRenderer.getDrawOpenTicks()",1,1,11,13,1
"org.jfree.chart.renderer.xy.HighLowRenderer.getOpenTickPaint()",1,1,11,8,1
"org.jfree.chart.renderer.xy.HighLowRenderer.getTickLength()",1,1,12,13,1
"org.jfree.chart.renderer.xy.HighLowRenderer.readObject(ObjectInputStream)",1,1,14,41,1
"org.jfree.chart.renderer.xy.HighLowRenderer.setCloseTickPaint(Paint)",1,1,14,15,1
"org.jfree.chart.renderer.xy.HighLowRenderer.setDrawCloseTicks(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.xy.HighLowRenderer.setDrawOpenTicks(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.xy.HighLowRenderer.setOpenTickPaint(Paint)",1,1,14,15,1
"org.jfree.chart.renderer.xy.HighLowRenderer.setTickLength(double)",1,1,14,19,1
"org.jfree.chart.renderer.xy.HighLowRenderer.writeObject(ObjectOutputStream)",1,1,12,41,1
"org.jfree.chart.renderer.xy.HighLowRendererTest.testCloning()",1,1,12,87,1
"org.jfree.chart.renderer.xy.HighLowRendererTest.testEquals()",1,1,34,321,1
"org.jfree.chart.renderer.xy.HighLowRendererTest.testFindRangeBounds()",1,1,26,285,1
"org.jfree.chart.renderer.xy.HighLowRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.HighLowRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.HighLowRendererTest.testSerialization()",1,1,10,34,1
"org.jfree.chart.renderer.xy.RendererXYPackageUtils.createTestTableXYDataset()",1,1,17,143,1
"org.jfree.chart.renderer.xy.RendererXYPackageUtils.createTestXYSeriesCollection()",1,1,17,143,1
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer.SamplingXYLineRenderer()",1,1,8,48,1
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer.State.State(PlotRenderingInfo)",1,1,8,8,1
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer.State.startSeriesPass(XYDataset,int,int,int,int,int)",1,1,20,98,1
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer.clone()",1,2,15,59,2
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",2,8,92,"1,299",10
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer.equals(Object)",5,1,24,134,5
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer.getPassCount()",1,1,11,8,1
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,31,66,1
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRenderer()",1,1,6,8,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRenderer(int)",1,1,8,18,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRenderer(int,XYToolTipGenerator,XYURLGenerator)",1,1,13,19,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRendererState.StackedXYAreaRendererState(PlotRenderingInfo)",1,1,12,55,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRendererState.getCurrentSeriesPoints()",1,1,8,8,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRendererState.getLastSeriesPoints()",1,1,8,8,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRendererState.getLine()",1,1,8,8,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRendererState.getSeriesArea()",1,1,8,8,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRendererState.setCurrentSeriesPoints(Stack)",1,1,8,11,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRendererState.setLastSeriesPoints(Stack)",1,1,8,11,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRendererState.setSeriesArea(Polygon)",1,1,8,11,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",1,33,217,"3,270",37
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.equals(Object)",5,2,24,175,6
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.findRangeBounds(XYDataset)",2,2,22,33,2
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.getPassCount()",1,1,9,8,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.getPreviousHeight(TableXYDataset,int,int)",1,2,23,114,3
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.getShapePaint()",1,1,11,8,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.getShapeStroke()",1,1,11,8,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,24,22,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.setShapePaint(Paint)",1,1,12,15,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.setShapeStroke(Stroke)",1,1,12,15,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.StackedXYAreaRenderer2()",1,1,6,10,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.StackedXYAreaRenderer2(XYToolTipGenerator,XYURLGenerator)",1,1,12,24,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.adjustedStackValues(double[],double[])",1,1,26,233,5
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.averageStackValues(double[],double[])",1,1,15,103,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",1,19,232,"4,332",22
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.equals(Object)",4,1,21,110,4
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.findRangeBounds(XYDataset)",3,2,29,232,4
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.getPassCount()",1,1,9,8,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.getRoundXCoordinates()",1,1,13,13,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.getStackValues(TableXYDataset,int,int)",1,2,29,174,4
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2.setRoundXCoordinates(boolean)",1,1,15,19,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test.testDrawWithEmptyDataset()",1,1,25,213,2
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test.testEquals()",1,1,14,96,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test.testFindRangeBounds()",1,1,22,180,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.xy.StackedXYAreaRendererTest.testBug1593156()",1,2,32,351,2
"org.jfree.chart.renderer.xy.StackedXYAreaRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.StackedXYAreaRendererTest.testDrawWithNullInfo()",1,2,31,335,2
"org.jfree.chart.renderer.xy.StackedXYAreaRendererTest.testEquals()",1,1,21,220,1
"org.jfree.chart.renderer.xy.StackedXYAreaRendererTest.testFindRangeBounds()",1,1,16,114,1
"org.jfree.chart.renderer.xy.StackedXYAreaRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.StackedXYAreaRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.StackedXYAreaRendererTest.testSerialization()",1,1,12,51,1
"org.jfree.chart.renderer.xy.StackedXYBarRenderer.StackedXYBarRenderer()",1,1,6,8,1
"org.jfree.chart.renderer.xy.StackedXYBarRenderer.StackedXYBarRenderer(double)",1,1,17,77,1
"org.jfree.chart.renderer.xy.StackedXYBarRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",8,16,174,"2,489",36
"org.jfree.chart.renderer.xy.StackedXYBarRenderer.equals(Object)",4,1,21,110,4
"org.jfree.chart.renderer.xy.StackedXYBarRenderer.findRangeBounds(XYDataset)",3,3,24,70,3
"org.jfree.chart.renderer.xy.StackedXYBarRenderer.getPassCount()",1,1,12,8,1
"org.jfree.chart.renderer.xy.StackedXYBarRenderer.getRenderAsPercentages()",1,1,14,13,1
"org.jfree.chart.renderer.xy.StackedXYBarRenderer.hashCode()",1,1,11,59,2
"org.jfree.chart.renderer.xy.StackedXYBarRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,19,8,1
"org.jfree.chart.renderer.xy.StackedXYBarRenderer.setRenderAsPercentages(boolean)",1,1,15,19,1
"org.jfree.chart.renderer.xy.StackedXYBarRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.StackedXYBarRendererTest.testEquals()",1,1,14,86,1
"org.jfree.chart.renderer.xy.StackedXYBarRendererTest.testFindDomainBounds()",1,1,20,190,1
"org.jfree.chart.renderer.xy.StackedXYBarRendererTest.testFindRangeBounds()",1,1,17,131,1
"org.jfree.chart.renderer.xy.StackedXYBarRendererTest.testHashcode()",1,1,16,120,1
"org.jfree.chart.renderer.xy.StackedXYBarRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.StackedXYBarRendererTest.testSerialization()",1,1,12,70,1
"org.jfree.chart.renderer.xy.StandardXYBarPainter.StandardXYBarPainter()",1,1,5,0,1
"org.jfree.chart.renderer.xy.StandardXYBarPainter.createShadow(RectangularShape,double,double,RectangleEdge,boolean)",1,1,51,423,9
"org.jfree.chart.renderer.xy.StandardXYBarPainter.equals(Object)",3,1,17,55,3
"org.jfree.chart.renderer.xy.StandardXYBarPainter.hashCode()",1,1,11,13,1
"org.jfree.chart.renderer.xy.StandardXYBarPainter.paintBar(Graphics2D,XYBarRenderer,int,int,RectangularShape,RectangleEdge)",1,4,33,266,6
"org.jfree.chart.renderer.xy.StandardXYBarPainter.paintBarShadow(Graphics2D,XYBarRenderer,int,int,RectangularShape,RectangleEdge,boolean)",3,2,30,156,3
"org.jfree.chart.renderer.xy.StandardXYBarPainterTest.testCloning()",1,1,10,23,1
"org.jfree.chart.renderer.xy.StandardXYBarPainterTest.testEquals()",1,1,9,18,1
"org.jfree.chart.renderer.xy.StandardXYBarPainterTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.StandardXYBarPainterTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.StandardXYItemRenderer()",1,1,6,11,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.StandardXYItemRenderer(int)",1,1,10,15,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.StandardXYItemRenderer(int,XYToolTipGenerator)",1,1,13,19,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.StandardXYItemRenderer(int,XYToolTipGenerator,XYURLGenerator)",1,1,32,307,5
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.State.State(PlotRenderingInfo)",1,1,8,8,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.State.getSeriesIndex()",1,1,8,11,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.State.isLastPointGood()",1,1,9,11,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.State.setLastPointGood(boolean)",1,1,9,15,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.State.setSeriesIndex(int)",1,1,8,15,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.clone()",1,1,15,59,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",8,34,186,"3,073",40
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.equals(Object)",13,1,48,526,13
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getBaseShapesFilled()",1,1,10,13,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getBaseShapesVisible()",1,1,10,11,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getDrawSeriesLineAsPath()",1,1,11,13,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getGapThreshold()",1,1,10,13,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getGapThresholdType()",1,1,10,8,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getImage(Plot,int,int,double,double)",1,1,19,16,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getImageHotspot(Plot,int,int,double,double,Image)",1,1,23,77,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getItemShapeFilled(int,int)",2,2,25,78,2
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendItem(int,int)",2,6,53,609,7
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getLegendLine()",1,1,10,8,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getPlotDiscontinuous()",1,1,9,11,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getPlotImages()",1,1,10,13,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getPlotLines()",1,1,10,13,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.getSeriesShapesFilled(int)",1,1,11,19,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,24,38,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.setBaseShapesFilled(boolean)",1,1,11,15,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.setBaseShapesVisible(boolean)",1,2,14,38,2
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.setDrawSeriesLineAsPath(boolean)",1,1,11,15,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.setGapThreshold(double)",1,1,12,19,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.setGapThresholdType(UnitType)",1,1,13,26,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.setLegendLine(Shape)",1,1,13,26,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.setPlotDiscontinuous(boolean)",1,2,15,38,2
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.setPlotImages(boolean)",1,2,15,38,2
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.setPlotLines(boolean)",1,2,15,38,2
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.setSeriesShapesFilled(int,Boolean)",1,1,13,31,1
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.renderer.xy.StandardXYItemRendererTest.testCloning()",1,1,22,294,1
"org.jfree.chart.renderer.xy.StandardXYItemRendererTest.testEquals()",1,1,49,762,1
"org.jfree.chart.renderer.xy.StandardXYItemRendererTest.testGetLegendItemSeriesIndex()",1,1,33,398,1
"org.jfree.chart.renderer.xy.StandardXYItemRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.StandardXYItemRendererTest.testNoDisplayedItem()",1,1,28,349,1
"org.jfree.chart.renderer.xy.StandardXYItemRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.StandardXYItemRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.xy.VectorRenderer.VectorRenderer()",1,1,6,0,1
"org.jfree.chart.renderer.xy.VectorRenderer.clone()",1,1,12,11,1
"org.jfree.chart.renderer.xy.VectorRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",1,6,90,"1,668",7
"org.jfree.chart.renderer.xy.VectorRenderer.equals(Object)",5,1,31,148,5
"org.jfree.chart.renderer.xy.VectorRenderer.findDomainBounds(XYDataset)",2,7,54,625,8
"org.jfree.chart.renderer.xy.VectorRenderer.findRangeBounds(XYDataset)",2,7,54,625,8
"org.jfree.chart.renderer.xy.VectorRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.VectorRendererTest.testEquals()",1,1,16,96,1
"org.jfree.chart.renderer.xy.VectorRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.VectorRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.VectorRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.xy.WindItemRenderer.WindItemRenderer()",1,1,6,4,1
"org.jfree.chart.renderer.xy.WindItemRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.WindItemRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",1,1,75,"1,378",1
"org.jfree.chart.renderer.xy.WindItemRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.WindItemRendererTest.testEquals()",1,1,9,18,1
"org.jfree.chart.renderer.xy.WindItemRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.WindItemRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.WindItemRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.XYAreaRenderer()",1,1,6,8,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.XYAreaRenderer(int)",1,1,8,18,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.XYAreaRenderer(int,XYToolTipGenerator,XYURLGenerator)",1,1,43,467,6
"org.jfree.chart.renderer.xy.XYAreaRenderer.XYAreaRendererState.XYAreaRendererState(PlotRenderingInfo)",1,1,10,30,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.clone()",1,1,13,36,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",2,26,187,"3,435",30
"org.jfree.chart.renderer.xy.XYAreaRenderer.equals(Object)",10,1,39,364,10
"org.jfree.chart.renderer.xy.XYAreaRenderer.getGradientTransformer()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.getLegendArea()",1,1,8,8,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.getLegendItem(int,int)",1,6,45,427,6
"org.jfree.chart.renderer.xy.XYAreaRenderer.getPlotArea()",1,1,8,11,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.getPlotLines()",1,1,8,11,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.getPlotShapes()",1,1,8,11,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.getUseFillPaint()",1,1,11,11,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.hashCode()",1,1,14,96,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,22,22,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.isOutline()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.setGradientTransformer(GradientPaintTransformer)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.setLegendArea(Shape)",1,1,11,26,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.setOutline(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.setUseFillPaint(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYAreaRenderer.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2.XYAreaRenderer2()",1,1,6,10,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2.XYAreaRenderer2(XYToolTipGenerator,XYURLGenerator)",1,1,22,185,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2.clone()",1,1,13,36,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",2,8,124,"2,098",12
"org.jfree.chart.renderer.xy.XYAreaRenderer2.equals(Object)",5,1,24,155,5
"org.jfree.chart.renderer.xy.XYAreaRenderer2.getLegendArea()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2.getLegendItem(int,int)",1,6,45,427,6
"org.jfree.chart.renderer.xy.XYAreaRenderer2.isOutline()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2.setLegendArea(Shape)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2.setOutline(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2Test.testCloning()",1,1,16,166,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2Test.testDrawWithNullInfo()",1,2,31,335,2
"org.jfree.chart.renderer.xy.XYAreaRenderer2Test.testEquals()",1,1,17,188,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2Test.testGetLegendItemSeriesIndex()",1,1,33,398,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2Test.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2Test.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2Test.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.xy.XYAreaRendererTest.testCloning()",1,1,18,211,1
"org.jfree.chart.renderer.xy.XYAreaRendererTest.testDrawWithNullInfo()",1,2,31,335,2
"org.jfree.chart.renderer.xy.XYAreaRendererTest.testEquals()",1,1,47,655,1
"org.jfree.chart.renderer.xy.XYAreaRendererTest.testGetLegendItemSeriesIndex()",1,1,33,398,1
"org.jfree.chart.renderer.xy.XYAreaRendererTest.testHashcode()",1,1,14,104,1
"org.jfree.chart.renderer.xy.XYAreaRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYAreaRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.xy.XYBarRenderer.XYBarRenderer()",1,1,6,8,1
"org.jfree.chart.renderer.xy.XYBarRenderer.XYBarRenderer(double)",1,1,19,213,1
"org.jfree.chart.renderer.xy.XYBarRenderer.XYBarRendererState.XYBarRendererState(PlotRenderingInfo)",1,1,8,8,1
"org.jfree.chart.renderer.xy.XYBarRenderer.XYBarRendererState.getG2Base()",1,1,8,11,1
"org.jfree.chart.renderer.xy.XYBarRenderer.XYBarRendererState.setG2Base(double)",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYBarRenderer.calculateLabelAnchorPoint(ItemLabelAnchor,Rectangle2D,PlotOrientation)",1,1,104,"1,701",26
"org.jfree.chart.renderer.xy.XYBarRenderer.clone()",1,2,17,84,2
"org.jfree.chart.renderer.xy.XYBarRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",11,14,153,"2,671",32
"org.jfree.chart.renderer.xy.XYBarRenderer.drawItemLabel(Graphics2D,XYDataset,int,int,XYPlot,XYItemLabelGenerator,Rectangle2D,boolean)",3,8,68,684,10
"org.jfree.chart.renderer.xy.XYBarRenderer.equals(Object)",16,1,60,698,16
"org.jfree.chart.renderer.xy.XYBarRenderer.findDomainBounds(XYDataset)",1,1,14,11,1
"org.jfree.chart.renderer.xy.XYBarRenderer.findRangeBounds(XYDataset)",1,1,14,15,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getBarAlignmentFactor()",1,1,10,11,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getBarPainter()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getBase()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultBarPainter()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getDefaultShadowsVisible()",1,1,12,13,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getGradientPaintTransformer()",1,1,11,8,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getLegendBar()",1,1,11,8,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getLegendItem(int,int)",3,5,59,616,8
"org.jfree.chart.renderer.xy.XYBarRenderer.getMargin()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getNegativeItemLabelPositionFallback()",1,1,12,8,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getPositiveItemLabelPositionFallback()",1,1,12,8,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getShadowXOffset()",1,1,10,11,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getShadowYOffset()",1,1,10,11,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getShadowsVisible()",1,1,11,11,1
"org.jfree.chart.renderer.xy.XYBarRenderer.getUseYInterval()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYBarRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,25,76,1
"org.jfree.chart.renderer.xy.XYBarRenderer.isDrawBarOutline()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYBarRenderer.isInternalAnchor(ItemLabelAnchor)",1,1,22,175,13
"org.jfree.chart.renderer.xy.XYBarRenderer.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setBarAlignmentFactor(double)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setBarPainter(XYBarPainter)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setBase(double)",1,1,14,19,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setDefaultBarPainter(XYBarPainter)",1,1,11,22,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setDefaultShadowsVisible(boolean)",1,1,12,15,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setDrawBarOutline(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setGradientPaintTransformer(GradientPaintTransformer)",1,1,13,15,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setLegendBar(Shape)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setMargin(double)",1,1,12,19,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setNegativeItemLabelPositionFallback(ItemLabelPosition)",1,1,15,15,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setPositiveItemLabelPositionFallback(ItemLabelPosition)",1,1,15,15,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setShadowVisible(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setShadowXOffset(double)",1,1,12,19,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setShadowYOffset(double)",1,1,12,19,1
"org.jfree.chart.renderer.xy.XYBarRenderer.setUseYInterval(boolean)",1,2,15,38,2
"org.jfree.chart.renderer.xy.XYBarRenderer.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.renderer.xy.XYBarRendererTest.testCloning()",1,1,18,211,1
"org.jfree.chart.renderer.xy.XYBarRendererTest.testEquals()",1,1,73,"1,037",1
"org.jfree.chart.renderer.xy.XYBarRendererTest.testFindDomainBounds()",1,1,19,176,1
"org.jfree.chart.renderer.xy.XYBarRendererTest.testFindDomainBounds2()",1,1,24,415,1
"org.jfree.chart.renderer.xy.XYBarRendererTest.testFindRangeBounds()",1,1,24,413,1
"org.jfree.chart.renderer.xy.XYBarRendererTest.testFindRangeBounds2()",1,1,25,436,1
"org.jfree.chart.renderer.xy.XYBarRendererTest.testGetLegendItemSeriesIndex()",1,1,33,422,1
"org.jfree.chart.renderer.xy.XYBarRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.XYBarRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYBarRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.xy.XYBarRendererTest.testSerialization2()",1,1,10,33,1
"org.jfree.chart.renderer.xy.XYBlockRenderer.XYBlockRenderer()",1,1,10,34,1
"org.jfree.chart.renderer.xy.XYBlockRenderer.clone()",1,2,17,59,2
"org.jfree.chart.renderer.xy.XYBlockRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",1,7,74,"1,178",7
"org.jfree.chart.renderer.xy.XYBlockRenderer.equals(Object)",9,1,43,335,9
"org.jfree.chart.renderer.xy.XYBlockRenderer.findDomainBounds(XYDataset)",3,1,23,116,3
"org.jfree.chart.renderer.xy.XYBlockRenderer.findRangeBounds(XYDataset)",3,3,27,129,3
"org.jfree.chart.renderer.xy.XYBlockRenderer.getBlockAnchor()",1,1,11,8,1
"org.jfree.chart.renderer.xy.XYBlockRenderer.getBlockHeight()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYBlockRenderer.getBlockWidth()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYBlockRenderer.getDrawOutlines()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYBlockRenderer.getPaintScale()",1,1,11,8,1
"org.jfree.chart.renderer.xy.XYBlockRenderer.getUseOutlinePaint()",1,1,12,13,1
"org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockAnchor(RectangleAnchor)",2,1,17,57,2
"org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockHeight(double)",2,1,17,57,2
"org.jfree.chart.renderer.xy.XYBlockRenderer.setBlockWidth(double)",2,1,17,57,2
"org.jfree.chart.renderer.xy.XYBlockRenderer.setDrawOutlines(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYBlockRenderer.setPaintScale(PaintScale)",1,1,14,26,1
"org.jfree.chart.renderer.xy.XYBlockRenderer.setUseOutlinePaint(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYBlockRenderer.updateOffsets()",1,9,42,664,10
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testBug1766646A()",1,1,12,63,1
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testBug1766646B()",1,1,12,63,1
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testCloning()",1,1,19,181,1
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testEquals()",1,1,26,220,1
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testFindDomainBounds()",1,1,18,169,1
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testFindRangeBounds()",1,1,14,83,1
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYBlockRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.XYBoxAndWhiskerRenderer()",1,1,6,11,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.XYBoxAndWhiskerRenderer(double)",1,1,15,55,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawEllipse(Point2D,double,Graphics2D)",1,1,12,64,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawHighFarOut(double,Graphics2D,double,double)",1,1,15,175,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawHorizontalItem(Graphics2D,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",1,10,124,"2,146",13
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",1,3,34,180,3
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawLowFarOut(double,Graphics2D,double,double)",1,1,15,175,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawMultipleEllipse(Point2D,double,double,Graphics2D)",1,1,17,138,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.drawVerticalItem(Graphics2D,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",1,20,193,"3,543",24
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.equals(Object)",8,1,33,265,8
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.findRangeBounds(XYDataset)",1,1,15,11,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.getArtifactPaint()",1,1,11,8,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.getBoxPaint()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.getBoxWidth()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.getFillBox()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.lookupBoxPaint(int,int)",2,2,23,53,2
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.readObject(ObjectInputStream)",1,1,14,41,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.setArtifactPaint(Paint)",1,1,14,26,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.setBoxPaint(Paint)",1,1,12,15,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.setBoxWidth(double)",1,2,17,38,2
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.setFillBox(boolean)",1,1,12,22,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer.writeObject(ObjectOutputStream)",1,1,12,41,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRendererTest.test2909215()",1,2,23,262,2
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRendererTest.testEquals()",1,1,32,398,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.xy.XYBubbleRenderer.XYBubbleRenderer()",1,1,6,8,1
"org.jfree.chart.renderer.xy.XYBubbleRenderer.XYBubbleRenderer(int)",2,1,15,112,3
"org.jfree.chart.renderer.xy.XYBubbleRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.XYBubbleRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",6,10,113,"1,674",15
"org.jfree.chart.renderer.xy.XYBubbleRenderer.equals(Object)",4,1,21,110,4
"org.jfree.chart.renderer.xy.XYBubbleRenderer.getLegendItem(int,int)",2,6,51,510,7
"org.jfree.chart.renderer.xy.XYBubbleRenderer.getScaleType()",1,1,9,11,1
"org.jfree.chart.renderer.xy.XYBubbleRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.XYBubbleRendererTest.testEquals()",1,1,13,69,1
"org.jfree.chart.renderer.xy.XYBubbleRendererTest.testGetLegendItemSeriesIndex()",1,1,43,945,1
"org.jfree.chart.renderer.xy.XYBubbleRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.XYBubbleRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYBubbleRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.XYDifferenceRenderer()",1,1,6,15,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.XYDifferenceRenderer(Paint,Paint,boolean)",1,1,19,121,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.areSeriesDisjoint(XYDataset)",1,1,19,178,2
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.clone()",1,1,13,36,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.createPolygon(Graphics2D,Rectangle2D,XYPlot,ValueAxis,ValueAxis,boolean,LinkedList,LinkedList)",1,10,86,935,10
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",1,3,32,158,3
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.drawItemPass0(Graphics2D,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState)",7,16,390,"6,203",58
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.drawItemPass1(Graphics2D,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState)",2,11,113,"1,510",15
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.equals(Object)",9,1,36,318,9
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.getLegendItem(int,int)",1,7,50,468,7
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.getLegendLine()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.getNegativePaint()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.getPassCount()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.getPositivePaint()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.getRoundXCoordinates()",1,1,13,13,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.getShapesVisible()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,24,46,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.isEitherSeriesDegenerate(XYDataset,boolean)",2,3,17,82,3
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.readObject(ObjectInputStream)",1,1,15,58,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.setLegendLine(Shape)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.setNegativePaint(Paint)",1,1,12,34,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.setPositivePaint(Paint)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.setRoundXCoordinates(boolean)",1,1,15,19,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.setShapesVisible(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYDifferenceRenderer.writeObject(ObjectOutputStream)",1,1,13,58,1
"org.jfree.chart.renderer.xy.XYDifferenceRendererTest.testCloning()",1,2,19,183,2
"org.jfree.chart.renderer.xy.XYDifferenceRendererTest.testEquals()",1,1,41,591,1
"org.jfree.chart.renderer.xy.XYDifferenceRendererTest.testGetLegendItemSeriesIndex()",1,1,33,398,1
"org.jfree.chart.renderer.xy.XYDifferenceRendererTest.testHashcode()",1,1,14,89,1
"org.jfree.chart.renderer.xy.XYDifferenceRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYDifferenceRendererTest.testSerialization()",1,1,11,36,1
"org.jfree.chart.renderer.xy.XYDotRenderer.XYDotRenderer()",1,1,9,64,1
"org.jfree.chart.renderer.xy.XYDotRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.XYDotRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",2,4,54,603,5
"org.jfree.chart.renderer.xy.XYDotRenderer.equals(Object)",6,1,34,196,6
"org.jfree.chart.renderer.xy.XYDotRenderer.getDotHeight()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYDotRenderer.getDotWidth()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYDotRenderer.getLegendItem(int,int)",3,5,50,461,7
"org.jfree.chart.renderer.xy.XYDotRenderer.getLegendShape()",1,1,12,8,1
"org.jfree.chart.renderer.xy.XYDotRenderer.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYDotRenderer.setDotHeight(int)",2,1,18,51,2
"org.jfree.chart.renderer.xy.XYDotRenderer.setDotWidth(int)",2,1,18,51,2
"org.jfree.chart.renderer.xy.XYDotRenderer.setLegendShape(Shape)",1,1,15,26,1
"org.jfree.chart.renderer.xy.XYDotRenderer.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.renderer.xy.XYDotRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.XYDotRendererTest.testEquals()",1,1,21,237,1
"org.jfree.chart.renderer.xy.XYDotRendererTest.testGetLegendItemSeriesIndex()",1,1,33,398,1
"org.jfree.chart.renderer.xy.XYDotRendererTest.testHashcode()",1,1,18,137,1
"org.jfree.chart.renderer.xy.XYDotRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYDotRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.XYErrorRenderer()",1,1,11,74,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",1,10,109,"1,918",12
"org.jfree.chart.renderer.xy.XYErrorRenderer.equals(Object)",8,1,33,290,8
"org.jfree.chart.renderer.xy.XYErrorRenderer.findDomainBounds(XYDataset)",1,1,14,11,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.findRangeBounds(XYDataset)",1,1,14,11,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.getCapLength()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.getDrawXError()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.getDrawYError()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.getErrorPaint()",1,1,11,8,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.getErrorStroke()",1,1,14,8,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.setCapLength(double)",1,1,12,19,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.setDrawXError(boolean)",1,2,15,38,2
"org.jfree.chart.renderer.xy.XYErrorRenderer.setDrawYError(boolean)",1,2,15,38,2
"org.jfree.chart.renderer.xy.XYErrorRenderer.setErrorPaint(Paint)",1,1,12,15,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.setErrorStroke(Stroke)",1,1,14,15,1
"org.jfree.chart.renderer.xy.XYErrorRenderer.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testCloning()",1,1,13,123,1
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testCloning2()",1,1,12,91,1
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testEquals()",1,1,36,411,1
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testFindDomainBounds()",1,1,8,19,1
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testFindRangeBounds()",1,1,8,19,1
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testSerialization()",1,1,11,64,1
"org.jfree.chart.renderer.xy.XYErrorRendererTest.testSerialization2()",1,1,10,38,1
"org.jfree.chart.renderer.xy.XYItemRendererState.XYItemRendererState(PlotRenderingInfo)",1,1,10,31,1
"org.jfree.chart.renderer.xy.XYItemRendererState.endSeriesPass(XYDataset,int,int,int,int,int)",1,1,21,19,1
"org.jfree.chart.renderer.xy.XYItemRendererState.getFirstItemIndex()",1,1,11,23,1
"org.jfree.chart.renderer.xy.XYItemRendererState.getLastItemIndex()",1,1,11,23,1
"org.jfree.chart.renderer.xy.XYItemRendererState.getProcessVisibleItemsOnly()",1,1,14,13,1
"org.jfree.chart.renderer.xy.XYItemRendererState.setProcessVisibleItemsOnly(boolean)",1,1,11,15,1
"org.jfree.chart.renderer.xy.XYItemRendererState.startSeriesPass(XYDataset,int,int,int,int,int)",1,1,22,53,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.State.State(PlotRenderingInfo)",1,1,9,19,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.State.isLastPointGood()",1,1,9,11,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.State.setLastPointGood(boolean)",1,1,9,15,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.State.startSeriesPass(XYDataset,int,int,int,int,int)",1,1,19,84,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.XYLineAndShapeRenderer()",1,1,6,10,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.XYLineAndShapeRenderer(boolean,boolean)",1,1,20,185,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.clone()",1,2,21,133,2
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.drawFirstPassShape(Graphics2D,int,int,int,Shape)",1,1,15,64,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",2,7,51,376,8
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.drawPrimaryLine(XYItemRendererState,Graphics2D,XYPlot,XYDataset,int,int,int,ValueAxis,ValueAxis,Rectangle2D)",5,9,64,703,13
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.drawPrimaryLineAsPath(XYItemRendererState,Graphics2D,XYPlot,XYDataset,int,int,int,ValueAxis,ValueAxis,Rectangle2D)",1,5,55,505,6
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.drawSecondaryPass(Graphics2D,XYPlot,XYDataset,int,int,int,ValueAxis,Rectangle2D,ValueAxis,CrosshairState,EntityCollection)",2,13,88,"1,059",15
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.equals(Object)",15,1,60,613,15
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getDefaultLinesVisible()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getDefaultShapesFilled()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getDefaultShapesVisible()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getDrawOutlines()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getDrawSeriesLineAsPath()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getItemLineVisible(int,int)",2,1,16,53,2
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getItemShapeFilled(int,int)",2,1,20,53,2
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getItemShapeVisible(int,int)",2,1,20,53,2
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getLegendItem(int,int)",4,6,61,782,9
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getLegendLine()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getPassCount()",1,1,11,8,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getSeriesLinesVisible(int)",1,1,13,22,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getSeriesShapesFilled(int)",1,1,13,22,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getSeriesShapesVisible(int)",1,1,13,22,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getUseFillPaint()",1,1,16,13,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.getUseOutlinePaint()",1,1,13,13,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,21,8,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.isItemPass(int)",1,1,11,19,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.isLinePass(int)",1,1,11,19,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setDefaultLinesVisible(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setDefaultShapesFilled(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setDefaultShapesVisible(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setDrawOutlines(boolean)",1,1,16,19,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setDrawSeriesLineAsPath(boolean)",1,2,15,38,2
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setLegendLine(Shape)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesLinesVisible(int,Boolean)",1,1,13,31,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesLinesVisible(int,boolean)",1,1,12,26,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesShapesFilled(int,Boolean)",1,1,13,31,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesShapesFilled(int,boolean)",1,1,12,26,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesShapesVisible(int,Boolean)",1,1,13,31,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setSeriesShapesVisible(int,boolean)",1,1,12,26,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setUseFillPaint(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.setUseOutlinePaint(boolean)",1,1,16,19,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testCloning()",1,1,29,461,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testEquals()",1,1,54,879,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testEquals2()",1,1,14,79,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testFindDomainBounds()",1,1,19,171,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testFindRangeBounds()",1,1,19,171,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testGetLegendItemSeriesIndex()",1,1,33,398,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.XYShapeRenderer()",1,1,15,133,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.clone()",1,1,14,36,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",2,12,86,"1,186",14
"org.jfree.chart.renderer.xy.XYShapeRenderer.equals(Object)",10,1,46,382,10
"org.jfree.chart.renderer.xy.XYShapeRenderer.findDomainBounds(XYDataset)",3,1,22,112,3
"org.jfree.chart.renderer.xy.XYShapeRenderer.findRangeBounds(XYDataset)",3,1,22,112,3
"org.jfree.chart.renderer.xy.XYShapeRenderer.findZBounds(XYZDataset)",2,2,15,33,2
"org.jfree.chart.renderer.xy.XYShapeRenderer.getDrawOutlines()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.getGuideLinePaint()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.getGuideLineStroke()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.getPaint(XYDataset,int,int)",1,3,24,131,3
"org.jfree.chart.renderer.xy.XYShapeRenderer.getPaintScale()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.getPassCount()",1,1,9,8,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.getUseFillPaint()",1,1,16,13,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.getUseOutlinePaint()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.isGuideLinesVisible()",1,1,12,13,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.readObject(ObjectInputStream)",1,1,14,43,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.setDrawOutlines(boolean)",1,1,16,19,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.setGuideLinePaint(Paint)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.setGuideLineStroke(Stroke)",1,1,13,26,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.setGuideLinesVisible(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.setPaintScale(PaintScale)",1,1,13,34,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.setUseFillPaint(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.setUseOutlinePaint(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYShapeRenderer.writeObject(ObjectOutputStream)",1,1,12,43,1
"org.jfree.chart.renderer.xy.XYShapeRendererTest.test3026341()",1,1,21,190,1
"org.jfree.chart.renderer.xy.XYShapeRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.XYShapeRendererTest.testEquals()",1,1,34,440,1
"org.jfree.chart.renderer.xy.XYShapeRendererTest.testFindZBounds()",1,1,30,586,1
"org.jfree.chart.renderer.xy.XYShapeRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.xy.XYSplineRenderer.XYSplineRenderer()",1,1,7,11,1
"org.jfree.chart.renderer.xy.XYSplineRenderer.XYSplineRenderer(int)",1,1,9,15,1
"org.jfree.chart.renderer.xy.XYSplineRenderer.XYSplineRenderer(int,FillType)",2,1,20,95,2
"org.jfree.chart.renderer.xy.XYSplineRenderer.XYSplineState.XYSplineState(PlotRenderingInfo)",1,1,10,30,1
"org.jfree.chart.renderer.xy.XYSplineRenderer.drawPrimaryLineAsPath(XYItemRendererState,Graphics2D,XYPlot,XYDataset,int,int,int,ValueAxis,ValueAxis,Rectangle2D)",1,20,168,"4,010",27
"org.jfree.chart.renderer.xy.XYSplineRenderer.equals(Object)",6,1,28,196,6
"org.jfree.chart.renderer.xy.XYSplineRenderer.getFillType()",1,1,12,8,1
"org.jfree.chart.renderer.xy.XYSplineRenderer.getGradientPaintTransformer()",1,1,10,8,1
"org.jfree.chart.renderer.xy.XYSplineRenderer.getPrecision()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYSplineRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,24,31,1
"org.jfree.chart.renderer.xy.XYSplineRenderer.setFillType(FillType)",1,1,14,15,1
"org.jfree.chart.renderer.xy.XYSplineRenderer.setGradientPaintTransformer(GradientPaintTransformer)",1,1,12,15,1
"org.jfree.chart.renderer.xy.XYSplineRenderer.setPrecision(int)",2,1,15,51,2
"org.jfree.chart.renderer.xy.XYSplineRenderer.solveTridiag(float[],float[],float[],float[],int)",1,1,21,303,3
"org.jfree.chart.renderer.xy.XYSplineRendererTest.testCloning()",1,1,13,116,1
"org.jfree.chart.renderer.xy.XYSplineRendererTest.testEquals()",1,1,28,272,1
"org.jfree.chart.renderer.xy.XYSplineRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.XYSplineRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYSplineRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.XYStepAreaRenderer()",1,1,6,8,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.XYStepAreaRenderer(int)",1,1,8,18,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.XYStepAreaRenderer(int,XYToolTipGenerator,XYURLGenerator)",1,1,29,180,4
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",1,29,170,"2,640",33
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.equals(Object)",9,1,36,318,9
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.getPlotArea()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.getRangeBase()",1,1,12,13,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.getShapesVisible()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.getStepPoint()",1,1,16,10,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.initialise(Graphics2D,Rectangle2D,XYPlot,XYDataset,PlotRenderingInfo)",1,1,23,46,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.isOutline()",1,1,11,13,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.isShapesFilled()",1,1,10,13,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.restrictValueToDataArea(double,XYPlot,Rectangle2D)",1,3,36,205,5
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.setOutline(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.setPlotArea(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.setRangeBase(double)",1,1,15,19,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.setShapesFilled(boolean)",1,1,12,19,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.setShapesVisible(boolean)",1,1,13,19,1
"org.jfree.chart.renderer.xy.XYStepAreaRenderer.setStepPoint(double)",2,1,18,72,3
"org.jfree.chart.renderer.xy.XYStepAreaRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.XYStepAreaRendererTest.testDrawWithNullInfo()",1,2,31,335,2
"org.jfree.chart.renderer.xy.XYStepAreaRendererTest.testEquals()",1,1,33,401,1
"org.jfree.chart.renderer.xy.XYStepAreaRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.XYStepAreaRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYStepAreaRendererTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.renderer.xy.XYStepRenderer.XYStepRenderer()",1,1,6,10,1
"org.jfree.chart.renderer.xy.XYStepRenderer.XYStepRenderer(XYToolTipGenerator,XYURLGenerator)",1,1,15,28,1
"org.jfree.chart.renderer.xy.XYStepRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.XYStepRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",2,12,115,"1,658",15
"org.jfree.chart.renderer.xy.XYStepRenderer.drawLine(Graphics2D,Line2D,double,double,double,double,Rectangle2D)",2,5,23,129,6
"org.jfree.chart.renderer.xy.XYStepRenderer.equals(Object)",4,1,21,110,4
"org.jfree.chart.renderer.xy.XYStepRenderer.getStepPoint()",1,1,16,13,1
"org.jfree.chart.renderer.xy.XYStepRenderer.hashCode()",1,1,9,24,1
"org.jfree.chart.renderer.xy.XYStepRenderer.setStepPoint(double)",2,1,18,72,3
"org.jfree.chart.renderer.xy.XYStepRendererTest.testCloning()",1,1,11,71,1
"org.jfree.chart.renderer.xy.XYStepRendererTest.testDrawWithNullInfo()",1,2,31,335,2
"org.jfree.chart.renderer.xy.XYStepRendererTest.testDrawWithNullValue()",1,2,31,335,2
"org.jfree.chart.renderer.xy.XYStepRendererTest.testEquals()",1,1,18,129,1
"org.jfree.chart.renderer.xy.XYStepRendererTest.testHashcode()",1,1,14,87,1
"org.jfree.chart.renderer.xy.XYStepRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.XYStepRendererTest.testSerialization()",1,1,10,34,1
"org.jfree.chart.renderer.xy.YIntervalRenderer.YIntervalRenderer()",1,1,7,15,1
"org.jfree.chart.renderer.xy.YIntervalRenderer.clone()",1,1,11,11,1
"org.jfree.chart.renderer.xy.YIntervalRenderer.drawAdditionalItemLabel(Graphics2D,PlotOrientation,XYDataset,int,int,double,double)",2,1,31,281,2
"org.jfree.chart.renderer.xy.YIntervalRenderer.drawItem(Graphics2D,XYItemRendererState,Rectangle2D,PlotRenderingInfo,XYPlot,ValueAxis,ValueAxis,XYDataset,int,int,CrosshairState,int)",4,7,81,"1,048",8
"org.jfree.chart.renderer.xy.YIntervalRenderer.equals(Object)",4,1,22,114,4
"org.jfree.chart.renderer.xy.YIntervalRenderer.findRangeBounds(XYDataset)",1,1,12,11,1
"org.jfree.chart.renderer.xy.YIntervalRenderer.getAdditionalItemLabelGenerator()",1,1,13,8,1
"org.jfree.chart.renderer.xy.YIntervalRenderer.setAdditionalItemLabelGenerator(XYItemLabelGenerator)",1,1,17,15,1
"org.jfree.chart.renderer.xy.YIntervalRendererTest.testCloning()",1,1,32,428,1
"org.jfree.chart.renderer.xy.YIntervalRendererTest.testEquals()",1,1,60,947,1
"org.jfree.chart.renderer.xy.YIntervalRendererTest.testGetLegendItemSeriesIndex()",1,1,33,456,1
"org.jfree.chart.renderer.xy.YIntervalRendererTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.renderer.xy.YIntervalRendererTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.renderer.xy.YIntervalRendererTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.resources.JFreeChartResources.getContents()",1,1,9,4,1
"org.jfree.chart.text.AttributedStringUtils.AttributedStringUtils()",1,1,5,0,1
"org.jfree.chart.text.AttributedStringUtils.equal(AttributedString,AttributedString)",8,3,46,423,8
"org.jfree.chart.text.G2TextMeasurer.G2TextMeasurer(Graphics2D)",1,1,8,8,1
"org.jfree.chart.text.G2TextMeasurer.getStringWidth(String,int,int)",1,1,17,84,1
"org.jfree.chart.text.TextBlock.TextBlock()",1,1,7,18,1
"org.jfree.chart.text.TextBlock.addLine(String,Font,Paint)",1,1,10,19,1
"org.jfree.chart.text.TextBlock.addLine(TextLine)",1,1,8,15,1
"org.jfree.chart.text.TextBlock.calculateBounds(Graphics2D,float,float,TextBlockAnchor,float,float,double)",1,1,23,160,1
"org.jfree.chart.text.TextBlock.calculateDimensions(Graphics2D)",1,2,19,144,2
"org.jfree.chart.text.TextBlock.calculateOffsets(TextBlockAnchor,double,double)",1,1,45,466,16
"org.jfree.chart.text.TextBlock.draw(Graphics2D,float,float,TextBlockAnchor)",1,1,11,39,1
"org.jfree.chart.text.TextBlock.draw(Graphics2D,float,float,TextBlockAnchor,float,float,double)",1,4,37,431,4
"org.jfree.chart.text.TextBlock.equals(Object)",3,2,18,76,3
"org.jfree.chart.text.TextBlock.getLastLine()",1,2,13,80,2
"org.jfree.chart.text.TextBlock.getLineAlignment()",1,1,8,8,1
"org.jfree.chart.text.TextBlock.getLines()",1,1,8,11,1
"org.jfree.chart.text.TextBlock.hashCode()",1,2,9,34,2
"org.jfree.chart.text.TextBlock.setLineAlignment(HorizontalAlignment)",2,1,11,41,2
"org.jfree.chart.text.TextBox.TextBox()",1,1,6,8,1
"org.jfree.chart.text.TextBox.TextBox(String)",1,2,13,76,2
"org.jfree.chart.text.TextBox.TextBox(TextBlock)",1,1,15,142,1
"org.jfree.chart.text.TextBox.draw(Graphics2D,float,float,RectangleAnchor)",1,4,38,660,5
"org.jfree.chart.text.TextBox.equals(Object)",11,1,42,435,11
"org.jfree.chart.text.TextBox.getBackgroundPaint()",1,1,8,8,1
"org.jfree.chart.text.TextBox.getHeight(Graphics2D)",1,1,11,46,1
"org.jfree.chart.text.TextBox.getInteriorGap()",1,1,8,8,1
"org.jfree.chart.text.TextBox.getOutlinePaint()",1,1,8,8,1
"org.jfree.chart.text.TextBox.getOutlineStroke()",1,1,8,8,1
"org.jfree.chart.text.TextBox.getShadowPaint()",1,1,8,8,1
"org.jfree.chart.text.TextBox.getShadowXOffset()",1,1,8,11,1
"org.jfree.chart.text.TextBox.getShadowYOffset()",1,1,8,11,1
"org.jfree.chart.text.TextBox.getTextBlock()",1,1,8,8,1
"org.jfree.chart.text.TextBox.hashCode()",1,9,27,598,9
"org.jfree.chart.text.TextBox.readObject(ObjectInputStream)",1,1,16,75,1
"org.jfree.chart.text.TextBox.setBackgroundPaint(Paint)",1,1,8,11,1
"org.jfree.chart.text.TextBox.setInteriorGap(RectangleInsets)",1,1,8,11,1
"org.jfree.chart.text.TextBox.setOutlinePaint(Paint)",1,1,8,11,1
"org.jfree.chart.text.TextBox.setOutlineStroke(Stroke)",1,1,8,11,1
"org.jfree.chart.text.TextBox.setShadowPaint(Paint)",1,1,8,11,1
"org.jfree.chart.text.TextBox.setShadowXOffset(double)",1,1,8,15,1
"org.jfree.chart.text.TextBox.setShadowYOffset(double)",1,1,8,15,1
"org.jfree.chart.text.TextBox.setTextBlock(TextBlock)",1,1,8,11,1
"org.jfree.chart.text.TextBox.writeObject(ObjectOutputStream)",1,1,14,75,1
"org.jfree.chart.text.TextFragment.TextFragment(String)",1,1,8,15,1
"org.jfree.chart.text.TextFragment.TextFragment(String,Font)",1,1,9,15,1
"org.jfree.chart.text.TextFragment.TextFragment(String,Font,Paint)",1,1,10,19,1
"org.jfree.chart.text.TextFragment.TextFragment(String,Font,Paint,float)",4,1,24,148,4
"org.jfree.chart.text.TextFragment.calculateBaselineOffset(Graphics2D,TextAnchor)",1,5,27,253,5
"org.jfree.chart.text.TextFragment.calculateDimensions(Graphics2D)",1,1,13,64,1
"org.jfree.chart.text.TextFragment.draw(Graphics2D,float,float,TextAnchor,float,float,double)",1,1,19,121,1
"org.jfree.chart.text.TextFragment.equals(Object)",7,2,29,218,7
"org.jfree.chart.text.TextFragment.getBaselineOffset()",1,1,8,11,1
"org.jfree.chart.text.TextFragment.getFont()",1,1,8,8,1
"org.jfree.chart.text.TextFragment.getPaint()",1,1,8,8,1
"org.jfree.chart.text.TextFragment.getText()",1,1,8,8,1
"org.jfree.chart.text.TextFragment.hashCode()",1,4,12,163,4
"org.jfree.chart.text.TextFragment.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.text.TextFragment.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.text.TextLine.TextLine()",1,1,6,8,1
"org.jfree.chart.text.TextLine.TextLine(String)",1,1,8,11,1
"org.jfree.chart.text.TextLine.TextLine(String,Font)",1,1,11,38,1
"org.jfree.chart.text.TextLine.TextLine(String,Font,Paint)",4,1,21,138,4
"org.jfree.chart.text.TextLine.addFragment(TextFragment)",1,1,8,15,1
"org.jfree.chart.text.TextLine.calculateBaselineOffset(Graphics2D,TextAnchor)",1,2,19,85,2
"org.jfree.chart.text.TextLine.calculateDimensions(Graphics2D)",1,2,19,149,2
"org.jfree.chart.text.TextLine.draw(Graphics2D,float,float,TextAnchor,float,float,double)",1,4,33,372,4
"org.jfree.chart.text.TextLine.equals(Object)",4,2,21,108,4
"org.jfree.chart.text.TextLine.getFirstTextFragment()",1,2,12,51,2
"org.jfree.chart.text.TextLine.getLastTextFragment()",1,2,13,70,2
"org.jfree.chart.text.TextLine.hashCode()",1,2,9,34,2
"org.jfree.chart.text.TextLine.removeFragment(TextFragment)",1,1,8,15,1
"org.jfree.chart.text.TextUtils.TextUtils()",1,1,6,0,1
"org.jfree.chart.text.TextUtils.calcAlignedStringBounds(String,Graphics2D,float,float,TextAnchor)",1,1,24,121,1
"org.jfree.chart.text.TextUtils.calculateRotatedStringBounds(String,Graphics2D,float,float,TextAnchor,double,TextAnchor)",2,2,28,232,3
"org.jfree.chart.text.TextUtils.calculateRotatedStringBounds(String,Graphics2D,float,float,double,float,float)",2,2,31,184,3
"org.jfree.chart.text.TextUtils.createTextBlock(String,Font,Paint)",2,6,46,430,7
"org.jfree.chart.text.TextUtils.createTextBlock(String,Font,Paint,float,TextMeasurer)",1,1,17,38,1
"org.jfree.chart.text.TextUtils.createTextBlock(String,Font,Paint,float,int,TextMeasurer)",3,6,53,664,9
"org.jfree.chart.text.TextUtils.deriveRotationAnchorOffsets(Graphics2D,String,TextAnchor)",1,9,52,647,9
"org.jfree.chart.text.TextUtils.deriveTextBoundsAnchorOffsets(Graphics2D,String,TextAnchor)",1,8,52,647,8
"org.jfree.chart.text.TextUtils.deriveTextBoundsAnchorOffsets(Graphics2D,String,TextAnchor,Rectangle2D)",1,9,59,727,9
"org.jfree.chart.text.TextUtils.drawAlignedString(String,Graphics2D,float,float,TextAnchor)",1,2,29,294,2
"org.jfree.chart.text.TextUtils.drawRotatedString(String,Graphics2D,double,float,float)",1,1,16,48,1
"org.jfree.chart.text.TextUtils.drawRotatedString(String,Graphics2D,float,float,TextAnchor,double,TextAnchor)",2,3,30,284,4
"org.jfree.chart.text.TextUtils.drawRotatedString(String,Graphics2D,float,float,TextAnchor,double,float,float)",2,3,28,228,4
"org.jfree.chart.text.TextUtils.drawRotatedString(String,Graphics2D,float,float,double,float,float)",3,5,45,399,6
"org.jfree.chart.text.TextUtils.getDrawStringsWithFontAttributes()",1,1,12,11,1
"org.jfree.chart.text.TextUtils.getTextBounds(String,Graphics2D,FontMetrics)",1,2,31,208,2
"org.jfree.chart.text.TextUtils.getUseFontMetricsGetStringBounds()",1,1,10,11,1
"org.jfree.chart.text.TextUtils.isUseDrawRotatedStringWorkaround()",1,1,9,11,1
"org.jfree.chart.text.TextUtils.nextLineBreak(String,int,float,BreakIterator,TextMeasurer)",7,4,53,405,8
"org.jfree.chart.text.TextUtils.setDrawStringsWithFontAttributes(boolean)",1,1,13,15,1
"org.jfree.chart.text.TextUtils.setUseDrawRotatedStringWorkaround(boolean)",1,1,12,15,1
"org.jfree.chart.text.TextUtils.setUseFontMetricsGetStringBounds(boolean)",1,1,10,15,1
"org.jfree.chart.title.CompositeTitle.CompositeTitle()",1,1,6,10,1
"org.jfree.chart.title.CompositeTitle.CompositeTitle(BlockContainer)",1,1,10,30,1
"org.jfree.chart.title.CompositeTitle.arrange(Graphics2D,RectangleConstraint)",1,1,16,62,1
"org.jfree.chart.title.CompositeTitle.draw(Graphics2D,Rectangle2D)",1,1,11,15,1
"org.jfree.chart.title.CompositeTitle.draw(Graphics2D,Rectangle2D,Object)",1,2,21,133,2
"org.jfree.chart.title.CompositeTitle.equals(Object)",5,1,24,159,5
"org.jfree.chart.title.CompositeTitle.getBackgroundPaint()",1,1,10,8,1
"org.jfree.chart.title.CompositeTitle.getContainer()",1,1,8,8,1
"org.jfree.chart.title.CompositeTitle.readObject(ObjectInputStream)",1,1,13,26,1
"org.jfree.chart.title.CompositeTitle.setBackgroundPaint(Paint)",1,1,13,22,1
"org.jfree.chart.title.CompositeTitle.setTitleContainer(BlockContainer)",1,1,9,22,1
"org.jfree.chart.title.CompositeTitle.writeObject(ObjectOutputStream)",1,1,11,26,1
"org.jfree.chart.title.CompositeTitleTest.testCloning()",1,2,20,194,2
"org.jfree.chart.title.CompositeTitleTest.testConstructor()",1,1,8,15,1
"org.jfree.chart.title.CompositeTitleTest.testEquals()",1,1,36,545,1
"org.jfree.chart.title.CompositeTitleTest.testHashcode()",1,1,14,113,1
"org.jfree.chart.title.CompositeTitleTest.testSerialization()",1,1,12,94,1
"org.jfree.chart.title.DateTitle.DateTitle()",1,1,11,8,1
"org.jfree.chart.title.DateTitle.DateTitle(int)",1,1,14,38,1
"org.jfree.chart.title.DateTitle.DateTitle(int,Locale,Font,Paint)",1,1,20,43,1
"org.jfree.chart.title.DateTitle.DateTitle(int,Locale,Font,Paint,RectangleEdge,HorizontalAlignment,VerticalAlignment,RectangleInsets)",1,1,30,58,1
"org.jfree.chart.title.DateTitle.setDateFormat(int,Locale)",1,1,16,28,1
"org.jfree.chart.title.DateTitleTest.testCloning()",1,1,11,71,1
"org.jfree.chart.title.DateTitleTest.testEquals()",1,1,26,284,1
"org.jfree.chart.title.DateTitleTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.title.DateTitleTest.testSerialization()",1,1,9,22,1
"org.jfree.chart.title.ImageTitle.ImageTitle(Image)",1,1,10,48,1
"org.jfree.chart.title.ImageTitle.ImageTitle(Image,RectangleEdge,HorizontalAlignment,VerticalAlignment)",1,1,15,48,1
"org.jfree.chart.title.ImageTitle.ImageTitle(Image,int,int,RectangleEdge,HorizontalAlignment,VerticalAlignment,RectangleInsets)",2,1,26,101,2
"org.jfree.chart.title.ImageTitle.arrange(Graphics2D,RectangleConstraint)",1,1,16,66,1
"org.jfree.chart.title.ImageTitle.draw(Graphics2D,Rectangle2D)",3,3,21,127,5
"org.jfree.chart.title.ImageTitle.draw(Graphics2D,Rectangle2D,Object)",1,1,14,15,1
"org.jfree.chart.title.ImageTitle.drawHorizontal(Graphics2D,Rectangle2D)",1,5,47,602,5
"org.jfree.chart.title.ImageTitle.drawVertical(Graphics2D,Rectangle2D)",1,6,49,623,6
"org.jfree.chart.title.ImageTitle.equals(Object)",4,1,28,114,4
"org.jfree.chart.title.ImageTitle.getImage()",1,1,8,8,1
"org.jfree.chart.title.ImageTitle.setImage(Image)",2,1,13,53,2
"org.jfree.chart.title.ImageTitleTest.testSerialization()",1,1,6,2,1
"org.jfree.chart.title.LegendGraphic.LegendGraphic(Shape,Paint)",1,1,18,140,1
"org.jfree.chart.title.LegendGraphic.arrange(Graphics2D,RectangleConstraint)",12,8,53,520,13
"org.jfree.chart.title.LegendGraphic.arrangeNN(Graphics2D)",1,3,19,113,3
"org.jfree.chart.title.LegendGraphic.clone()",1,1,14,57,1
"org.jfree.chart.title.LegendGraphic.draw(Graphics2D,Rectangle2D)",1,6,40,486,6
"org.jfree.chart.title.LegendGraphic.draw(Graphics2D,Rectangle2D,Object)",1,1,14,15,1
"org.jfree.chart.title.LegendGraphic.equals(Object)",16,1,59,726,16
"org.jfree.chart.title.LegendGraphic.getFillPaint()",1,1,10,8,1
"org.jfree.chart.title.LegendGraphic.getFillPaintTransformer()",1,1,13,8,1
"org.jfree.chart.title.LegendGraphic.getLine()",1,1,10,8,1
"org.jfree.chart.title.LegendGraphic.getLinePaint()",1,1,10,8,1
"org.jfree.chart.title.LegendGraphic.getLineStroke()",1,1,10,8,1
"org.jfree.chart.title.LegendGraphic.getOutlinePaint()",1,1,10,8,1
"org.jfree.chart.title.LegendGraphic.getOutlineStroke()",1,1,10,8,1
"org.jfree.chart.title.LegendGraphic.getShape()",1,1,10,8,1
"org.jfree.chart.title.LegendGraphic.getShapeAnchor()",1,1,10,8,1
"org.jfree.chart.title.LegendGraphic.getShapeLocation()",1,1,10,8,1
"org.jfree.chart.title.LegendGraphic.hashCode()",1,1,12,48,1
"org.jfree.chart.title.LegendGraphic.isLineVisible()",1,1,10,13,1
"org.jfree.chart.title.LegendGraphic.isShapeFilled()",1,1,11,13,1
"org.jfree.chart.title.LegendGraphic.isShapeOutlineVisible()",1,1,10,13,1
"org.jfree.chart.title.LegendGraphic.isShapeVisible()",1,1,11,13,1
"org.jfree.chart.title.LegendGraphic.readObject(ObjectInputStream)",1,1,19,132,1
"org.jfree.chart.title.LegendGraphic.setFillPaint(Paint)",1,1,10,11,1
"org.jfree.chart.title.LegendGraphic.setFillPaintTransformer(GradientPaintTransformer)",1,1,14,22,1
"org.jfree.chart.title.LegendGraphic.setLine(Shape)",1,1,11,11,1
"org.jfree.chart.title.LegendGraphic.setLinePaint(Paint)",1,1,10,11,1
"org.jfree.chart.title.LegendGraphic.setLineStroke(Stroke)",1,1,10,11,1
"org.jfree.chart.title.LegendGraphic.setLineVisible(boolean)",1,1,10,15,1
"org.jfree.chart.title.LegendGraphic.setOutlinePaint(Paint)",1,1,10,11,1
"org.jfree.chart.title.LegendGraphic.setOutlineStroke(Stroke)",1,1,10,11,1
"org.jfree.chart.title.LegendGraphic.setShape(Shape)",1,1,10,11,1
"org.jfree.chart.title.LegendGraphic.setShapeAnchor(RectangleAnchor)",1,1,12,22,1
"org.jfree.chart.title.LegendGraphic.setShapeFilled(boolean)",1,1,11,15,1
"org.jfree.chart.title.LegendGraphic.setShapeLocation(RectangleAnchor)",1,1,12,22,1
"org.jfree.chart.title.LegendGraphic.setShapeOutlineVisible(boolean)",1,1,11,15,1
"org.jfree.chart.title.LegendGraphic.setShapeVisible(boolean)",1,1,11,15,1
"org.jfree.chart.title.LegendGraphic.writeObject(ObjectOutputStream)",1,1,17,132,1
"org.jfree.chart.title.LegendGraphicTest.testCloning()",1,1,15,159,1
"org.jfree.chart.title.LegendGraphicTest.testCloning2()",1,1,17,211,1
"org.jfree.chart.title.LegendGraphicTest.testEquals()",1,1,84,"1,333",1
"org.jfree.chart.title.LegendGraphicTest.testHashcode()",1,1,14,118,1
"org.jfree.chart.title.LegendGraphicTest.testSerialization()",1,1,12,80,1
"org.jfree.chart.title.LegendItemBlockContainer.LegendItemBlockContainer(Arrangement,Dataset,Comparable)",1,1,15,31,1
"org.jfree.chart.title.LegendItemBlockContainer.draw(Graphics2D,Rectangle2D,Object)",1,3,32,197,3
"org.jfree.chart.title.LegendItemBlockContainer.getDataset()",1,1,10,8,1
"org.jfree.chart.title.LegendItemBlockContainer.getSeriesIndex()",1,1,8,11,1
"org.jfree.chart.title.LegendItemBlockContainer.getSeriesKey()",1,1,10,8,1
"org.jfree.chart.title.LegendItemBlockContainer.getToolTipText()",1,1,10,8,1
"org.jfree.chart.title.LegendItemBlockContainer.getURLText()",1,1,10,8,1
"org.jfree.chart.title.LegendItemBlockContainer.setToolTipText(String)",1,1,10,11,1
"org.jfree.chart.title.LegendItemBlockContainer.setURLText(String)",1,1,10,11,1
"org.jfree.chart.title.LegendTitle.LegendTitle(LegendItemSource)",1,1,8,13,1
"org.jfree.chart.title.LegendTitle.LegendTitle(LegendItemSource,Arrangement,Arrangement)",1,1,25,235,1
"org.jfree.chart.title.LegendTitle.addItemBlock(LegendItem)",1,1,4,24,1
"org.jfree.chart.title.LegendTitle.arrange(Graphics2D,RectangleConstraint)",2,1,26,167,3
"org.jfree.chart.title.LegendTitle.createLegendItemBlock(LegendItem)",1,1,46,659,3
"org.jfree.chart.title.LegendTitle.draw(Graphics2D,Rectangle2D)",1,1,11,15,1
"org.jfree.chart.title.LegendTitle.draw(Graphics2D,Rectangle2D,Object)",1,6,43,425,8
"org.jfree.chart.title.LegendTitle.equals(Object)",13,1,48,531,13
"org.jfree.chart.title.LegendTitle.fetchLegendItems()",1,9,35,475,9
"org.jfree.chart.title.LegendTitle.getBackgroundPaint()",1,1,8,8,1
"org.jfree.chart.title.LegendTitle.getItemContainer()",1,1,8,8,1
"org.jfree.chart.title.LegendTitle.getItemFont()",1,1,8,8,1
"org.jfree.chart.title.LegendTitle.getItemLabelPadding()",1,1,8,8,1
"org.jfree.chart.title.LegendTitle.getItemPaint()",1,1,8,8,1
"org.jfree.chart.title.LegendTitle.getLegendItemGraphicAnchor()",1,1,8,8,1
"org.jfree.chart.title.LegendTitle.getLegendItemGraphicEdge()",1,1,8,8,1
"org.jfree.chart.title.LegendTitle.getLegendItemGraphicLocation()",1,1,8,8,1
"org.jfree.chart.title.LegendTitle.getLegendItemGraphicPadding()",1,1,8,8,1
"org.jfree.chart.title.LegendTitle.getSortOrder()",1,1,9,8,1
"org.jfree.chart.title.LegendTitle.getSources()",1,1,8,8,1
"org.jfree.chart.title.LegendTitle.getWrapper()",1,1,10,8,1
"org.jfree.chart.title.LegendTitle.readObject(ObjectInputStream)",1,1,14,41,1
"org.jfree.chart.title.LegendTitle.setBackgroundPaint(Paint)",1,1,10,22,1
"org.jfree.chart.title.LegendTitle.setItemFont(Font)",1,1,11,34,1
"org.jfree.chart.title.LegendTitle.setItemLabelPadding(RectangleInsets)",1,1,10,34,1
"org.jfree.chart.title.LegendTitle.setItemPaint(Paint)",1,1,10,34,1
"org.jfree.chart.title.LegendTitle.setLegendItemGraphicAnchor(RectangleAnchor)",1,1,9,22,1
"org.jfree.chart.title.LegendTitle.setLegendItemGraphicEdge(RectangleEdge)",1,1,10,34,1
"org.jfree.chart.title.LegendTitle.setLegendItemGraphicLocation(RectangleAnchor)",1,1,8,11,1
"org.jfree.chart.title.LegendTitle.setLegendItemGraphicPadding(RectangleInsets)",1,1,11,34,1
"org.jfree.chart.title.LegendTitle.setSortOrder(SortOrder)",1,1,12,34,1
"org.jfree.chart.title.LegendTitle.setSources(LegendItemSource[])",1,1,11,34,1
"org.jfree.chart.title.LegendTitle.setWrapper(BlockContainer)",1,1,8,11,1
"org.jfree.chart.title.LegendTitle.writeObject(ObjectOutputStream)",1,1,12,41,1
"org.jfree.chart.title.LegendTitleTest.testCloning()",1,1,21,288,1
"org.jfree.chart.title.LegendTitleTest.testEquals()",1,1,38,544,1
"org.jfree.chart.title.LegendTitleTest.testHashcode()",1,1,13,74,1
"org.jfree.chart.title.LegendTitleTest.testSerialization()",1,1,11,60,1
"org.jfree.chart.title.PaintScaleLegend.PaintScaleLegend(PaintScale,ValueAxis)",1,1,21,223,1
"org.jfree.chart.title.PaintScaleLegend.arrange(Graphics2D,RectangleConstraint)",13,6,53,540,13
"org.jfree.chart.title.PaintScaleLegend.arrangeRR(Graphics2D,Range,Range)",3,3,36,394,5
"org.jfree.chart.title.PaintScaleLegend.axisChanged(AxisChangeEvent)",1,2,14,36,2
"org.jfree.chart.title.PaintScaleLegend.draw(Graphics2D,Rectangle2D)",1,1,10,15,1
"org.jfree.chart.title.PaintScaleLegend.draw(Graphics2D,Rectangle2D,Object)",1,15,133,"2,887",15
"org.jfree.chart.title.PaintScaleLegend.equals(Object)",12,1,46,515,12
"org.jfree.chart.title.PaintScaleLegend.getAxis()",1,1,10,8,1
"org.jfree.chart.title.PaintScaleLegend.getAxisLocation()",1,1,10,8,1
"org.jfree.chart.title.PaintScaleLegend.getAxisOffset()",1,1,10,13,1
"org.jfree.chart.title.PaintScaleLegend.getBackgroundPaint()",1,1,8,8,1
"org.jfree.chart.title.PaintScaleLegend.getScale()",1,1,10,8,1
"org.jfree.chart.title.PaintScaleLegend.getStripOutlinePaint()",1,1,10,8,1
"org.jfree.chart.title.PaintScaleLegend.getStripOutlineStroke()",1,1,10,8,1
"org.jfree.chart.title.PaintScaleLegend.getStripWidth()",1,1,10,13,1
"org.jfree.chart.title.PaintScaleLegend.getSubdivisionCount()",1,1,10,11,1
"org.jfree.chart.title.PaintScaleLegend.isStripOutlineVisible()",1,1,11,13,1
"org.jfree.chart.title.PaintScaleLegend.readObject(ObjectInputStream)",1,1,15,58,1
"org.jfree.chart.title.PaintScaleLegend.setAxis(ValueAxis)",1,1,15,65,1
"org.jfree.chart.title.PaintScaleLegend.setAxisLocation(AxisLocation)",1,1,13,34,1
"org.jfree.chart.title.PaintScaleLegend.setAxisOffset(double)",1,1,10,26,1
"org.jfree.chart.title.PaintScaleLegend.setBackgroundPaint(Paint)",1,1,10,22,1
"org.jfree.chart.title.PaintScaleLegend.setScale(PaintScale)",1,1,13,34,1
"org.jfree.chart.title.PaintScaleLegend.setStripOutlinePaint(Paint)",1,1,13,34,1
"org.jfree.chart.title.PaintScaleLegend.setStripOutlineStroke(Stroke)",1,1,13,34,1
"org.jfree.chart.title.PaintScaleLegend.setStripOutlineVisible(boolean)",1,1,13,26,1
"org.jfree.chart.title.PaintScaleLegend.setStripWidth(double)",1,1,12,26,1
"org.jfree.chart.title.PaintScaleLegend.setSubdivisionCount(int)",2,1,15,59,2
"org.jfree.chart.title.PaintScaleLegend.writeObject(ObjectOutputStream)",1,1,13,58,1
"org.jfree.chart.title.PaintScaleLegendTest.testCloning()",1,1,12,85,1
"org.jfree.chart.title.PaintScaleLegendTest.testEquals()",1,1,66,945,1
"org.jfree.chart.title.PaintScaleLegendTest.testHashcode()",1,1,14,85,1
"org.jfree.chart.title.PaintScaleLegendTest.testSerialization()",1,1,10,33,1
"org.jfree.chart.title.ShortTextTitle.ShortTextTitle(String)",1,1,8,4,1
"org.jfree.chart.title.ShortTextTitle.arrange(Graphics2D,RectangleConstraint)",14,9,60,665,15
"org.jfree.chart.title.ShortTextTitle.arrangeFN(Graphics2D,double)",2,2,23,114,2
"org.jfree.chart.title.ShortTextTitle.arrangeNN(Graphics2D)",1,1,13,26,1
"org.jfree.chart.title.ShortTextTitle.arrangeRN(Graphics2D,Range)",2,1,18,70,2
"org.jfree.chart.title.ShortTextTitle.arrangeRR(Graphics2D,Range,Range)",2,3,23,149,3
"org.jfree.chart.title.ShortTextTitle.draw(Graphics2D,Rectangle2D,Object)",2,1,24,158,2
"org.jfree.chart.title.ShortTextTitleTest.testCloning()",1,1,11,77,1
"org.jfree.chart.title.ShortTextTitleTest.testEquals()",1,1,13,82,1
"org.jfree.chart.title.ShortTextTitleTest.testHashcode()",1,1,12,70,1
"org.jfree.chart.title.ShortTextTitleTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.title.TextTitle.TextTitle()",1,1,6,8,1
"org.jfree.chart.title.TextTitle.TextTitle(String)",1,1,10,33,1
"org.jfree.chart.title.TextTitle.TextTitle(String,Font)",1,1,11,33,1
"org.jfree.chart.title.TextTitle.TextTitle(String,Font,Paint,RectangleEdge,HorizontalAlignment,VerticalAlignment,RectangleInsets)",4,1,40,247,4
"org.jfree.chart.title.TextTitle.arrange(Graphics2D,RectangleConstraint)",13,8,53,564,13
"org.jfree.chart.title.TextTitle.arrangeFN(Graphics2D,double)",5,5,51,567,7
"org.jfree.chart.title.TextTitle.arrangeNN(Graphics2D)",1,1,16,26,1
"org.jfree.chart.title.TextTitle.arrangeRN(Graphics2D,Range)",2,1,21,70,2
"org.jfree.chart.title.TextTitle.arrangeRR(Graphics2D,Range,Range)",5,5,50,578,7
"org.jfree.chart.title.TextTitle.clone()",1,1,11,11,1
"org.jfree.chart.title.TextTitle.draw(Graphics2D,Rectangle2D)",1,1,11,15,1
"org.jfree.chart.title.TextTitle.draw(Graphics2D,Rectangle2D,Object)",3,6,52,501,11
"org.jfree.chart.title.TextTitle.drawHorizontal(Graphics2D,Rectangle2D)",1,6,46,512,9
"org.jfree.chart.title.TextTitle.drawVertical(Graphics2D,Rectangle2D)",1,6,46,540,9
"org.jfree.chart.title.TextTitle.equals(Object)",12,1,45,497,12
"org.jfree.chart.title.TextTitle.getBackgroundPaint()",1,1,8,8,1
"org.jfree.chart.title.TextTitle.getExpandToFitSpace()",1,1,9,11,1
"org.jfree.chart.title.TextTitle.getFont()",1,1,10,8,1
"org.jfree.chart.title.TextTitle.getMaximumLinesToDisplay()",1,1,12,13,1
"org.jfree.chart.title.TextTitle.getPaint()",1,1,10,8,1
"org.jfree.chart.title.TextTitle.getText()",1,1,10,8,1
"org.jfree.chart.title.TextTitle.getTextAlignment()",1,1,11,8,1
"org.jfree.chart.title.TextTitle.getToolTipText()",1,1,8,8,1
"org.jfree.chart.title.TextTitle.getURLText()",1,1,8,8,1
"org.jfree.chart.title.TextTitle.hashCode()",1,5,15,254,5
"org.jfree.chart.title.TextTitle.readObject(ObjectInputStream)",1,1,14,41,1
"org.jfree.chart.title.TextTitle.setBackgroundPaint(Paint)",1,1,11,22,1
"org.jfree.chart.title.TextTitle.setExpandToFitSpace(boolean)",1,1,11,26,1
"org.jfree.chart.title.TextTitle.setFont(Font)",1,2,15,60,2
"org.jfree.chart.title.TextTitle.setMaximumLinesToDisplay(int)",1,1,14,26,1
"org.jfree.chart.title.TextTitle.setPaint(Paint)",1,2,15,60,2
"org.jfree.chart.title.TextTitle.setText(String)",1,2,13,60,2
"org.jfree.chart.title.TextTitle.setTextAlignment(HorizontalAlignment)",1,1,11,34,1
"org.jfree.chart.title.TextTitle.setToolTipText(String)",1,1,10,22,1
"org.jfree.chart.title.TextTitle.setURLText(String)",1,1,10,22,1
"org.jfree.chart.title.TextTitle.writeObject(ObjectOutputStream)",1,1,12,41,1
"org.jfree.chart.title.TextTitleTest.testCloning()",1,1,11,71,1
"org.jfree.chart.title.TextTitleTest.testEquals()",1,1,56,846,1
"org.jfree.chart.title.TextTitleTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.title.TextTitleTest.testSerialization()",1,1,9,26,1
"org.jfree.chart.title.Title.Title()",1,1,8,19,1
"org.jfree.chart.title.Title.Title(RectangleEdge,HorizontalAlignment,VerticalAlignment)",1,1,16,19,1
"org.jfree.chart.title.Title.Title(RectangleEdge,HorizontalAlignment,VerticalAlignment,RectangleInsets)",1,1,29,142,1
"org.jfree.chart.title.Title.addChangeListener(TitleChangeListener)",1,1,8,19,1
"org.jfree.chart.title.Title.clone()",1,1,19,26,1
"org.jfree.chart.title.Title.equals(Object)",8,1,33,273,8
"org.jfree.chart.title.Title.getHorizontalAlignment()",1,1,8,8,1
"org.jfree.chart.title.Title.getNotify()",1,1,9,11,1
"org.jfree.chart.title.Title.getPosition()",1,1,8,8,1
"org.jfree.chart.title.Title.getVerticalAlignment()",1,1,8,8,1
"org.jfree.chart.title.Title.hashCode()",1,1,14,111,1
"org.jfree.chart.title.Title.isVisible()",1,1,13,13,1
"org.jfree.chart.title.Title.notifyListeners(TitleChangeEvent)",1,4,18,133,4
"org.jfree.chart.title.Title.readObject(ObjectInputStream)",1,1,13,24,1
"org.jfree.chart.title.Title.removeChangeListener(TitleChangeListener)",1,1,8,19,1
"org.jfree.chart.title.Title.setHorizontalAlignment(HorizontalAlignment)",1,2,14,55,2
"org.jfree.chart.title.Title.setNotify(boolean)",1,2,13,34,2
"org.jfree.chart.title.Title.setPosition(RectangleEdge)",1,2,13,55,2
"org.jfree.chart.title.Title.setVerticalAlignment(VerticalAlignment)",1,2,14,55,2
"org.jfree.chart.title.Title.setVisible(boolean)",1,1,14,26,1
"org.jfree.chart.title.Title.writeObject(ObjectOutputStream)",1,1,10,11,1
"org.jfree.chart.title.TitleTest.testEquals()",1,1,26,257,1
"org.jfree.chart.title.TitleTest.testHashcode()",1,1,12,60,1
"org.jfree.chart.ui.Align.Align()",1,1,6,4,1
"org.jfree.chart.ui.Align.align(Rectangle2D,Rectangle2D,int)",1,7,32,453,7
"org.jfree.chart.ui.ApplicationFrame.ApplicationFrame(String)",1,1,9,15,1
"org.jfree.chart.ui.ApplicationFrame.windowActivated(WindowEvent)",1,1,9,2,1
"org.jfree.chart.ui.ApplicationFrame.windowClosed(WindowEvent)",1,1,9,2,1
"org.jfree.chart.ui.ApplicationFrame.windowClosing(WindowEvent)",1,2,12,33,2
"org.jfree.chart.ui.ApplicationFrame.windowDeactivated(WindowEvent)",1,1,9,2,1
"org.jfree.chart.ui.ApplicationFrame.windowDeiconified(WindowEvent)",1,1,9,2,1
"org.jfree.chart.ui.ApplicationFrame.windowIconified(WindowEvent)",1,1,9,2,1
"org.jfree.chart.ui.ApplicationFrame.windowOpened(WindowEvent)",1,1,9,2,1
"org.jfree.chart.ui.FontChooserPanel.FontChooserPanel(Font)",1,1,42,560,1
"org.jfree.chart.ui.FontChooserPanel.getSelectedFont()",1,1,9,15,1
"org.jfree.chart.ui.FontChooserPanel.getSelectedName()",1,1,8,11,1
"org.jfree.chart.ui.FontChooserPanel.getSelectedSize()",2,2,14,60,2
"org.jfree.chart.ui.FontChooserPanel.getSelectedStyle()",4,2,19,117,5
"org.jfree.chart.ui.FontChooserPanel.setSelectedFont(Font)",6,5,31,403,6
"org.jfree.chart.ui.FontDisplayField.FontDisplayField(Font)",1,1,11,24,1
"org.jfree.chart.ui.FontDisplayField.fontToString(Font)",2,2,15,59,2
"org.jfree.chart.ui.FontDisplayField.getDisplayFont()",1,1,8,8,1
"org.jfree.chart.ui.FontDisplayField.setDisplayFont(Font)",1,1,9,25,1
"org.jfree.chart.ui.LCBLayout.LCBLayout(int)",1,1,12,79,1
"org.jfree.chart.ui.LCBLayout.addLayoutComponent(Component)",1,1,8,2,1
"org.jfree.chart.ui.LCBLayout.addLayoutComponent(String,Component)",1,1,10,2,1
"org.jfree.chart.ui.LCBLayout.layoutContainer(Container)",1,6,59,"1,168",11
"org.jfree.chart.ui.LCBLayout.minimumLayoutSize(Container)",1,3,38,627,6
"org.jfree.chart.ui.LCBLayout.preferredLayoutSize(Container)",1,3,38,627,6
"org.jfree.chart.ui.LCBLayout.removeLayoutComponent(Component)",1,1,9,2,1
"org.jfree.chart.ui.LCBLayout.removeLayoutComponent(String,Component)",1,1,9,2,1
"org.jfree.chart.ui.NumberCellRenderer.NumberCellRenderer()",1,1,8,11,1
"org.jfree.chart.ui.NumberCellRenderer.getTableCellRendererComponent(JTable,Object,boolean,boolean,int,int)",1,3,32,125,3
"org.jfree.chart.ui.PaintSample.PaintSample(Paint)",1,1,9,26,1
"org.jfree.chart.ui.PaintSample.getPaint()",1,1,8,8,1
"org.jfree.chart.ui.PaintSample.getPreferredSize()",1,1,9,8,1
"org.jfree.chart.ui.PaintSample.paintComponent(Graphics)",1,1,20,257,1
"org.jfree.chart.ui.PaintSample.setPaint(Paint)",1,1,9,15,1
"org.jfree.chart.ui.RectangleAnchor.createRectangle(Size2D,double,double,RectangleAnchor)",1,1,40,721,10
"org.jfree.chart.ui.RectangleAnchor.getAnchorPoint(Rectangle2D)",1,10,31,499,10
"org.jfree.chart.ui.RectangleEdge.coordinate(Rectangle2D,RectangleEdge)",1,5,24,161,5
"org.jfree.chart.ui.RectangleEdge.isLeftOrRight(RectangleEdge)",1,1,11,34,2
"org.jfree.chart.ui.RectangleEdge.isTopOrBottom(RectangleEdge)",1,1,11,34,2
"org.jfree.chart.ui.RectangleEdge.opposite(RectangleEdge)",1,1,23,118,5
"org.jfree.chart.ui.RectangleInsets.RectangleInsets()",1,1,8,14,1
"org.jfree.chart.ui.RectangleInsets.RectangleInsets(UnitType,double,double,double,double)",2,1,21,114,2
"org.jfree.chart.ui.RectangleInsets.RectangleInsets(double,double,double,double)",1,1,12,38,1
"org.jfree.chart.ui.RectangleInsets.calculateBottomInset(double)",1,1,14,64,2
"org.jfree.chart.ui.RectangleInsets.calculateBottomOutset(double)",1,1,14,93,2
"org.jfree.chart.ui.RectangleInsets.calculateLeftInset(double)",1,1,14,64,2
"org.jfree.chart.ui.RectangleInsets.calculateLeftOutset(double)",1,1,14,93,2
"org.jfree.chart.ui.RectangleInsets.calculateRightInset(double)",1,1,14,64,2
"org.jfree.chart.ui.RectangleInsets.calculateRightOutset(double)",1,1,14,93,2
"org.jfree.chart.ui.RectangleInsets.calculateTopInset(double)",1,1,14,64,2
"org.jfree.chart.ui.RectangleInsets.calculateTopOutset(double)",1,1,14,93,2
"org.jfree.chart.ui.RectangleInsets.createAdjustedRectangle(Rectangle2D,LengthAdjustmentType,LengthAdjustmentType)",2,5,44,500,6
"org.jfree.chart.ui.RectangleInsets.createInsetRectangle(Rectangle2D)",1,1,10,13,1
"org.jfree.chart.ui.RectangleInsets.createInsetRectangle(Rectangle2D,boolean,boolean)",2,3,31,266,4
"org.jfree.chart.ui.RectangleInsets.createOutsetRectangle(Rectangle2D)",1,1,10,13,1
"org.jfree.chart.ui.RectangleInsets.createOutsetRectangle(Rectangle2D,boolean,boolean)",2,3,31,266,4
"org.jfree.chart.ui.RectangleInsets.equals(Object)",8,1,33,265,8
"org.jfree.chart.ui.RectangleInsets.extendHeight(double)",1,1,11,23,1
"org.jfree.chart.ui.RectangleInsets.extendWidth(double)",1,1,10,23,1
"org.jfree.chart.ui.RectangleInsets.getBottom()",1,1,8,11,1
"org.jfree.chart.ui.RectangleInsets.getLeft()",1,1,8,11,1
"org.jfree.chart.ui.RectangleInsets.getRight()",1,1,8,11,1
"org.jfree.chart.ui.RectangleInsets.getTop()",1,1,8,11,1
"org.jfree.chart.ui.RectangleInsets.getUnitType()",1,1,9,8,1
"org.jfree.chart.ui.RectangleInsets.hashCode()",1,6,20,459,6
"org.jfree.chart.ui.RectangleInsets.toString()",1,1,11,53,1
"org.jfree.chart.ui.RectangleInsets.trim(Rectangle2D)",1,1,14,155,1
"org.jfree.chart.ui.RectangleInsets.trimHeight(double)",1,1,11,23,1
"org.jfree.chart.ui.RectangleInsets.trimWidth(double)",1,1,10,23,1
"org.jfree.chart.ui.Size2D.Size2D()",1,1,6,10,1
"org.jfree.chart.ui.Size2D.Size2D(double,double)",1,1,10,25,1
"org.jfree.chart.ui.Size2D.clone()",1,1,10,11,1
"org.jfree.chart.ui.Size2D.equals(Object)",5,1,23,134,5
"org.jfree.chart.ui.Size2D.getHeight()",1,1,8,11,1
"org.jfree.chart.ui.Size2D.getWidth()",1,1,8,11,1
"org.jfree.chart.ui.Size2D.setHeight(double)",1,1,8,15,1
"org.jfree.chart.ui.Size2D.setWidth(double)",1,1,8,15,1
"org.jfree.chart.ui.Size2D.toString()",1,1,9,26,1
"org.jfree.chart.ui.StandardGradientPaintTransformer.StandardGradientPaintTransformer()",1,1,7,8,1
"org.jfree.chart.ui.StandardGradientPaintTransformer.StandardGradientPaintTransformer(GradientPaintTransformType)",2,1,12,41,2
"org.jfree.chart.ui.StandardGradientPaintTransformer.clone()",1,1,12,11,1
"org.jfree.chart.ui.StandardGradientPaintTransformer.equals(Object)",4,1,22,97,4
"org.jfree.chart.ui.StandardGradientPaintTransformer.getType()",1,1,10,8,1
"org.jfree.chart.ui.StandardGradientPaintTransformer.hashCode()",1,2,8,34,2
"org.jfree.chart.ui.StandardGradientPaintTransformer.transform(GradientPaint,Shape)",1,5,40,489,5
"org.jfree.chart.ui.StrokeChooserPanel.StrokeChooserPanel(StrokeSample,StrokeSample[])",1,2,4,199,2
"org.jfree.chart.ui.StrokeChooserPanel.getSelectedStroke()",1,1,8,11,1
"org.jfree.chart.ui.StrokeChooserPanel.getSelector()",1,1,8,11,1
"org.jfree.chart.ui.StrokeSample.StrokeSample(Stroke)",1,1,10,38,1
"org.jfree.chart.ui.StrokeSample.getListCellRendererComponent(JList,Object,int,boolean,boolean)",1,2,23,48,2
"org.jfree.chart.ui.StrokeSample.getPreferredSize()",1,1,9,8,1
"org.jfree.chart.ui.StrokeSample.getStroke()",1,1,8,8,1
"org.jfree.chart.ui.StrokeSample.paintComponent(Graphics)",1,2,37,538,2
"org.jfree.chart.ui.StrokeSample.setStroke(Stroke)",1,1,9,15,1
"org.jfree.chart.ui.TextAnchor.TextAnchor(String)",1,1,8,8,1
"org.jfree.chart.ui.TextAnchor.equals(Object)",4,1,21,101,4
"org.jfree.chart.ui.TextAnchor.hashCode()",1,1,9,15,1
"org.jfree.chart.ui.TextAnchor.isBaseline()",1,1,12,35,3
"org.jfree.chart.ui.TextAnchor.isBottom()",1,1,12,35,3
"org.jfree.chart.ui.TextAnchor.isHalfAscent()",1,1,12,35,3
"org.jfree.chart.ui.TextAnchor.isHorizontalCenter()",1,1,13,59,5
"org.jfree.chart.ui.TextAnchor.isLeft()",1,1,13,59,5
"org.jfree.chart.ui.TextAnchor.isRight()",1,1,13,59,5
"org.jfree.chart.ui.TextAnchor.isTop()",1,1,11,35,3
"org.jfree.chart.ui.TextAnchor.isVerticalCenter()",1,1,11,35,3
"org.jfree.chart.ui.TextAnchor.readResolve()",1,15,56,499,16
"org.jfree.chart.ui.TextAnchor.toString()",1,1,8,8,1
"org.jfree.chart.ui.UIUtils.UIUtils()",1,1,2,0,1
"org.jfree.chart.ui.UIUtils.centerDialogInParent(Dialog)",1,1,8,18,1
"org.jfree.chart.ui.UIUtils.centerFrameOnScreen(Window)",1,1,8,18,1
"org.jfree.chart.ui.UIUtils.createJButton(String,Font)",1,1,13,26,1
"org.jfree.chart.ui.UIUtils.createJLabel(String,Font)",1,1,13,26,1
"org.jfree.chart.ui.UIUtils.createJLabel(String,Font,Color)",1,1,15,39,1
"org.jfree.chart.ui.UIUtils.createTablePanel(TableModel)",1,3,20,160,3
"org.jfree.chart.ui.UIUtils.positionDialogRelativeToParent(Dialog,double,double)",2,2,25,286,2
"org.jfree.chart.ui.UIUtils.positionFrameOnScreen(Window,double,double)",1,1,20,242,1
"org.jfree.chart.ui.UIUtils.positionFrameRandomly(Window)",1,1,9,18,1
"org.jfree.chart.urls.CustomCategoryURLGenerator.CustomCategoryURLGenerator()",1,1,6,4,1
"org.jfree.chart.urls.CustomCategoryURLGenerator.addURLSeries(List)",1,1,12,48,2
"org.jfree.chart.urls.CustomCategoryURLGenerator.clone()",1,1,15,36,1
"org.jfree.chart.urls.CustomCategoryURLGenerator.equals(Object)",10,4,41,382,10
"org.jfree.chart.urls.CustomCategoryURLGenerator.generateURL(CategoryDataset,int,int)",1,1,13,18,1
"org.jfree.chart.urls.CustomCategoryURLGenerator.getListCount()",1,1,8,15,1
"org.jfree.chart.urls.CustomCategoryURLGenerator.getURL(int,int)",1,4,20,110,4
"org.jfree.chart.urls.CustomCategoryURLGenerator.getURLCount(int)",1,2,15,68,2
"org.jfree.chart.urls.CustomCategoryURLGeneratorTest.testAddURLSeries()",1,1,23,208,1
"org.jfree.chart.urls.CustomCategoryURLGeneratorTest.testCloning()",1,1,23,228,1
"org.jfree.chart.urls.CustomCategoryURLGeneratorTest.testEquals()",1,1,21,164,1
"org.jfree.chart.urls.CustomCategoryURLGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.urls.CustomCategoryURLGeneratorTest.testSerialization()",1,1,20,138,1
"org.jfree.chart.urls.CustomPieURLGenerator.CustomPieURLGenerator()",1,1,8,8,1
"org.jfree.chart.urls.CustomPieURLGenerator.addURLs(Map)",1,1,14,15,1
"org.jfree.chart.urls.CustomPieURLGenerator.clone()",1,3,24,149,3
"org.jfree.chart.urls.CustomPieURLGenerator.equals(Object)",8,4,36,330,8
"org.jfree.chart.urls.CustomPieURLGenerator.generateURL(PieDataset,Comparable,int)",1,1,16,18,1
"org.jfree.chart.urls.CustomPieURLGenerator.getListCount()",1,1,10,15,1
"org.jfree.chart.urls.CustomPieURLGenerator.getURL(Comparable,int)",1,3,18,84,3
"org.jfree.chart.urls.CustomPieURLGenerator.getURLCount(int)",1,2,18,68,2
"org.jfree.chart.urls.CustomPieURLGeneratorTest.testCloning()",1,1,19,175,1
"org.jfree.chart.urls.CustomPieURLGeneratorTest.testEquals()",1,1,15,99,1
"org.jfree.chart.urls.CustomPieURLGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.urls.CustomPieURLGeneratorTest.testSerialization()",1,1,13,57,1
"org.jfree.chart.urls.CustomXYURLGenerator.CustomXYURLGenerator()",1,1,6,4,1
"org.jfree.chart.urls.CustomXYURLGenerator.addURLSeries(List)",1,1,13,48,2
"org.jfree.chart.urls.CustomXYURLGenerator.clone()",1,1,14,36,1
"org.jfree.chart.urls.CustomXYURLGenerator.equals(Object)",10,4,42,382,10
"org.jfree.chart.urls.CustomXYURLGenerator.generateURL(XYDataset,int,int)",1,1,13,18,1
"org.jfree.chart.urls.CustomXYURLGenerator.getListCount()",1,1,8,15,1
"org.jfree.chart.urls.CustomXYURLGenerator.getURL(int,int)",1,4,20,110,4
"org.jfree.chart.urls.CustomXYURLGenerator.getURLCount(int)",1,2,15,68,2
"org.jfree.chart.urls.CustomXYURLGeneratorTest.testAddURLSeries()",1,1,23,208,1
"org.jfree.chart.urls.CustomXYURLGeneratorTest.testCloning()",1,1,23,228,1
"org.jfree.chart.urls.CustomXYURLGeneratorTest.testEquals()",1,1,21,164,1
"org.jfree.chart.urls.CustomXYURLGeneratorTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.chart.urls.CustomXYURLGeneratorTest.testSerialization()",1,1,20,138,1
"org.jfree.chart.urls.StandardCategoryURLGenerator.StandardCategoryURLGenerator()",1,1,6,4,1
"org.jfree.chart.urls.StandardCategoryURLGenerator.StandardCategoryURLGenerator(String)",1,1,9,18,1
"org.jfree.chart.urls.StandardCategoryURLGenerator.StandardCategoryURLGenerator(String,String,String)",1,1,20,68,1
"org.jfree.chart.urls.StandardCategoryURLGenerator.clone()",1,1,15,11,1
"org.jfree.chart.urls.StandardCategoryURLGenerator.equals(Object)",6,1,29,186,6
"org.jfree.chart.urls.StandardCategoryURLGenerator.generateURL(CategoryDataset,int,int)",1,1,27,215,3
"org.jfree.chart.urls.StandardCategoryURLGenerator.hashCode()",1,4,17,156,4
"org.jfree.chart.urls.StandardCategoryURLGeneratorTest.testEquals()",1,1,21,207,1
"org.jfree.chart.urls.StandardCategoryURLGeneratorTest.testGenerateURL()",1,1,19,215,1
"org.jfree.chart.urls.StandardCategoryURLGeneratorTest.testPublicCloneable()",1,1,9,15,1
"org.jfree.chart.urls.StandardCategoryURLGeneratorTest.testSerialization()",1,1,11,26,1
"org.jfree.chart.urls.StandardPieURLGenerator.StandardPieURLGenerator()",1,1,6,8,1
"org.jfree.chart.urls.StandardPieURLGenerator.StandardPieURLGenerator(String)",1,1,8,11,1
"org.jfree.chart.urls.StandardPieURLGenerator.StandardPieURLGenerator(String,String)",1,1,10,15,1
"org.jfree.chart.urls.StandardPieURLGenerator.StandardPieURLGenerator(String,String,String)",1,1,16,55,1
"org.jfree.chart.urls.StandardPieURLGenerator.equals(Object)",6,1,27,190,6
"org.jfree.chart.urls.StandardPieURLGenerator.generateURL(PieDataset,Comparable,int)",1,2,29,211,4
"org.jfree.chart.urls.StandardPieURLGeneratorTest.testEquals()",1,1,29,382,1
"org.jfree.chart.urls.StandardPieURLGeneratorTest.testPublicCloneable()",1,1,10,24,1
"org.jfree.chart.urls.StandardPieURLGeneratorTest.testSerialization()",1,1,11,31,1
"org.jfree.chart.urls.StandardPieURLGeneratorTest.testURL()",1,1,15,137,1
"org.jfree.chart.urls.StandardXYURLGenerator.StandardXYURLGenerator()",1,1,7,15,1
"org.jfree.chart.urls.StandardXYURLGenerator.StandardXYURLGenerator(String)",1,1,10,15,1
"org.jfree.chart.urls.StandardXYURLGenerator.StandardXYURLGenerator(String,String,String)",1,1,18,68,1
"org.jfree.chart.urls.StandardXYURLGenerator.equals(Object)",6,1,29,186,6
"org.jfree.chart.urls.StandardXYURLGenerator.generateURL(XYDataset,int,int)",1,1,19,118,2
"org.jfree.chart.urls.StandardXYURLGeneratorTest.testPublicCloneable()",1,1,9,19,1
"org.jfree.chart.urls.StandardXYURLGeneratorTest.testSerialization()",1,1,10,26,1
"org.jfree.chart.urls.StandardXYZURLGenerator.generateURL(XYZDataset,int,int)",1,1,13,26,1
"org.jfree.chart.urls.TimeSeriesURLGenerator.TimeSeriesURLGenerator()",1,1,6,4,1
"org.jfree.chart.urls.TimeSeriesURLGenerator.TimeSeriesURLGenerator(DateFormat,String,String,String)",1,1,22,104,1
"org.jfree.chart.urls.TimeSeriesURLGenerator.equals(Object)",7,1,30,236,7
"org.jfree.chart.urls.TimeSeriesURLGenerator.generateURL(XYDataset,int,int)",2,2,35,341,6
"org.jfree.chart.urls.TimeSeriesURLGenerator.getDateFormat()",1,1,10,11,1
"org.jfree.chart.urls.TimeSeriesURLGenerator.getItemParameterName()",1,1,10,8,1
"org.jfree.chart.urls.TimeSeriesURLGenerator.getPrefix()",1,1,10,8,1
"org.jfree.chart.urls.TimeSeriesURLGenerator.getSeriesParameterName()",1,1,10,8,1
"org.jfree.chart.urls.TimeSeriesURLGeneratorTest.testEquals()",1,1,39,472,1
"org.jfree.chart.urls.TimeSeriesURLGeneratorTest.testGenerateURL()",1,1,12,91,1
"org.jfree.chart.urls.TimeSeriesURLGeneratorTest.testPublicCloneable()",1,1,9,15,1
"org.jfree.chart.urls.TimeSeriesURLGeneratorTest.testSerialization()",1,1,10,22,1
"org.jfree.chart.urls.URLUtilities.encode(String,String)",1,4,33,125,4
"org.jfree.chart.util.AbstractObjectList.AbstractObjectList()",1,1,6,8,1
"org.jfree.chart.util.AbstractObjectList.AbstractObjectList(int)",1,1,8,13,1
"org.jfree.chart.util.AbstractObjectList.AbstractObjectList(int,int)",1,1,10,30,1
"org.jfree.chart.util.AbstractObjectList.clear()",1,1,7,26,1
"org.jfree.chart.util.AbstractObjectList.clone()",1,2,19,114,2
"org.jfree.chart.util.AbstractObjectList.equals(Object)",6,2,27,206,6
"org.jfree.chart.util.AbstractObjectList.get(int)",1,1,15,68,3
"org.jfree.chart.util.AbstractObjectList.hashCode()",1,1,8,11,1
"org.jfree.chart.util.AbstractObjectList.indexOf(Object)",3,1,16,88,3
"org.jfree.chart.util.AbstractObjectList.readObject(ObjectInputStream)",1,3,20,162,3
"org.jfree.chart.util.AbstractObjectList.set(int,Object)",2,2,18,200,3
"org.jfree.chart.util.AbstractObjectList.size()",1,1,8,11,1
"org.jfree.chart.util.AbstractObjectList.writeObject(ObjectOutputStream)",1,3,23,188,4
"org.jfree.chart.util.Args.nullNotPermitted(Object,String)",2,1,16,43,2
"org.jfree.chart.util.Args.requireInRange(int,String,int,int)",2,1,17,80,2
"org.jfree.chart.util.Args.requireNonNegative(int,String)",2,1,12,57,2
"org.jfree.chart.util.ArrayUtils.ArrayUtils()",1,1,5,0,1
"org.jfree.chart.util.ArrayUtils.clone(float[][])",2,2,21,224,3
"org.jfree.chart.util.ArrayUtils.compareVersionArrays(Comparable[],Comparable[])",6,2,36,264,7
"org.jfree.chart.util.ArrayUtils.equal(float[][],float[][])",6,2,25,212,6
"org.jfree.chart.util.ArrayUtils.equalReferencesInArrays(Object[],Object[])",10,1,38,293,10
"org.jfree.chart.util.ArrayUtils.hasDuplicateItems(Object[])",5,4,22,178,6
"org.jfree.chart.util.AttrStringUtils.AttrStringUtils()",1,1,3,0,1
"org.jfree.chart.util.AttrStringUtils.deriveRotationAnchorOffsets(Graphics2D,AttributedString,TextAnchor)",1,8,51,589,9
"org.jfree.chart.util.AttrStringUtils.deriveTextBoundsAnchorOffsets(Graphics2D,AttributedString,TextAnchor,Rectangle2D)",1,8,41,625,9
"org.jfree.chart.util.AttrStringUtils.drawRotatedString(AttributedString,Graphics2D,double,float,float)",1,1,16,48,1
"org.jfree.chart.util.AttrStringUtils.drawRotatedString(AttributedString,Graphics2D,float,float,TextAnchor,double,TextAnchor)",1,1,25,189,1
"org.jfree.chart.util.AttrStringUtils.drawRotatedString(AttributedString,Graphics2D,float,float,TextAnchor,double,float,float)",1,1,24,138,1
"org.jfree.chart.util.AttrStringUtils.drawRotatedString(AttributedString,Graphics2D,float,float,double,float,float)",1,1,27,153,1
"org.jfree.chart.util.AttrStringUtils.getTextBounds(AttributedString,Graphics2D)",1,1,16,33,1
"org.jfree.chart.util.AttrStringUtils.isBaseline(TextAnchor)",1,3,5,41,3
"org.jfree.chart.util.AttrStringUtils.isBottom(TextAnchor)",1,3,5,41,3
"org.jfree.chart.util.AttrStringUtils.isHalfAscent(TextAnchor)",1,3,5,41,3
"org.jfree.chart.util.AttrStringUtils.isHalfHeight(TextAnchor)",1,3,5,41,3
"org.jfree.chart.util.AttrStringUtils.isHorizontalCenter(TextAnchor)",1,5,7,65,5
"org.jfree.chart.util.AttrStringUtils.isHorizontalLeft(TextAnchor)",1,5,7,65,5
"org.jfree.chart.util.AttrStringUtils.isHorizontalRight(TextAnchor)",1,5,7,65,5
"org.jfree.chart.util.AttrStringUtils.isTop(TextAnchor)",1,3,5,41,3
"org.jfree.chart.util.BooleanList.BooleanList()",1,1,5,0,1
"org.jfree.chart.util.BooleanList.equals(Object)",2,2,14,34,2
"org.jfree.chart.util.BooleanList.getBoolean(int)",1,1,10,11,1
"org.jfree.chart.util.BooleanList.hashCode()",1,1,9,11,1
"org.jfree.chart.util.BooleanList.setBoolean(int,Boolean)",1,1,10,15,1
"org.jfree.chart.util.CloneUtils.clone(Object)",4,3,36,220,7
"org.jfree.chart.util.CloneUtils.cloneList(List<?>)",2,2,20,76,3
"org.jfree.chart.util.CloneUtils.cloneMapValues(Map)",3,3,27,149,4
"org.jfree.chart.util.DefaultShadowGenerator.DefaultShadowGenerator()",1,1,6,26,1
"org.jfree.chart.util.DefaultShadowGenerator.DefaultShadowGenerator(int,Color,float,int,double)",1,1,18,94,1
"org.jfree.chart.util.DefaultShadowGenerator.applyShadow(BufferedImage)",1,1,71,"1,317",9
"org.jfree.chart.util.DefaultShadowGenerator.calculateOffsetX()",1,1,10,43,1
"org.jfree.chart.util.DefaultShadowGenerator.calculateOffsetY()",1,1,10,46,1
"org.jfree.chart.util.DefaultShadowGenerator.createDropShadow(BufferedImage)",1,1,20,140,1
"org.jfree.chart.util.DefaultShadowGenerator.equals(Object)",8,1,33,265,8
"org.jfree.chart.util.DefaultShadowGenerator.getAngle()",1,1,8,11,1
"org.jfree.chart.util.DefaultShadowGenerator.getDistance()",1,1,8,11,1
"org.jfree.chart.util.DefaultShadowGenerator.getShadowColor()",1,1,8,8,1
"org.jfree.chart.util.DefaultShadowGenerator.getShadowOpacity()",1,1,8,11,1
"org.jfree.chart.util.DefaultShadowGenerator.getShadowSize()",1,1,8,11,1
"org.jfree.chart.util.DefaultShadowGenerator.hashCode()",1,1,14,110,1
"org.jfree.chart.util.DirectionalGradientPaintTransformer.DirectionalGradientPaintTransformer()",1,1,6,4,1
"org.jfree.chart.util.DirectionalGradientPaintTransformer.transform(GradientPaint,Shape)",1,5,56,878,11
"org.jfree.chart.util.ExportUtils.isJFreeSVGAvailable()",1,1,16,44,2
"org.jfree.chart.util.ExportUtils.isOrsonPDFAvailable()",1,1,16,44,2
"org.jfree.chart.util.ExportUtils.writeAsJPEG(Drawable,int,int,File)",1,1,25,127,1
"org.jfree.chart.util.ExportUtils.writeAsPDF(Drawable,int,int,File)",2,1,47,463,9
"org.jfree.chart.util.ExportUtils.writeAsPNG(Drawable,int,int,File)",1,1,25,127,1
"org.jfree.chart.util.ExportUtils.writeAsSVG(Drawable,int,int,File)",2,1,49,466,9
"org.jfree.chart.util.HMSNumberFormat.HMSNumberFormat()",1,1,6,0,1
"org.jfree.chart.util.HMSNumberFormat.format(double,StringBuffer,FieldPosition)",1,1,15,24,1
"org.jfree.chart.util.HMSNumberFormat.format(long,StringBuffer,FieldPosition)",1,1,22,203,1
"org.jfree.chart.util.HMSNumberFormat.parse(String,ParsePosition)",1,1,13,4,1
"org.jfree.chart.util.HMSNumberFormatTest.testGeneral()",1,1,10,137,1
"org.jfree.chart.util.HexNumberFormat.HexNumberFormat()",1,1,6,8,1
"org.jfree.chart.util.HexNumberFormat.HexNumberFormat(int)",1,1,8,19,1
"org.jfree.chart.util.HexNumberFormat.format(double,StringBuffer,FieldPosition)",1,1,15,24,1
"org.jfree.chart.util.HexNumberFormat.format(long,StringBuffer,FieldPosition)",1,2,23,158,3
"org.jfree.chart.util.HexNumberFormat.getNumberOfDigits()",1,1,8,15,1
"org.jfree.chart.util.HexNumberFormat.parse(String,ParsePosition)",1,1,13,4,1
"org.jfree.chart.util.HexNumberFormat.setNumberOfDigits(int)",1,1,8,15,1
"org.jfree.chart.util.LineUtils.clipLine(Line2D,Rectangle2D)",3,4,83,"1,512",21
"org.jfree.chart.util.LineUtils.extendLine(Line2D,double,double)",1,1,27,257,1
"org.jfree.chart.util.LineUtilsTest.lineEquals(Line2D,double,double,double,double)",1,1,10,231,5
"org.jfree.chart.util.LineUtilsTest.testClipLine()",1,1,44,"1,048",1
"org.jfree.chart.util.LogFormat.LogFormat()",1,1,8,15,1
"org.jfree.chart.util.LogFormat.LogFormat(double,String,String,boolean)",1,1,21,106,1
"org.jfree.chart.util.LogFormat.LogFormat(double,String,boolean)",1,1,11,28,1
"org.jfree.chart.util.LogFormat.calculateLog(double)",1,1,10,26,1
"org.jfree.chart.util.LogFormat.clone()",1,1,11,30,1
"org.jfree.chart.util.LogFormat.equals(Object)",8,1,33,286,8
"org.jfree.chart.util.LogFormat.format(double,StringBuffer,FieldPosition)",1,2,20,89,2
"org.jfree.chart.util.LogFormat.format(long,StringBuffer,FieldPosition)",1,2,21,89,2
"org.jfree.chart.util.LogFormat.getExponentFormat()",1,1,10,11,1
"org.jfree.chart.util.LogFormat.parse(String,ParsePosition)",1,1,13,4,1
"org.jfree.chart.util.LogFormat.setExponentFormat(NumberFormat)",1,1,11,22,1
"org.jfree.chart.util.LogFormatTest.testCloning()",1,1,11,83,1
"org.jfree.chart.util.LogFormatTest.testEquals()",1,1,25,339,1
"org.jfree.chart.util.LogFormatTest.testHashcode()",1,1,12,89,1
"org.jfree.chart.util.LogFormatTest.testSerialization()",1,1,9,36,1
"org.jfree.chart.util.ObjectList.ObjectList()",1,1,5,0,1
"org.jfree.chart.util.ObjectList.ObjectList(int)",1,1,8,11,1
"org.jfree.chart.util.ObjectList.get(int)",1,1,11,15,1
"org.jfree.chart.util.ObjectList.indexOf(Object)",1,1,11,15,1
"org.jfree.chart.util.ObjectList.set(int,Object)",1,1,10,19,1
"org.jfree.chart.util.ObjectUtils.ObjectUtils()",1,1,5,0,1
"org.jfree.chart.util.ObjectUtils.clone(Object)",2,1,17,46,2
"org.jfree.chart.util.ObjectUtils.deepClone(Collection)",2,2,27,120,3
"org.jfree.chart.util.ObjectUtils.equal(Object,Object)",3,2,19,76,3
"org.jfree.chart.util.ObjectUtils.hashCode(Object)",1,2,15,48,2
"org.jfree.chart.util.PaintAlpha.cloneImage(BufferedImage)",1,3,36,204,3
"org.jfree.chart.util.PaintAlpha.darker(Color)",1,1,16,75,1
"org.jfree.chart.util.PaintAlpha.darker(GradientPaint)",1,1,13,55,1
"org.jfree.chart.util.PaintAlpha.darker(Paint)",7,6,45,176,8
"org.jfree.chart.util.PaintAlpha.darkerLinearGradientPaint(LinearGradientPaint)",1,2,17,151,2
"org.jfree.chart.util.PaintAlpha.darkerRadialGradientPaint(RadialGradientPaint)",1,2,17,162,2
"org.jfree.chart.util.PaintAlpha.darkerTexturePaint(TexturePaint)",3,7,118,"1,298",10
"org.jfree.chart.util.PaintAlpha.setLegacyAlpha(boolean)",1,1,15,28,1
"org.jfree.chart.util.PaintList.PaintList()",1,1,6,4,1
"org.jfree.chart.util.PaintList.equals(Object)",6,2,27,194,6
"org.jfree.chart.util.PaintList.getPaint(int)",1,1,10,11,1
"org.jfree.chart.util.PaintList.hashCode()",1,1,9,11,1
"org.jfree.chart.util.PaintList.readObject(ObjectInputStream)",1,3,18,121,3
"org.jfree.chart.util.PaintList.setPaint(int,Paint)",1,1,9,15,1
"org.jfree.chart.util.PaintList.writeObject(ObjectOutputStream)",1,3,22,158,3
"org.jfree.chart.util.PaintUtils.PaintUtils()",1,1,5,0,1
"org.jfree.chart.util.PaintUtils.colorToString(Color)",5,7,39,430,9
"org.jfree.chart.util.PaintUtils.equal(Paint,Paint)",7,22,60,873,28
"org.jfree.chart.util.PaintUtils.stringToColor(String)",2,2,25,100,4
"org.jfree.chart.util.RelativeDateFormat.RelativeDateFormat()",1,1,6,8,1
"org.jfree.chart.util.RelativeDateFormat.RelativeDateFormat(Date)",1,1,8,11,1
"org.jfree.chart.util.RelativeDateFormat.RelativeDateFormat(long)",1,1,26,277,1
"org.jfree.chart.util.RelativeDateFormat.clone()",1,1,12,51,1
"org.jfree.chart.util.RelativeDateFormat.equals(Object)",16,1,57,691,16
"org.jfree.chart.util.RelativeDateFormat.format(Date,StringBuffer,FieldPosition)",1,3,45,587,6
"org.jfree.chart.util.RelativeDateFormat.getBaseMillis()",1,1,11,13,1
"org.jfree.chart.util.RelativeDateFormat.getDaySuffix()",1,1,10,8,1
"org.jfree.chart.util.RelativeDateFormat.getHourSuffix()",1,1,10,8,1
"org.jfree.chart.util.RelativeDateFormat.getMinuteSuffix()",1,1,10,8,1
"org.jfree.chart.util.RelativeDateFormat.getPositivePrefix()",1,1,13,8,1
"org.jfree.chart.util.RelativeDateFormat.getSecondSuffix()",1,1,10,8,1
"org.jfree.chart.util.RelativeDateFormat.getShowZeroDays()",1,1,11,13,1
"org.jfree.chart.util.RelativeDateFormat.getShowZeroHours()",1,1,13,13,1
"org.jfree.chart.util.RelativeDateFormat.hashCode()",1,1,18,294,1
"org.jfree.chart.util.RelativeDateFormat.parse(String,ParsePosition)",1,1,12,4,1
"org.jfree.chart.util.RelativeDateFormat.setBaseMillis(long)",1,1,12,15,1
"org.jfree.chart.util.RelativeDateFormat.setDayFormatter(NumberFormat)",1,1,11,22,1
"org.jfree.chart.util.RelativeDateFormat.setDaySuffix(String)",1,1,11,22,1
"org.jfree.chart.util.RelativeDateFormat.setHourFormatter(NumberFormat)",1,1,11,22,1
"org.jfree.chart.util.RelativeDateFormat.setHourSuffix(String)",1,1,11,22,1
"org.jfree.chart.util.RelativeDateFormat.setMinuteFormatter(NumberFormat)",1,1,11,22,1
"org.jfree.chart.util.RelativeDateFormat.setMinuteSuffix(String)",1,1,11,22,1
"org.jfree.chart.util.RelativeDateFormat.setPositivePrefix(String)",1,1,14,22,1
"org.jfree.chart.util.RelativeDateFormat.setSecondFormatter(NumberFormat)",1,1,9,22,1
"org.jfree.chart.util.RelativeDateFormat.setSecondSuffix(String)",1,1,11,22,1
"org.jfree.chart.util.RelativeDateFormat.setShowZeroDays(boolean)",1,1,11,15,1
"org.jfree.chart.util.RelativeDateFormat.setShowZeroHours(boolean)",1,1,13,15,1
"org.jfree.chart.util.RelativeDateFormatTest.setUp()",1,1,8,24,1
"org.jfree.chart.util.RelativeDateFormatTest.tearDown()",1,1,7,15,1
"org.jfree.chart.util.RelativeDateFormatTest.test2033092()",1,1,30,341,1
"org.jfree.chart.util.RelativeDateFormatTest.testCloning()",1,1,17,137,1
"org.jfree.chart.util.RelativeDateFormatTest.testEquals()",1,1,49,764,1
"org.jfree.chart.util.RelativeDateFormatTest.testFormat()",1,1,9,55,1
"org.jfree.chart.util.RelativeDateFormatTest.testHashCode()",1,1,12,70,1
"org.jfree.chart.util.RelativeDateFormatTest.testNegative()",1,1,10,53,1
"org.jfree.chart.util.ResourceBundleWrapper.ResourceBundleWrapper()",1,1,6,0,1
"org.jfree.chart.util.ResourceBundleWrapper.getBundle(String)",2,2,20,53,2
"org.jfree.chart.util.ResourceBundleWrapper.getBundle(String,Locale)",2,2,21,57,2
"org.jfree.chart.util.ResourceBundleWrapper.getBundle(String,Locale,ClassLoader)",1,1,14,19,1
"org.jfree.chart.util.ResourceBundleWrapper.removeCodeBase(URL,URLClassLoader)",1,3,23,146,3
"org.jfree.chart.util.Rotation.Rotation(double)",1,1,8,8,1
"org.jfree.chart.util.Rotation.getFactor()",1,1,9,11,1
"org.jfree.chart.util.SerialUtils.SerialUtils()",1,1,5,0,1
"org.jfree.chart.util.SerialUtils.isSerializable(Class)",1,1,11,19,1
"org.jfree.chart.util.SerialUtils.readAttributedString(ObjectInputStream)",2,3,36,245,4
"org.jfree.chart.util.SerialUtils.readComposite(ObjectInputStream)",2,4,34,204,5
"org.jfree.chart.util.SerialUtils.readPaint(ObjectInputStream)",2,4,36,305,5
"org.jfree.chart.util.SerialUtils.readPoint2D(ObjectInputStream)",2,2,24,125,3
"org.jfree.chart.util.SerialUtils.readShape(ObjectInputStream)",10,10,92,"1,391",16
"org.jfree.chart.util.SerialUtils.readStroke(ObjectInputStream)",2,3,36,277,4
"org.jfree.chart.util.SerialUtils.writeAttributedString(AttributedString,ObjectOutputStream)",2,4,50,409,5
"org.jfree.chart.util.SerialUtils.writeComposite(Composite,ObjectOutputStream)",2,4,30,208,5
"org.jfree.chart.util.SerialUtils.writePaint(Paint,ObjectOutputStream)",2,4,34,366,5
"org.jfree.chart.util.SerialUtils.writePoint2D(Point2D,ObjectOutputStream)",2,2,22,129,3
"org.jfree.chart.util.SerialUtils.writeShape(Shape,ObjectOutputStream)",2,9,77,"1,142",10
"org.jfree.chart.util.SerialUtils.writeStroke(Stroke,ObjectOutputStream)",2,3,35,299,4
"org.jfree.chart.util.ShapeList.ShapeList()",1,1,6,4,1
"org.jfree.chart.util.ShapeList.clone()",1,1,11,11,1
"org.jfree.chart.util.ShapeList.equals(Object)",5,2,23,164,5
"org.jfree.chart.util.ShapeList.getShape(int)",1,1,10,11,1
"org.jfree.chart.util.ShapeList.hashCode()",1,1,9,11,1
"org.jfree.chart.util.ShapeList.readObject(ObjectInputStream)",1,3,18,131,3
"org.jfree.chart.util.ShapeList.setShape(int,Shape)",1,1,10,15,1
"org.jfree.chart.util.ShapeList.writeObject(ObjectOutputStream)",1,3,22,169,3
"org.jfree.chart.util.ShapeUtils.ShapeUtils()",1,1,5,0,1
"org.jfree.chart.util.ShapeUtils.clone(Shape)",2,2,26,50,3
"org.jfree.chart.util.ShapeUtils.contains(Rectangle2D,Rectangle2D)",1,4,20,219,4
"org.jfree.chart.util.ShapeUtils.createDiagonalCross(float,float)",1,1,25,441,1
"org.jfree.chart.util.ShapeUtils.createDiamond(float)",1,1,16,99,1
"org.jfree.chart.util.ShapeUtils.createDownTriangle(float)",1,1,15,88,1
"org.jfree.chart.util.ShapeUtils.createLineRegion(Line2D,float)",1,2,36,651,2
"org.jfree.chart.util.ShapeUtils.createRegularCross(float,float)",1,1,25,259,1
"org.jfree.chart.util.ShapeUtils.createTranslatedShape(Shape,RectangleAnchor,double,double)",3,1,25,167,3
"org.jfree.chart.util.ShapeUtils.createTranslatedShape(Shape,double,double)",2,1,18,77,2
"org.jfree.chart.util.ShapeUtils.createUpTriangle(float)",1,1,15,85,1
"org.jfree.chart.util.ShapeUtils.drawRotatedShape(Graphics2D,Shape,double,float,float)",1,1,17,85,1
"org.jfree.chart.util.ShapeUtils.equal(Arc2D,Arc2D)",7,1,30,216,7
"org.jfree.chart.util.ShapeUtils.equal(Ellipse2D,Ellipse2D)",4,1,21,106,4
"org.jfree.chart.util.ShapeUtils.equal(GeneralPath,GeneralPath)",8,4,42,445,10
"org.jfree.chart.util.ShapeUtils.equal(Line2D,Line2D)",5,1,24,144,5
"org.jfree.chart.util.ShapeUtils.equal(Polygon,Polygon)",6,1,27,194,6
"org.jfree.chart.util.ShapeUtils.equal(Shape,Shape)",6,6,34,248,11
"org.jfree.chart.util.ShapeUtils.getPointInRectangle(double,double,Rectangle2D)",1,1,19,91,1
"org.jfree.chart.util.ShapeUtils.intersects(Rectangle2D,Rectangle2D)",1,4,19,219,4
"org.jfree.chart.util.ShapeUtils.isPointInRect(Rectangle2D,double,double)",1,4,14,83,4
"org.jfree.chart.util.ShapeUtils.rotateShape(Shape,double,float,float)",2,1,20,89,2
"org.jfree.chart.util.StringUtils.StringUtils()",1,1,5,0,1
"org.jfree.chart.util.StringUtils.endsWithIgnoreCase(String,String)",2,1,14,91,2
"org.jfree.chart.util.StringUtils.getLineSeparator()",1,1,14,30,2
"org.jfree.chart.util.StringUtils.startsWithIgnoreCase(String,String)",2,1,14,74,2
"org.jfree.chart.util.StrokeList.StrokeList()",1,1,6,4,1
"org.jfree.chart.util.StrokeList.clone()",1,1,10,11,1
"org.jfree.chart.util.StrokeList.equals(Object)",4,2,20,85,4
"org.jfree.chart.util.StrokeList.getStroke(int)",1,1,10,11,1
"org.jfree.chart.util.StrokeList.hashCode()",1,1,8,11,1
"org.jfree.chart.util.StrokeList.readObject(ObjectInputStream)",1,3,18,121,3
"org.jfree.chart.util.StrokeList.setStroke(int,Stroke)",1,1,9,15,1
"org.jfree.chart.util.StrokeList.writeObject(ObjectOutputStream)",1,3,22,169,3
"org.jfree.data.ComparableObjectItem.ComparableObjectItem(Comparable,Object)",1,1,11,30,1
"org.jfree.data.ComparableObjectItem.clone()",1,1,12,11,1
"org.jfree.data.ComparableObjectItem.compareTo(Object)",2,2,29,68,2
"org.jfree.data.ComparableObjectItem.equals(Object)",5,1,25,145,5
"org.jfree.data.ComparableObjectItem.getComparable()",1,1,8,8,1
"org.jfree.data.ComparableObjectItem.getObject()",1,1,8,8,1
"org.jfree.data.ComparableObjectItem.hashCode()",1,2,12,83,2
"org.jfree.data.ComparableObjectItem.setObject(Object)",1,1,9,11,1
"org.jfree.data.ComparableObjectItemTest.testCloning()",1,1,12,74,1
"org.jfree.data.ComparableObjectItemTest.testCompareTo()",1,1,18,171,1
"org.jfree.data.ComparableObjectItemTest.testConstructor()",1,1,15,28,2
"org.jfree.data.ComparableObjectItemTest.testEquals()",1,1,19,155,1
"org.jfree.data.ComparableObjectItemTest.testSerialization()",1,1,11,34,1
"org.jfree.data.ComparableObjectSeries.ComparableObjectSeries(Comparable)",1,1,10,13,1
"org.jfree.data.ComparableObjectSeries.ComparableObjectSeries(Comparable,boolean,boolean)",1,1,17,53,1
"org.jfree.data.ComparableObjectSeries.add(Comparable,Object)",1,1,14,15,1
"org.jfree.data.ComparableObjectSeries.add(Comparable,Object,boolean)",1,1,18,28,1
"org.jfree.data.ComparableObjectSeries.add(ComparableObjectItem,boolean)",6,9,54,544,11
"org.jfree.data.ComparableObjectSeries.clear()",1,2,11,39,2
"org.jfree.data.ComparableObjectSeries.delete(int,int)",1,2,13,62,2
"org.jfree.data.ComparableObjectSeries.equals(Object)",8,1,34,261,8
"org.jfree.data.ComparableObjectSeries.getAllowDuplicateXValues()",1,1,9,11,1
"org.jfree.data.ComparableObjectSeries.getAutoSort()",1,1,10,11,1
"org.jfree.data.ComparableObjectSeries.getDataItem(int)",1,1,10,19,1
"org.jfree.data.ComparableObjectSeries.getItemCount()",1,1,9,15,1
"org.jfree.data.ComparableObjectSeries.getMaximumItemCount()",1,1,10,13,1
"org.jfree.data.ComparableObjectSeries.hashCode()",1,4,28,357,6
"org.jfree.data.ComparableObjectSeries.indexOf(Comparable)",4,3,26,169,4
"org.jfree.data.ComparableObjectSeries.remove(Comparable)",1,1,10,11,1
"org.jfree.data.ComparableObjectSeries.remove(int)",1,1,14,28,1
"org.jfree.data.ComparableObjectSeries.setMaximumItemCount(int)",1,3,25,95,3
"org.jfree.data.ComparableObjectSeries.update(Comparable,Object)",2,2,20,89,2
"org.jfree.data.ComparableObjectSeries.updateByIndex(int,Object)",1,1,12,28,1
"org.jfree.data.ComparableObjectSeriesTest.MyComparableObjectSeries.MyComparableObjectSeries(Comparable)",1,1,8,8,1
"org.jfree.data.ComparableObjectSeriesTest.MyComparableObjectSeries.MyComparableObjectSeries(Comparable,boolean,boolean)",1,1,11,22,1
"org.jfree.data.ComparableObjectSeriesTest.MyComparableObjectSeries.add(Comparable,Object)",1,1,4,15,1
"org.jfree.data.ComparableObjectSeriesTest.MyComparableObjectSeries.remove(Comparable)",1,1,4,11,1
"org.jfree.data.ComparableObjectSeriesTest.testCloning()",1,1,12,104,1
"org.jfree.data.ComparableObjectSeriesTest.testConstructor1()",1,1,22,160,2
"org.jfree.data.ComparableObjectSeriesTest.testEquals()",1,1,40,458,1
"org.jfree.data.ComparableObjectSeriesTest.testHashCode()",1,1,26,325,1
"org.jfree.data.ComparableObjectSeriesTest.testSerialization()",1,1,11,48,1
"org.jfree.data.DataUtils.calculateColumnTotal(Values2D,int)",1,3,21,151,3
"org.jfree.data.DataUtils.calculateColumnTotal(Values2D,int,int[])",1,4,28,199,4
"org.jfree.data.DataUtils.calculateRowTotal(Values2D,int)",1,3,21,151,3
"org.jfree.data.DataUtils.calculateRowTotal(Values2D,int,int[])",1,4,28,199,4
"org.jfree.data.DataUtils.clone(double[][])",1,3,21,205,3
"org.jfree.data.DataUtils.createNumberArray(double[])",1,1,16,100,2
"org.jfree.data.DataUtils.createNumberArray2D(double[][])",1,2,17,108,2
"org.jfree.data.DataUtils.equal(double[][],double[][])",6,2,30,212,6
"org.jfree.data.DataUtils.getCumulativePercentages(KeyedValues)",1,5,30,306,5
"org.jfree.data.DataUtilsTest.testCalculateColumnTotal()",1,1,15,219,1
"org.jfree.data.DataUtilsTest.testCalculateColumnTotal2()",1,1,30,520,1
"org.jfree.data.DataUtilsTest.testCalculateRowTotal()",1,1,15,219,1
"org.jfree.data.DataUtilsTest.testCalculateRowTotal2()",1,1,32,556,1
"org.jfree.data.DataUtilsTest.testClone()",1,1,22,293,1
"org.jfree.data.DataUtilsTest.testCreateNumberArray2D()",1,1,13,171,1
"org.jfree.data.DataUtilsTest.testEqual()",1,1,40,614,1
"org.jfree.data.DefaultKeyedValue.DefaultKeyedValue(Comparable,Number)",1,1,12,30,1
"org.jfree.data.DefaultKeyedValue.clone()",1,1,14,11,1
"org.jfree.data.DefaultKeyedValue.equals(Object)",5,2,25,182,6
"org.jfree.data.DefaultKeyedValue.getKey()",1,1,9,8,1
"org.jfree.data.DefaultKeyedValue.getValue()",1,1,9,8,1
"org.jfree.data.DefaultKeyedValue.hashCode()",1,3,12,102,3
"org.jfree.data.DefaultKeyedValue.setValue(Number)",1,1,8,15,1
"org.jfree.data.DefaultKeyedValue.toString()",1,1,10,34,1
"org.jfree.data.DefaultKeyedValueTest.testCloning()",1,1,14,126,1
"org.jfree.data.DefaultKeyedValueTest.testConstructor()",1,1,21,141,2
"org.jfree.data.DefaultKeyedValueTest.testEquals()",1,1,16,170,1
"org.jfree.data.DefaultKeyedValueTest.testSerialization()",1,1,9,34,1
"org.jfree.data.DefaultKeyedValues.DefaultKeyedValues()",1,1,8,25,1
"org.jfree.data.DefaultKeyedValues.addValue(Comparable,Number)",1,1,11,11,1
"org.jfree.data.DefaultKeyedValues.addValue(Comparable,double)",1,1,11,19,1
"org.jfree.data.DefaultKeyedValues.clear()",1,1,10,33,1
"org.jfree.data.DefaultKeyedValues.clone()",1,1,16,82,1
"org.jfree.data.DefaultKeyedValues.equals(Object)",9,3,41,348,9
"org.jfree.data.DefaultKeyedValues.getIndex(Comparable)",2,1,19,81,2
"org.jfree.data.DefaultKeyedValues.getItemCount()",1,1,9,15,1
"org.jfree.data.DefaultKeyedValues.getKey(int)",1,1,13,19,1
"org.jfree.data.DefaultKeyedValues.getKeys()",1,1,9,11,1
"org.jfree.data.DefaultKeyedValues.getValue(Comparable)",2,1,19,64,2
"org.jfree.data.DefaultKeyedValues.getValue(int)",1,1,13,19,1
"org.jfree.data.DefaultKeyedValues.hashCode()",1,2,9,34,2
"org.jfree.data.DefaultKeyedValues.insertValue(int,Comparable,Number)",2,4,31,281,5
"org.jfree.data.DefaultKeyedValues.insertValue(int,Comparable,double)",1,1,14,28,1
"org.jfree.data.DefaultKeyedValues.rebuildIndex()",1,2,11,108,2
"org.jfree.data.DefaultKeyedValues.removeValue(Comparable)",2,1,17,60,2
"org.jfree.data.DefaultKeyedValues.removeValue(int)",1,1,14,38,1
"org.jfree.data.DefaultKeyedValues.setValue(Comparable,Number)",1,2,19,187,2
"org.jfree.data.DefaultKeyedValues.setValue(Comparable,double)",1,1,9,19,1
"org.jfree.data.DefaultKeyedValues.sortByKeys(SortOrder)",1,3,21,252,3
"org.jfree.data.DefaultKeyedValues.sortByValues(SortOrder)",1,3,23,252,3
"org.jfree.data.DefaultKeyedValues2D.DefaultKeyedValues2D()",1,1,6,8,1
"org.jfree.data.DefaultKeyedValues2D.DefaultKeyedValues2D(boolean)",1,1,11,44,1
"org.jfree.data.DefaultKeyedValues2D.addValue(Number,Comparable,Comparable)",1,1,16,15,1
"org.jfree.data.DefaultKeyedValues2D.clear()",1,1,8,30,1
"org.jfree.data.DefaultKeyedValues2D.clone()",1,1,19,82,1
"org.jfree.data.DefaultKeyedValues2D.equals(Object)",13,4,51,514,13
"org.jfree.data.DefaultKeyedValues2D.getColumnCount()",1,1,11,15,1
"org.jfree.data.DefaultKeyedValues2D.getColumnIndex(Comparable)",1,1,15,34,1
"org.jfree.data.DefaultKeyedValues2D.getColumnKey(int)",1,1,15,22,1
"org.jfree.data.DefaultKeyedValues2D.getColumnKeys()",1,1,11,11,1
"org.jfree.data.DefaultKeyedValues2D.getRowCount()",1,1,11,15,1
"org.jfree.data.DefaultKeyedValues2D.getRowIndex(Comparable)",2,2,20,74,2
"org.jfree.data.DefaultKeyedValues2D.getRowKey(int)",1,1,14,22,1
"org.jfree.data.DefaultKeyedValues2D.getRowKeys()",1,1,11,11,1
"org.jfree.data.DefaultKeyedValues2D.getValue(Comparable,Comparable)",3,3,36,230,4
"org.jfree.data.DefaultKeyedValues2D.getValue(int,int)",1,3,25,129,3
"org.jfree.data.DefaultKeyedValues2D.hashCode()",1,1,13,89,1
"org.jfree.data.DefaultKeyedValues2D.removeColumn(Comparable)",2,3,28,192,4
"org.jfree.data.DefaultKeyedValues2D.removeColumn(int)",1,1,12,22,1
"org.jfree.data.DefaultKeyedValues2D.removeRow(Comparable)",2,2,21,85,2
"org.jfree.data.DefaultKeyedValues2D.removeRow(int)",1,1,12,35,1
"org.jfree.data.DefaultKeyedValues2D.removeValue(Comparable,Comparable)",5,8,51,587,10
"org.jfree.data.DefaultKeyedValues2D.setValue(Number,Comparable,Comparable)",1,4,35,293,4
"org.jfree.data.DefaultKeyedValues2DTest.testCloning()",1,1,17,212,1
"org.jfree.data.DefaultKeyedValues2DTest.testColumnCount()",1,1,12,105,1
"org.jfree.data.DefaultKeyedValues2DTest.testEquals()",1,1,14,121,1
"org.jfree.data.DefaultKeyedValues2DTest.testGetColumnKey()",1,1,19,155,2
"org.jfree.data.DefaultKeyedValues2DTest.testGetRowKey()",1,1,26,294,2
"org.jfree.data.DefaultKeyedValues2DTest.testGetValue()",1,1,25,166,3
"org.jfree.data.DefaultKeyedValues2DTest.testGetValue2()",1,1,29,305,3
"org.jfree.data.DefaultKeyedValues2DTest.testRemoveColumnByKey()",1,1,21,199,2
"org.jfree.data.DefaultKeyedValues2DTest.testRemoveRow()",1,1,15,51,2
"org.jfree.data.DefaultKeyedValues2DTest.testRemoveValue()",1,1,16,196,1
"org.jfree.data.DefaultKeyedValues2DTest.testRemoveValueBug1690654()",1,1,15,181,1
"org.jfree.data.DefaultKeyedValues2DTest.testRowCount()",1,1,12,105,1
"org.jfree.data.DefaultKeyedValues2DTest.testSerialization()",1,1,14,124,1
"org.jfree.data.DefaultKeyedValues2DTest.testSparsePopulation()",1,1,14,148,1
"org.jfree.data.DefaultKeyedValuesTest.testAddValue()",1,1,25,286,2
"org.jfree.data.DefaultKeyedValuesTest.testClear()",1,1,12,79,1
"org.jfree.data.DefaultKeyedValuesTest.testCloning()",1,1,17,191,1
"org.jfree.data.DefaultKeyedValuesTest.testConstructor()",1,1,8,19,1
"org.jfree.data.DefaultKeyedValuesTest.testGetIndex()",1,1,22,187,2
"org.jfree.data.DefaultKeyedValuesTest.testGetIndex2()",1,1,12,99,1
"org.jfree.data.DefaultKeyedValuesTest.testGetItemCount()",1,1,14,113,1
"org.jfree.data.DefaultKeyedValuesTest.testGetKey()",1,1,26,171,3
"org.jfree.data.DefaultKeyedValuesTest.testGetKeys()",1,1,21,220,1
"org.jfree.data.DefaultKeyedValuesTest.testGetValue()",1,1,34,239,4
"org.jfree.data.DefaultKeyedValuesTest.testInsertAndRetrieve()",1,1,26,386,1
"org.jfree.data.DefaultKeyedValuesTest.testInsertValue()",1,1,22,314,1
"org.jfree.data.DefaultKeyedValuesTest.testRemoveValue()",1,1,22,223,2
"org.jfree.data.DefaultKeyedValuesTest.testSerialization()",1,1,13,83,1
"org.jfree.data.DefaultKeyedValuesTest.testSortByKeyAscending()",1,1,27,411,1
"org.jfree.data.DefaultKeyedValuesTest.testSortByKeyDescending()",1,1,27,411,1
"org.jfree.data.DefaultKeyedValuesTest.testSortByValueAscending()",1,1,27,411,1
"org.jfree.data.DefaultKeyedValuesTest.testSortByValueDescending()",1,1,27,411,1
"org.jfree.data.DomainOrderTest.testEquals()",1,1,18,148,1
"org.jfree.data.DomainOrderTest.testHashCode()",1,1,12,60,1
"org.jfree.data.DomainOrderTest.testSerialization()",1,1,9,22,1
"org.jfree.data.KeyToGroupMap.KeyToGroupMap()",1,1,6,8,1
"org.jfree.data.KeyToGroupMap.KeyToGroupMap(Comparable)",1,1,11,41,1
"org.jfree.data.KeyToGroupMap.clone()",1,1,17,82,1
"org.jfree.data.KeyToGroupMap.clone(Collection)",2,3,27,137,4
"org.jfree.data.KeyToGroupMap.clone(Object)",2,3,29,146,5
"org.jfree.data.KeyToGroupMap.equals(Object)",5,1,24,145,5
"org.jfree.data.KeyToGroupMap.getGroup(Comparable)",1,1,17,68,2
"org.jfree.data.KeyToGroupMap.getGroupCount()",1,1,8,24,1
"org.jfree.data.KeyToGroupMap.getGroupIndex(Comparable)",1,2,20,100,3
"org.jfree.data.KeyToGroupMap.getGroups()",1,3,19,98,3
"org.jfree.data.KeyToGroupMap.getKeyCount(Comparable)",1,2,21,103,3
"org.jfree.data.KeyToGroupMap.mapKeyToGroup(Comparable,Comparable)",1,7,30,280,7
"org.jfree.data.KeyToGroupMapTest.testCloning()",1,1,17,170,1
"org.jfree.data.KeyToGroupMapTest.testEquals()",1,1,14,107,1
"org.jfree.data.KeyToGroupMapTest.testGetGroup()",1,1,24,199,2
"org.jfree.data.KeyToGroupMapTest.testGetGroupIndex()",1,1,18,181,1
"org.jfree.data.KeyToGroupMapTest.testGroupCount()",1,1,28,237,1
"org.jfree.data.KeyToGroupMapTest.testKeyCount()",1,1,30,351,1
"org.jfree.data.KeyToGroupMapTest.testMapKeyToGroup()",1,1,26,182,2
"org.jfree.data.KeyToGroupMapTest.testSerialization()",1,1,9,26,1
"org.jfree.data.KeyedObject.KeyedObject(Comparable,Object)",1,1,10,18,1
"org.jfree.data.KeyedObject.clone()",1,2,19,59,2
"org.jfree.data.KeyedObject.equals(Object)",5,1,24,143,5
"org.jfree.data.KeyedObject.getKey()",1,1,8,8,1
"org.jfree.data.KeyedObject.getObject()",1,1,8,8,1
"org.jfree.data.KeyedObject.setObject(Object)",1,1,8,11,1
"org.jfree.data.KeyedObjectTest.testCloning()",1,1,11,83,1
"org.jfree.data.KeyedObjectTest.testCloning2()",1,1,24,218,1
"org.jfree.data.KeyedObjectTest.testEquals()",1,1,16,152,1
"org.jfree.data.KeyedObjectTest.testSerialization()",1,1,9,31,1
"org.jfree.data.KeyedObjects.KeyedObjects()",1,1,6,8,1
"org.jfree.data.KeyedObjects.addObject(Comparable,Object)",1,1,12,11,1
"org.jfree.data.KeyedObjects.clear()",1,1,8,11,1
"org.jfree.data.KeyedObjects.clone()",1,2,20,91,2
"org.jfree.data.KeyedObjects.equals(Object)",9,3,41,338,9
"org.jfree.data.KeyedObjects.getIndex(Comparable)",3,2,22,124,3
"org.jfree.data.KeyedObjects.getItemCount()",1,1,8,15,1
"org.jfree.data.KeyedObjects.getKey(int)",1,2,19,59,2
"org.jfree.data.KeyedObjects.getKeys()",1,2,14,60,2
"org.jfree.data.KeyedObjects.getObject(Comparable)",2,1,18,60,2
"org.jfree.data.KeyedObjects.getObject(int)",1,2,17,59,2
"org.jfree.data.KeyedObjects.hashCode()",1,2,9,34,2
"org.jfree.data.KeyedObjects.insertValue(int,Comparable,Object)",2,4,29,235,5
"org.jfree.data.KeyedObjects.removeValue(Comparable)",2,2,18,70,2
"org.jfree.data.KeyedObjects.removeValue(int)",1,1,10,19,1
"org.jfree.data.KeyedObjects.setObject(Comparable,Object)",1,2,21,100,2
"org.jfree.data.KeyedObjects2D.KeyedObjects2D()",1,1,8,25,1
"org.jfree.data.KeyedObjects2D.addObject(Object,Comparable,Comparable)",1,1,11,15,1
"org.jfree.data.KeyedObjects2D.clear()",1,1,10,30,1
"org.jfree.data.KeyedObjects2D.clone()",1,2,21,158,2
"org.jfree.data.KeyedObjects2D.equals(Object)",12,4,48,464,12
"org.jfree.data.KeyedObjects2D.getColumnCount()",1,1,10,15,1
"org.jfree.data.KeyedObjects2D.getColumnIndex(Comparable)",1,1,14,34,1
"org.jfree.data.KeyedObjects2D.getColumnKey(int)",1,1,12,19,1
"org.jfree.data.KeyedObjects2D.getColumnKeys()",1,1,10,11,1
"org.jfree.data.KeyedObjects2D.getObject(Comparable,Comparable)",4,2,35,267,4
"org.jfree.data.KeyedObjects2D.getObject(int,int)",1,4,24,146,4
"org.jfree.data.KeyedObjects2D.getRowCount()",1,1,10,15,1
"org.jfree.data.KeyedObjects2D.getRowIndex(Comparable)",1,1,14,34,1
"org.jfree.data.KeyedObjects2D.getRowKey(int)",1,1,12,19,1
"org.jfree.data.KeyedObjects2D.getRowKeys()",1,1,10,11,1
"org.jfree.data.KeyedObjects2D.hashCode()",1,1,13,89,1
"org.jfree.data.KeyedObjects2D.removeColumn(Comparable)",2,3,25,175,4
"org.jfree.data.KeyedObjects2D.removeColumn(int)",1,1,11,22,1
"org.jfree.data.KeyedObjects2D.removeObject(Comparable,Comparable)",7,8,59,730,12
"org.jfree.data.KeyedObjects2D.removeRow(Comparable)",2,1,17,60,2
"org.jfree.data.KeyedObjects2D.removeRow(int)",1,1,11,35,1
"org.jfree.data.KeyedObjects2D.setObject(Object,Comparable,Comparable)",1,3,27,235,3
"org.jfree.data.KeyedObjects2DTest.testCloning()",1,1,17,213,1
"org.jfree.data.KeyedObjects2DTest.testEquals()",1,1,14,114,1
"org.jfree.data.KeyedObjects2DTest.testGetValueByIndex()",1,1,46,399,5
"org.jfree.data.KeyedObjects2DTest.testGetValueByKey()",1,1,46,370,5
"org.jfree.data.KeyedObjects2DTest.testRemoveColumnByIndex()",1,1,30,237,3
"org.jfree.data.KeyedObjects2DTest.testRemoveColumnByKey()",1,1,30,228,3
"org.jfree.data.KeyedObjects2DTest.testRemoveRowByIndex()",1,1,30,237,3
"org.jfree.data.KeyedObjects2DTest.testRemoveRowByKey()",1,1,30,228,3
"org.jfree.data.KeyedObjects2DTest.testRemoveValue()",1,1,13,131,1
"org.jfree.data.KeyedObjects2DTest.testSerialization()",1,1,13,124,1
"org.jfree.data.KeyedObjects2DTest.testSetObject()",1,1,33,330,3
"org.jfree.data.KeyedObjectsTest.testCloning()",1,1,14,144,1
"org.jfree.data.KeyedObjectsTest.testCloning2()",1,1,26,248,1
"org.jfree.data.KeyedObjectsTest.testGetIndex()",1,1,22,185,2
"org.jfree.data.KeyedObjectsTest.testGetKey()",1,1,32,249,3
"org.jfree.data.KeyedObjectsTest.testGetObject()",1,1,32,247,3
"org.jfree.data.KeyedObjectsTest.testInsertAndRetrieve()",1,1,34,480,2
"org.jfree.data.KeyedObjectsTest.testRemoveValue()",1,1,34,290,3
"org.jfree.data.KeyedObjectsTest.testRemoveValueInt()",1,1,31,235,3
"org.jfree.data.KeyedObjectsTest.testSerialization()",1,1,12,76,1
"org.jfree.data.KeyedObjectsTest.testSetObject()",1,1,27,271,2
"org.jfree.data.KeyedValueComparator.KeyedValueComparator(KeyedValueComparatorType,SortOrder)",1,1,14,41,1
"org.jfree.data.KeyedValueComparator.compare(Object,Object)",11,6,73,708,15
"org.jfree.data.KeyedValueComparator.getOrder()",1,1,8,8,1
"org.jfree.data.KeyedValueComparator.getType()",1,1,8,8,1
"org.jfree.data.KeyedValues2DItemKey.KeyedValues2DItemKey(R,C)",1,1,12,41,1
"org.jfree.data.KeyedValues2DItemKey.compareTo(KeyedValues2DItemKey<R, C>)",1,2,8,76,2
"org.jfree.data.KeyedValues2DItemKey.equals(Object)",5,1,24,143,5
"org.jfree.data.KeyedValues2DItemKey.getColumnKey()",1,1,8,8,1
"org.jfree.data.KeyedValues2DItemKey.getRowKey()",1,1,8,8,1
"org.jfree.data.KeyedValues2DItemKey.hashCode()",1,1,7,78,1
"org.jfree.data.KeyedValues2DItemKey.toJSONString()",1,1,9,95,1
"org.jfree.data.KeyedValues2DItemKey.toString()",1,1,9,75,1
"org.jfree.data.KeyedValuesItemKey.KeyedValuesItemKey(Comparable<? extends Object>)",1,1,9,22,1
"org.jfree.data.KeyedValuesItemKey.equals(Object)",4,1,21,101,4
"org.jfree.data.KeyedValuesItemKey.getKey()",1,1,8,8,1
"org.jfree.data.KeyedValuesItemKey.toJSONString()",1,1,6,48,1
"org.jfree.data.KeyedValuesItemKey.toString()",1,1,8,55,1
"org.jfree.data.Range.Range(double,double)",2,1,15,82,2
"org.jfree.data.Range.combine(Range,Range)",3,1,27,120,3
"org.jfree.data.Range.combineIgnoringNaN(Range,Range)",6,5,32,224,8
"org.jfree.data.Range.constrain(double)",1,1,20,106,4
"org.jfree.data.Range.contains(double)",1,1,11,44,2
"org.jfree.data.Range.equals(Object)",4,1,21,116,4
"org.jfree.data.Range.expand(Range,double,double)",1,1,23,189,2
"org.jfree.data.Range.expandToInclude(Range,double)",4,3,25,136,4
"org.jfree.data.Range.getCentralValue()",1,1,8,38,1
"org.jfree.data.Range.getLength()",1,1,8,22,1
"org.jfree.data.Range.getLowerBound()",1,1,8,11,1
"org.jfree.data.Range.getUpperBound()",1,1,8,11,1
"org.jfree.data.Range.hashCode()",1,1,15,128,1
"org.jfree.data.Range.intersects(Range)",1,1,13,22,1
"org.jfree.data.Range.intersects(double,double)",2,1,17,96,3
"org.jfree.data.Range.isNaNRange()",1,2,11,30,2
"org.jfree.data.Range.max(double,double)",3,1,9,60,3
"org.jfree.data.Range.min(double,double)",3,1,18,60,3
"org.jfree.data.Range.scale(Range,double)",2,1,18,94,2
"org.jfree.data.Range.shift(Range,double)",1,1,11,24,1
"org.jfree.data.Range.shift(Range,double,boolean)",2,2,24,122,2
"org.jfree.data.Range.shiftWithNoZeroCrossing(double,double)",3,3,20,118,3
"org.jfree.data.Range.toString()",1,1,10,26,1
"org.jfree.data.RangeTest.testCombine()",1,1,20,278,1
"org.jfree.data.RangeTest.testCombineIgnoringNaN()",1,1,20,280,1
"org.jfree.data.RangeTest.testConstrain()",1,1,23,298,1
"org.jfree.data.RangeTest.testConstructor()",1,1,16,88,2
"org.jfree.data.RangeTest.testContains()",1,1,15,152,1
"org.jfree.data.RangeTest.testEquals()",1,1,18,154,1
"org.jfree.data.RangeTest.testExpand()",1,1,23,249,2
"org.jfree.data.RangeTest.testHashCode()",1,1,12,100,1
"org.jfree.data.RangeTest.testIntersects()",1,1,20,310,1
"org.jfree.data.RangeTest.testIsNaNRange()",1,1,7,69,1
"org.jfree.data.RangeTest.testScale()",1,1,29,291,3
"org.jfree.data.RangeTest.testSerialization()",1,1,9,31,1
"org.jfree.data.RangeTest.testShift()",1,1,39,690,2
"org.jfree.data.RangeTypeTest.testEquals()",1,1,18,148,1
"org.jfree.data.RangeTypeTest.testHashCode()",1,1,12,60,1
"org.jfree.data.RangeTypeTest.testSerialization()",1,1,9,22,1
"org.jfree.data.UnknownKeyException.UnknownKeyException(String)",1,1,8,8,1
"org.jfree.data.category.CategoryToPieDataset.CategoryToPieDataset(CategoryDataset,TableOrder,int)",1,2,22,89,2
"org.jfree.data.category.CategoryToPieDataset.datasetChanged(DatasetChangeEvent)",1,1,11,4,1
"org.jfree.data.category.CategoryToPieDataset.equals(Object)",9,3,43,348,9
"org.jfree.data.category.CategoryToPieDataset.getExtractIndex()",1,1,10,11,1
"org.jfree.data.category.CategoryToPieDataset.getExtractType()",1,1,11,8,1
"org.jfree.data.category.CategoryToPieDataset.getIndex(Comparable)",1,4,21,140,4
"org.jfree.data.category.CategoryToPieDataset.getItemCount()",1,4,19,122,4
"org.jfree.data.category.CategoryToPieDataset.getKey(int)",2,4,26,181,5
"org.jfree.data.category.CategoryToPieDataset.getKeys()",1,4,21,112,4
"org.jfree.data.category.CategoryToPieDataset.getUnderlyingDataset()",1,1,10,8,1
"org.jfree.data.category.CategoryToPieDataset.getValue(Comparable)",1,4,23,162,4
"org.jfree.data.category.CategoryToPieDataset.getValue(int)",2,4,26,187,5
"org.jfree.data.category.CategoryToPieDatasetTest.testConstructor()",1,1,13,84,1
"org.jfree.data.category.CategoryToPieDatasetTest.testEquals()",1,1,14,106,1
"org.jfree.data.category.CategoryToPieDatasetTest.testGetIndex()",1,1,23,209,2
"org.jfree.data.category.CategoryToPieDatasetTest.testGetKey()",1,1,39,253,4
"org.jfree.data.category.CategoryToPieDatasetTest.testGetValue()",1,1,39,263,4
"org.jfree.data.category.CategoryToPieDatasetTest.testSerialization()",1,1,19,159,1
"org.jfree.data.category.DefaultCategoryDataset.DefaultCategoryDataset()",1,1,6,8,1
"org.jfree.data.category.DefaultCategoryDataset.addValue(Number,Comparable,Comparable)",1,1,15,28,1
"org.jfree.data.category.DefaultCategoryDataset.addValue(double,Comparable,Comparable)",1,1,13,24,1
"org.jfree.data.category.DefaultCategoryDataset.clear()",1,1,8,15,1
"org.jfree.data.category.DefaultCategoryDataset.clone()",1,1,14,36,1
"org.jfree.data.category.DefaultCategoryDataset.equals(Object)",10,4,40,403,10
"org.jfree.data.category.DefaultCategoryDataset.getColumnCount()",1,1,11,15,1
"org.jfree.data.category.DefaultCategoryDataset.getColumnIndex(Comparable)",1,1,14,22,1
"org.jfree.data.category.DefaultCategoryDataset.getColumnKey(int)",1,1,13,19,1
"org.jfree.data.category.DefaultCategoryDataset.getColumnKeys()",1,1,11,15,1
"org.jfree.data.category.DefaultCategoryDataset.getRowCount()",1,1,11,15,1
"org.jfree.data.category.DefaultCategoryDataset.getRowIndex(Comparable)",1,1,14,22,1
"org.jfree.data.category.DefaultCategoryDataset.getRowKey(int)",1,1,15,22,1
"org.jfree.data.category.DefaultCategoryDataset.getRowKeys()",1,1,11,15,1
"org.jfree.data.category.DefaultCategoryDataset.getValue(Comparable,Comparable)",1,1,16,19,1
"org.jfree.data.category.DefaultCategoryDataset.getValue(int,int)",1,1,15,26,1
"org.jfree.data.category.DefaultCategoryDataset.hashCode()",1,1,9,15,1
"org.jfree.data.category.DefaultCategoryDataset.incrementValue(double,Comparable,Comparable)",1,2,20,84,2
"org.jfree.data.category.DefaultCategoryDataset.removeColumn(Comparable)",1,1,15,19,1
"org.jfree.data.category.DefaultCategoryDataset.removeColumn(int)",1,1,12,26,1
"org.jfree.data.category.DefaultCategoryDataset.removeRow(Comparable)",1,1,12,19,1
"org.jfree.data.category.DefaultCategoryDataset.removeRow(int)",1,1,12,26,1
"org.jfree.data.category.DefaultCategoryDataset.removeValue(Comparable,Comparable)",1,1,13,24,1
"org.jfree.data.category.DefaultCategoryDataset.setValue(Number,Comparable,Comparable)",1,1,15,28,1
"org.jfree.data.category.DefaultCategoryDataset.setValue(double,Comparable,Comparable)",1,1,14,24,1
"org.jfree.data.category.DefaultCategoryDatasetTest.testAddValue()",1,1,19,178,2
"org.jfree.data.category.DefaultCategoryDatasetTest.testBug1835955()",1,1,12,118,1
"org.jfree.data.category.DefaultCategoryDatasetTest.testCloning()",1,1,23,280,1
"org.jfree.data.category.DefaultCategoryDatasetTest.testEquals()",1,1,20,232,1
"org.jfree.data.category.DefaultCategoryDatasetTest.testGetColumnCount()",1,1,17,200,1
"org.jfree.data.category.DefaultCategoryDatasetTest.testGetRowCount()",1,1,17,200,1
"org.jfree.data.category.DefaultCategoryDatasetTest.testGetValue()",1,1,25,162,3
"org.jfree.data.category.DefaultCategoryDatasetTest.testGetValue2()",1,1,15,55,2
"org.jfree.data.category.DefaultCategoryDatasetTest.testIncrementValue()",1,1,32,288,3
"org.jfree.data.category.DefaultCategoryDatasetTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.category.DefaultCategoryDatasetTest.testRemoveColumn()",1,1,28,213,3
"org.jfree.data.category.DefaultCategoryDatasetTest.testRemoveRow()",1,1,28,213,3
"org.jfree.data.category.DefaultCategoryDatasetTest.testRemoveValue()",1,1,32,334,3
"org.jfree.data.category.DefaultCategoryDatasetTest.testSerialization()",1,1,11,44,1
"org.jfree.data.category.DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(Comparable[],Comparable[],Number[][],Number[][])",9,5,74,660,10
"org.jfree.data.category.DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(Number[][],Number[][])",1,1,14,18,1
"org.jfree.data.category.DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(String[],Number[][],Number[][])",1,1,17,19,1
"org.jfree.data.category.DefaultIntervalCategoryDataset.DefaultIntervalCategoryDataset(double[][],double[][])",1,1,13,25,1
"org.jfree.data.category.DefaultIntervalCategoryDataset.clone()",1,1,18,106,1
"org.jfree.data.category.DefaultIntervalCategoryDataset.clone(Number[][])",1,2,18,144,2
"org.jfree.data.category.DefaultIntervalCategoryDataset.equal(Number[][],Number[][])",6,2,25,200,6
"org.jfree.data.category.DefaultIntervalCategoryDataset.equals(Object)",7,1,32,236,7
"org.jfree.data.category.DefaultIntervalCategoryDataset.generateKeys(int,String)",1,1,18,89,2
"org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryCount()",1,2,16,74,3
"org.jfree.data.category.DefaultIntervalCategoryDataset.getCategoryIndex(Comparable)",3,2,19,108,3
"org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnCount()",1,1,13,15,1
"org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnIndex(Comparable)",1,1,14,22,1
"org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKey(int)",1,1,13,18,1
"org.jfree.data.category.DefaultIntervalCategoryDataset.getColumnKeys()",2,2,20,48,2
"org.jfree.data.category.DefaultIntervalCategoryDataset.getEndValue(Comparable,Comparable)",3,1,22,110,3
"org.jfree.data.category.DefaultIntervalCategoryDataset.getEndValue(int,int)",3,3,24,135,5
"org.jfree.data.category.DefaultIntervalCategoryDataset.getRowCount()",1,1,12,15,1
"org.jfree.data.category.DefaultIntervalCategoryDataset.getRowIndex(Comparable)",1,1,13,11,1
"org.jfree.data.category.DefaultIntervalCategoryDataset.getRowKey(int)",2,2,17,70,3
"org.jfree.data.category.DefaultIntervalCategoryDataset.getRowKeys()",2,2,19,48,2
"org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesCount()",1,1,16,51,2
"org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesIndex(Comparable)",3,2,20,112,3
"org.jfree.data.category.DefaultIntervalCategoryDataset.getSeriesKey(int)",2,2,16,76,3
"org.jfree.data.category.DefaultIntervalCategoryDataset.getStartValue(Comparable,Comparable)",3,1,23,110,3
"org.jfree.data.category.DefaultIntervalCategoryDataset.getStartValue(int,int)",3,3,27,135,5
"org.jfree.data.category.DefaultIntervalCategoryDataset.getValue(Comparable,Comparable)",3,1,25,102,3
"org.jfree.data.category.DefaultIntervalCategoryDataset.getValue(int,int)",1,1,17,23,1
"org.jfree.data.category.DefaultIntervalCategoryDataset.setCategoryKeys(Comparable[])",4,1,25,162,4
"org.jfree.data.category.DefaultIntervalCategoryDataset.setEndValue(int,Comparable,Number)",3,2,28,160,4
"org.jfree.data.category.DefaultIntervalCategoryDataset.setSeriesKeys(Comparable[])",2,1,18,66,2
"org.jfree.data.category.DefaultIntervalCategoryDataset.setStartValue(int,Comparable,Number)",3,2,28,160,4
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testCloning()",1,1,27,459,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testCloning2()",1,1,14,117,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testEquals()",1,1,32,530,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetCategoryCount()",1,1,11,45,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetCategoryIndex()",1,1,11,58,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetColumnCount()",1,1,11,45,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetColumnIndex()",1,1,11,58,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetColumnKeys()",1,1,12,56,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetRowAndColumnCount()",1,1,16,218,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetRowCount()",1,1,11,45,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetRowIndex()",1,1,11,58,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetRowKeys()",1,1,12,56,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetSeriesCount()",1,1,11,45,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetSeriesIndex()",1,1,11,58,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testGetValue()",1,1,57,818,3
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testSerialization()",1,1,17,199,1
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testSetCategoryKeys()",1,1,18,87,2
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testSetEndValue()",1,1,36,482,3
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testSetSeriesKeys()",1,1,18,87,2
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest.testSetStartValue()",1,1,36,482,3
"org.jfree.data.category.SlidingCategoryDataset.SlidingCategoryDataset(CategoryDataset,int,int)",1,1,15,38,1
"org.jfree.data.category.SlidingCategoryDataset.clone()",1,2,23,59,2
"org.jfree.data.category.SlidingCategoryDataset.equals(Object)",6,1,28,181,6
"org.jfree.data.category.SlidingCategoryDataset.getColumnCount()",2,2,15,84,2
"org.jfree.data.category.SlidingCategoryDataset.getColumnIndex(Comparable)",2,2,15,96,3
"org.jfree.data.category.SlidingCategoryDataset.getColumnKey(int)",1,1,13,31,1
"org.jfree.data.category.SlidingCategoryDataset.getColumnKeys()",1,2,16,94,2
"org.jfree.data.category.SlidingCategoryDataset.getFirstCategoryIndex()",1,1,10,13,1
"org.jfree.data.category.SlidingCategoryDataset.getMaximumCategoryCount()",1,1,10,13,1
"org.jfree.data.category.SlidingCategoryDataset.getRowCount()",1,1,9,15,1
"org.jfree.data.category.SlidingCategoryDataset.getRowIndex(Comparable)",1,1,11,19,1
"org.jfree.data.category.SlidingCategoryDataset.getRowKey(int)",1,1,13,19,1
"org.jfree.data.category.SlidingCategoryDataset.getRowKeys()",1,1,9,11,1
"org.jfree.data.category.SlidingCategoryDataset.getUnderlyingDataset()",1,1,8,8,1
"org.jfree.data.category.SlidingCategoryDataset.getValue(Comparable,Comparable)",3,3,24,171,3
"org.jfree.data.category.SlidingCategoryDataset.getValue(int,int)",1,1,12,39,1
"org.jfree.data.category.SlidingCategoryDataset.lastCategoryIndex()",2,1,12,88,2
"org.jfree.data.category.SlidingCategoryDataset.setFirstCategoryIndex(int)",2,2,16,81,3
"org.jfree.data.category.SlidingCategoryDataset.setMaximumCategoryCount(int)",2,1,15,51,2
"org.jfree.data.category.SlidingCategoryDatasetTest.testCloning()",1,1,22,258,1
"org.jfree.data.category.SlidingCategoryDatasetTest.testEquals()",1,1,27,375,1
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetColumnCount()",1,1,22,246,1
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetColumnIndex()",1,1,17,218,1
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetColumnKeys()",1,1,21,255,1
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetRowCount()",1,1,14,104,1
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetRowIndex()",1,1,17,206,1
"org.jfree.data.category.SlidingCategoryDatasetTest.testGetValue()",1,1,31,305,3
"org.jfree.data.category.SlidingCategoryDatasetTest.testSerialization()",1,1,20,189,1
"org.jfree.data.function.LineFunction2D.LineFunction2D(double,double)",1,1,10,25,1
"org.jfree.data.function.LineFunction2D.equals(Object)",4,1,21,108,4
"org.jfree.data.function.LineFunction2D.getIntercept()",1,1,10,11,1
"org.jfree.data.function.LineFunction2D.getSlope()",1,1,10,11,1
"org.jfree.data.function.LineFunction2D.getValue(double)",1,1,11,34,1
"org.jfree.data.function.LineFunction2D.hashCode()",1,1,12,50,1
"org.jfree.data.function.LineFunction2DTest.testConstructor()",1,1,9,49,1
"org.jfree.data.function.LineFunction2DTest.testEquals()",1,1,13,83,1
"org.jfree.data.function.LineFunction2DTest.testHashCode()",1,1,10,41,1
"org.jfree.data.function.LineFunction2DTest.testSerialization()",1,1,9,31,1
"org.jfree.data.function.NormalDistributionFunction2D.NormalDistributionFunction2D(double,double)",2,1,16,138,2
"org.jfree.data.function.NormalDistributionFunction2D.equals(Object)",4,1,21,108,4
"org.jfree.data.function.NormalDistributionFunction2D.getMean()",1,1,8,11,1
"org.jfree.data.function.NormalDistributionFunction2D.getStandardDeviation()",1,1,8,11,1
"org.jfree.data.function.NormalDistributionFunction2D.getValue(double)",1,1,12,74,1
"org.jfree.data.function.NormalDistributionFunction2D.hashCode()",1,1,12,50,1
"org.jfree.data.function.NormalDistributionFunction2DTest.testConstructor()",1,1,10,49,1
"org.jfree.data.function.NormalDistributionFunction2DTest.testEquals()",1,1,15,83,1
"org.jfree.data.function.NormalDistributionFunction2DTest.testHashCode()",1,1,12,41,1
"org.jfree.data.function.NormalDistributionFunction2DTest.testSerialization()",1,1,11,31,1
"org.jfree.data.function.PolynomialFunction2D.PolynomialFunction2D(double[])",1,1,11,30,1
"org.jfree.data.function.PolynomialFunction2D.equals(Object)",2,1,15,55,2
"org.jfree.data.function.PolynomialFunction2D.getCoefficients()",1,1,9,18,1
"org.jfree.data.function.PolynomialFunction2D.getOrder()",1,1,8,24,1
"org.jfree.data.function.PolynomialFunction2D.getValue(double)",1,2,15,89,2
"org.jfree.data.function.PolynomialFunction2D.hashCode()",1,1,9,15,1
"org.jfree.data.function.PolynomialFunction2DTest.testConstructor()",1,1,17,106,2
"org.jfree.data.function.PolynomialFunction2DTest.testEquals()",1,1,15,129,1
"org.jfree.data.function.PolynomialFunction2DTest.testGetCoefficients()",1,1,14,103,1
"org.jfree.data.function.PolynomialFunction2DTest.testGetOrder()",1,1,9,36,1
"org.jfree.data.function.PolynomialFunction2DTest.testHashCode()",1,1,12,56,1
"org.jfree.data.function.PolynomialFunction2DTest.testSerialization()",1,1,11,39,1
"org.jfree.data.function.PowerFunction2D.PowerFunction2D(double,double)",1,1,10,25,1
"org.jfree.data.function.PowerFunction2D.equals(Object)",4,1,21,108,4
"org.jfree.data.function.PowerFunction2D.getA()",1,1,10,11,1
"org.jfree.data.function.PowerFunction2D.getB()",1,1,10,11,1
"org.jfree.data.function.PowerFunction2D.getValue(double)",1,1,11,34,1
"org.jfree.data.function.PowerFunction2D.hashCode()",1,1,12,50,1
"org.jfree.data.function.PowerFunction2DTest.testConstructor()",1,1,9,49,1
"org.jfree.data.function.PowerFunction2DTest.testEquals()",1,1,13,96,1
"org.jfree.data.function.PowerFunction2DTest.testHashCode()",1,1,10,41,1
"org.jfree.data.function.PowerFunction2DTest.testSerialization()",1,1,9,31,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.SlidingGanttCategoryDataset(GanttCategoryDataset,int,int)",1,1,15,38,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.clone()",1,2,24,59,2
"org.jfree.data.gantt.SlidingGanttCategoryDataset.equals(Object)",6,1,28,181,6
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getColumnCount()",2,2,15,84,2
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getColumnIndex(Comparable)",2,2,15,96,3
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getColumnKey(int)",1,1,13,31,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getColumnKeys()",1,2,16,94,2
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getEndValue(Comparable,Comparable)",3,3,23,171,3
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getEndValue(Comparable,Comparable,int)",3,3,27,187,3
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getEndValue(int,int)",1,1,13,39,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getEndValue(int,int,int)",1,1,16,58,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getFirstCategoryIndex()",1,1,10,13,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getMaximumCategoryCount()",1,1,10,13,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getPercentComplete(Comparable,Comparable)",3,3,23,171,3
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getPercentComplete(Comparable,Comparable,int)",3,3,27,197,3
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getPercentComplete(int,int)",1,1,13,39,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getPercentComplete(int,int,int)",1,1,16,51,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getRowCount()",1,1,9,15,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getRowIndex(Comparable)",1,1,11,19,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getRowKey(int)",1,1,13,19,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getRowKeys()",1,1,9,11,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getStartValue(Comparable,Comparable)",3,3,24,171,3
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getStartValue(Comparable,Comparable,int)",3,3,27,187,3
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getStartValue(int,int)",1,1,15,46,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getStartValue(int,int,int)",1,1,16,58,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getSubIntervalCount(Comparable,Comparable)",3,3,24,185,3
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getSubIntervalCount(int,int)",1,1,15,43,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getUnderlyingDataset()",1,1,8,8,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getValue(Comparable,Comparable)",3,3,24,171,3
"org.jfree.data.gantt.SlidingGanttCategoryDataset.getValue(int,int)",1,1,12,39,1
"org.jfree.data.gantt.SlidingGanttCategoryDataset.lastCategoryIndex()",2,1,12,88,2
"org.jfree.data.gantt.SlidingGanttCategoryDataset.setFirstCategoryIndex(int)",2,2,16,81,3
"org.jfree.data.gantt.SlidingGanttCategoryDataset.setMaximumCategoryCount(int)",2,1,15,51,2
"org.jfree.data.gantt.SlidingGanttCategoryDatasetTest.testCloning()",1,1,25,323,1
"org.jfree.data.gantt.SlidingGanttCategoryDatasetTest.testEquals()",1,1,35,618,1
"org.jfree.data.gantt.SlidingGanttCategoryDatasetTest.testKeys()",1,3,32,364,5
"org.jfree.data.gantt.SlidingGanttCategoryDatasetTest.testSerialization()",1,1,23,256,1
"org.jfree.data.gantt.Task.Task(String,Date,Date)",1,1,11,19,1
"org.jfree.data.gantt.Task.Task(String,TimePeriod)",1,1,14,57,1
"org.jfree.data.gantt.Task.addSubtask(Task)",1,1,9,26,1
"org.jfree.data.gantt.Task.clone()",1,1,13,15,1
"org.jfree.data.gantt.Task.equals(Object)",7,1,31,232,7
"org.jfree.data.gantt.Task.getDescription()",1,1,8,8,1
"org.jfree.data.gantt.Task.getDuration()",1,1,8,8,1
"org.jfree.data.gantt.Task.getPercentComplete()",1,1,8,8,1
"org.jfree.data.gantt.Task.getSubtask(int)",1,1,10,19,1
"org.jfree.data.gantt.Task.getSubtaskCount()",1,1,8,15,1
"org.jfree.data.gantt.Task.removeSubtask(Task)",1,1,8,15,1
"org.jfree.data.gantt.Task.setDescription(String)",1,1,9,22,1
"org.jfree.data.gantt.Task.setDuration(TimePeriod)",1,1,8,11,1
"org.jfree.data.gantt.Task.setPercentComplete(Double)",1,1,8,11,1
"org.jfree.data.gantt.Task.setPercentComplete(double)",1,1,8,15,1
"org.jfree.data.gantt.TaskSeries.TaskSeries(String)",1,1,9,19,1
"org.jfree.data.gantt.TaskSeries.add(Task)",1,1,12,31,1
"org.jfree.data.gantt.TaskSeries.clone()",1,1,14,36,1
"org.jfree.data.gantt.TaskSeries.equals(Object)",5,1,24,134,5
"org.jfree.data.gantt.TaskSeries.get(String)",3,2,19,122,3
"org.jfree.data.gantt.TaskSeries.get(int)",1,1,10,19,1
"org.jfree.data.gantt.TaskSeries.getItemCount()",1,1,9,15,1
"org.jfree.data.gantt.TaskSeries.getTasks()",1,1,8,11,1
"org.jfree.data.gantt.TaskSeries.remove(Task)",1,1,11,19,1
"org.jfree.data.gantt.TaskSeries.removeAll()",1,1,9,15,1
"org.jfree.data.gantt.TaskSeriesCollection.TaskSeriesCollection()",1,1,7,16,1
"org.jfree.data.gantt.TaskSeriesCollection.add(TaskSeries)",1,3,23,169,3
"org.jfree.data.gantt.TaskSeriesCollection.clone()",1,1,15,59,1
"org.jfree.data.gantt.TaskSeriesCollection.equals(Object)",4,1,21,101,4
"org.jfree.data.gantt.TaskSeriesCollection.getColumnCount()",1,1,9,15,1
"org.jfree.data.gantt.TaskSeriesCollection.getColumnIndex(Comparable)",1,1,12,31,1
"org.jfree.data.gantt.TaskSeriesCollection.getColumnKey(int)",1,1,11,19,1
"org.jfree.data.gantt.TaskSeriesCollection.getColumnKeys()",1,1,9,8,1
"org.jfree.data.gantt.TaskSeriesCollection.getEndValue(Comparable,Comparable)",1,3,23,135,3
"org.jfree.data.gantt.TaskSeriesCollection.getEndValue(Comparable,Comparable,int)",1,3,25,159,3
"org.jfree.data.gantt.TaskSeriesCollection.getEndValue(int,int)",1,1,14,36,1
"org.jfree.data.gantt.TaskSeriesCollection.getEndValue(int,int,int)",1,1,15,44,1
"org.jfree.data.gantt.TaskSeriesCollection.getPercentComplete(Comparable,Comparable)",1,2,19,93,2
"org.jfree.data.gantt.TaskSeriesCollection.getPercentComplete(Comparable,Comparable,int)",1,3,24,133,3
"org.jfree.data.gantt.TaskSeriesCollection.getPercentComplete(int,int)",1,1,14,36,1
"org.jfree.data.gantt.TaskSeriesCollection.getPercentComplete(int,int,int)",1,1,15,44,1
"org.jfree.data.gantt.TaskSeriesCollection.getRowCount()",1,1,9,15,1
"org.jfree.data.gantt.TaskSeriesCollection.getRowIndex(Comparable)",3,2,20,138,3
"org.jfree.data.gantt.TaskSeriesCollection.getRowKey(int)",1,1,12,28,1
"org.jfree.data.gantt.TaskSeriesCollection.getRowKeys()",1,1,9,8,1
"org.jfree.data.gantt.TaskSeriesCollection.getSeries(Comparable)",2,2,20,84,3
"org.jfree.data.gantt.TaskSeriesCollection.getSeries(int)",2,2,15,72,3
"org.jfree.data.gantt.TaskSeriesCollection.getSeriesCount()",1,1,9,8,1
"org.jfree.data.gantt.TaskSeriesCollection.getSeriesKey(int)",1,1,12,28,1
"org.jfree.data.gantt.TaskSeriesCollection.getStartValue(Comparable,Comparable)",1,3,23,135,3
"org.jfree.data.gantt.TaskSeriesCollection.getStartValue(Comparable,Comparable,int)",1,3,25,159,3
"org.jfree.data.gantt.TaskSeriesCollection.getStartValue(int,int)",1,1,14,36,1
"org.jfree.data.gantt.TaskSeriesCollection.getStartValue(int,int,int)",1,1,15,44,1
"org.jfree.data.gantt.TaskSeriesCollection.getSubIntervalCount(Comparable,Comparable)",1,2,19,103,2
"org.jfree.data.gantt.TaskSeriesCollection.getSubIntervalCount(int,int)",1,1,14,39,1
"org.jfree.data.gantt.TaskSeriesCollection.getValue(Comparable,Comparable)",1,1,12,11,1
"org.jfree.data.gantt.TaskSeriesCollection.getValue(int,int)",1,1,12,18,1
"org.jfree.data.gantt.TaskSeriesCollection.refreshKeys()",1,4,19,192,4
"org.jfree.data.gantt.TaskSeriesCollection.remove(TaskSeries)",1,2,15,64,2
"org.jfree.data.gantt.TaskSeriesCollection.remove(int)",2,2,18,112,3
"org.jfree.data.gantt.TaskSeriesCollection.removeAll()",1,2,17,62,2
"org.jfree.data.gantt.TaskSeriesCollection.seriesChanged(SeriesChangeEvent)",1,1,10,8,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.createCollection1()",1,1,16,161,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.createCollection2()",1,1,28,517,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.createCollection3()",1,1,45,725,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.test697153()",1,1,26,272,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.test800324()",1,1,38,229,4
"org.jfree.data.gantt.TaskSeriesCollectionTest.testCloning()",1,1,25,448,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testEquals()",1,1,26,414,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetColumnCount()",1,1,8,19,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetColumnIndex()",1,1,10,64,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetColumnKey()",1,1,10,64,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetEndValue()",1,1,22,437,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetEndValue2()",1,1,27,786,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetEndValue3()",1,1,12,79,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetPercentComplete()",1,1,28,712,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetRowCount()",1,1,8,19,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetRowIndex()",1,1,9,43,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetRowKey()",1,1,9,43,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetSeries()",1,1,24,221,2
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetSeriesCount()",1,1,8,19,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetSeriesKey()",1,1,9,43,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetStartValue()",1,1,22,437,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetStartValue2()",1,1,27,786,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetStartValue3()",1,1,12,79,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetSubIntervalCount()",1,1,15,89,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testGetValue()",1,1,16,272,1
"org.jfree.data.gantt.TaskSeriesCollectionTest.testRemove()",1,1,29,215,3
"org.jfree.data.gantt.TaskSeriesCollectionTest.testSerialization()",1,1,18,208,1
"org.jfree.data.gantt.TaskSeriesTest.testCloning()",1,1,18,275,1
"org.jfree.data.gantt.TaskSeriesTest.testEquals()",1,1,18,291,1
"org.jfree.data.gantt.TaskSeriesTest.testGetTask()",1,1,15,224,1
"org.jfree.data.gantt.TaskSeriesTest.testSerialization()",1,1,11,97,1
"org.jfree.data.gantt.TaskTest.testCloning()",1,1,11,97,1
"org.jfree.data.gantt.TaskTest.testEquals()",1,1,26,414,1
"org.jfree.data.gantt.TaskTest.testGetSubTaskCount()",1,1,17,256,1
"org.jfree.data.gantt.TaskTest.testSerialization()",1,1,9,43,1
"org.jfree.data.gantt.XYTaskDataset.XYTaskDataset(TaskSeriesCollection)",1,1,11,44,1
"org.jfree.data.gantt.XYTaskDataset.clone()",1,1,13,36,1
"org.jfree.data.gantt.XYTaskDataset.datasetChanged(DatasetChangeEvent)",1,1,10,4,1
"org.jfree.data.gantt.XYTaskDataset.equals(Object)",6,1,27,181,6
"org.jfree.data.gantt.XYTaskDataset.getEndX(int,int)",1,1,14,22,1
"org.jfree.data.gantt.XYTaskDataset.getEndXValue(int,int)",2,2,19,59,2
"org.jfree.data.gantt.XYTaskDataset.getEndY(int,int)",1,1,13,22,1
"org.jfree.data.gantt.XYTaskDataset.getEndYValue(int,int)",2,2,18,59,2
"org.jfree.data.gantt.XYTaskDataset.getItemCount(int)",1,1,11,26,1
"org.jfree.data.gantt.XYTaskDataset.getItemEndValue(int,int)",1,1,7,73,1
"org.jfree.data.gantt.XYTaskDataset.getItemStartValue(int,int)",1,1,7,73,1
"org.jfree.data.gantt.XYTaskDataset.getItemValue(int,int)",1,1,8,111,1
"org.jfree.data.gantt.XYTaskDataset.getSeriesCount()",1,1,9,15,1
"org.jfree.data.gantt.XYTaskDataset.getSeriesEndValue(int)",1,1,3,33,1
"org.jfree.data.gantt.XYTaskDataset.getSeriesKey(int)",1,1,11,19,1
"org.jfree.data.gantt.XYTaskDataset.getSeriesStartValue(int)",1,1,3,33,1
"org.jfree.data.gantt.XYTaskDataset.getSeriesValue(int)",1,1,3,11,1
"org.jfree.data.gantt.XYTaskDataset.getSeriesWidth()",1,1,10,13,1
"org.jfree.data.gantt.XYTaskDataset.getStartX(int,int)",1,1,14,22,1
"org.jfree.data.gantt.XYTaskDataset.getStartXValue(int,int)",2,2,19,59,2
"org.jfree.data.gantt.XYTaskDataset.getStartY(int,int)",1,1,13,22,1
"org.jfree.data.gantt.XYTaskDataset.getStartYValue(int,int)",2,2,18,59,2
"org.jfree.data.gantt.XYTaskDataset.getTasks()",1,1,9,8,1
"org.jfree.data.gantt.XYTaskDataset.getX(int,int)",1,1,12,22,1
"org.jfree.data.gantt.XYTaskDataset.getXValue(int,int)",2,2,17,59,2
"org.jfree.data.gantt.XYTaskDataset.getY(int,int)",1,1,14,22,1
"org.jfree.data.gantt.XYTaskDataset.getYValue(int,int)",2,2,17,59,2
"org.jfree.data.gantt.XYTaskDataset.isTransposed()",1,1,14,13,1
"org.jfree.data.gantt.XYTaskDataset.setSeriesWidth(double)",2,1,15,51,2
"org.jfree.data.gantt.XYTaskDataset.setTransposed(boolean)",1,1,12,19,1
"org.jfree.data.gantt.XYTaskDatasetTest.testCloning()",1,1,22,307,1
"org.jfree.data.gantt.XYTaskDatasetTest.testEquals()",1,1,33,586,1
"org.jfree.data.gantt.XYTaskDatasetTest.testSerialization()",1,1,20,241,1
"org.jfree.data.general.AbstractDataset.AbstractDataset()",1,1,9,28,1
"org.jfree.data.general.AbstractDataset.addChangeListener(DatasetChangeListener)",1,1,11,19,1
"org.jfree.data.general.AbstractDataset.clone()",1,1,16,26,1
"org.jfree.data.general.AbstractDataset.fireDatasetChanged()",1,2,12,25,2
"org.jfree.data.general.AbstractDataset.getGroup()",1,1,11,8,1
"org.jfree.data.general.AbstractDataset.getNotify()",1,1,13,11,1
"org.jfree.data.general.AbstractDataset.hasListener(EventListener)",1,1,16,33,1
"org.jfree.data.general.AbstractDataset.notifyListeners(DatasetChangeEvent)",1,3,18,118,3
"org.jfree.data.general.AbstractDataset.readObject(ObjectInputStream)",1,1,15,39,1
"org.jfree.data.general.AbstractDataset.removeChangeListener(DatasetChangeListener)",1,1,12,19,1
"org.jfree.data.general.AbstractDataset.setGroup(DatasetGroup)",1,1,12,22,1
"org.jfree.data.general.AbstractDataset.setNotify(boolean)",1,2,16,26,2
"org.jfree.data.general.AbstractDataset.validateObject()",1,1,21,8,1
"org.jfree.data.general.AbstractDataset.writeObject(ObjectOutputStream)",1,1,10,11,1
"org.jfree.data.general.AbstractSeriesDataset.AbstractSeriesDataset()",1,1,6,4,1
"org.jfree.data.general.AbstractSeriesDataset.indexOf(Comparable)",3,2,17,88,3
"org.jfree.data.general.AbstractSeriesDataset.seriesChanged(SeriesChangeEvent)",1,1,9,4,1
"org.jfree.data.general.DatasetChangeEvent.DatasetChangeEvent(Object,Dataset)",1,1,14,19,1
"org.jfree.data.general.DatasetChangeEvent.getDataset()",1,1,10,8,1
"org.jfree.data.general.DatasetGroup.DatasetGroup()",1,1,7,15,1
"org.jfree.data.general.DatasetGroup.DatasetGroup(String)",1,1,9,18,1
"org.jfree.data.general.DatasetGroup.clone()",1,1,11,11,1
"org.jfree.data.general.DatasetGroup.equals(Object)",4,1,21,101,4
"org.jfree.data.general.DatasetGroup.getID()",1,1,8,8,1
"org.jfree.data.general.DatasetGroupTest.testSerialization()",1,1,9,22,1
"org.jfree.data.general.DatasetUtils.DatasetUtils()",1,1,6,0,1
"org.jfree.data.general.DatasetUtils.calculatePieDatasetTotal(PieDataset)",1,4,29,204,5
"org.jfree.data.general.DatasetUtils.calculateStackTotal(TableXYDataset,int)",1,2,22,142,3
"org.jfree.data.general.DatasetUtils.createCategoryDataset(Comparable,KeyedValues)",1,2,19,125,2
"org.jfree.data.general.DatasetUtils.createCategoryDataset(Comparable[],Comparable[],double[][])",5,4,49,474,8
"org.jfree.data.general.DatasetUtils.createCategoryDataset(String,String,Number[][])",1,3,25,182,3
"org.jfree.data.general.DatasetUtils.createCategoryDataset(String,String,double[][])",1,3,26,194,3
"org.jfree.data.general.DatasetUtils.createConsolidatedPieDataset(PieDataset,Comparable,double)",1,1,18,28,1
"org.jfree.data.general.DatasetUtils.createConsolidatedPieDataset(PieDataset,Comparable,double,int)",1,9,57,439,9
"org.jfree.data.general.DatasetUtils.createPieDatasetForColumn(CategoryDataset,Comparable)",1,1,14,31,1
"org.jfree.data.general.DatasetUtils.createPieDatasetForColumn(CategoryDataset,int)",1,2,19,114,2
"org.jfree.data.general.DatasetUtils.createPieDatasetForRow(CategoryDataset,Comparable)",1,1,14,31,1
"org.jfree.data.general.DatasetUtils.createPieDatasetForRow(CategoryDataset,int)",1,2,19,114,2
"org.jfree.data.general.DatasetUtils.findCumulativeRangeBounds(CategoryDataset)",2,5,39,385,6
"org.jfree.data.general.DatasetUtils.findDomainBounds(XYDataset)",1,1,10,15,1
"org.jfree.data.general.DatasetUtils.findDomainBounds(XYDataset,List,boolean)",1,2,29,92,2
"org.jfree.data.general.DatasetUtils.findDomainBounds(XYDataset,boolean)",1,2,24,82,2
"org.jfree.data.general.DatasetUtils.findItemIndicesForX(XYDataset,int,double)",20,7,115,"1,698",25
"org.jfree.data.general.DatasetUtils.findMaximumDomainValue(XYDataset)",2,6,50,395,7
"org.jfree.data.general.DatasetUtils.findMaximumRangeValue(CategoryDataset)",3,6,47,377,7
"org.jfree.data.general.DatasetUtils.findMaximumRangeValue(XYDataset)",3,7,51,440,8
"org.jfree.data.general.DatasetUtils.findMaximumStackedRangeValue(CategoryDataset)",1,4,36,343,6
"org.jfree.data.general.DatasetUtils.findMinimumDomainValue(XYDataset)",2,6,50,395,7
"org.jfree.data.general.DatasetUtils.findMinimumRangeValue(CategoryDataset)",3,6,47,377,7
"org.jfree.data.general.DatasetUtils.findMinimumRangeValue(XYDataset)",3,7,52,440,8
"org.jfree.data.general.DatasetUtils.findMinimumStackedRangeValue(CategoryDataset)",1,4,37,341,6
"org.jfree.data.general.DatasetUtils.findRangeBounds(CategoryDataset)",1,1,10,15,1
"org.jfree.data.general.DatasetUtils.findRangeBounds(CategoryDataset,List,boolean)",1,2,28,92,2
"org.jfree.data.general.DatasetUtils.findRangeBounds(CategoryDataset,boolean)",1,2,22,82,2
"org.jfree.data.general.DatasetUtils.findRangeBounds(XYDataset)",1,1,11,15,1
"org.jfree.data.general.DatasetUtils.findRangeBounds(XYDataset,List,Range,boolean)",1,2,31,102,2
"org.jfree.data.general.DatasetUtils.findRangeBounds(XYDataset,boolean)",1,2,24,85,2
"org.jfree.data.general.DatasetUtils.findStackedRangeBounds(CategoryDataset)",1,1,11,15,1
"org.jfree.data.general.DatasetUtils.findStackedRangeBounds(CategoryDataset,KeyToGroupMap)",1,8,59,856,10
"org.jfree.data.general.DatasetUtils.findStackedRangeBounds(CategoryDataset,double)",1,4,41,436,7
"org.jfree.data.general.DatasetUtils.findStackedRangeBounds(TableXYDataset)",1,1,11,15,1
"org.jfree.data.general.DatasetUtils.findStackedRangeBounds(TableXYDataset,double)",2,3,43,378,8
"org.jfree.data.general.DatasetUtils.findYValue(XYDataset,int,double)",3,2,28,319,3
"org.jfree.data.general.DatasetUtils.findZBounds(XYZDataset)",1,1,12,15,1
"org.jfree.data.general.DatasetUtils.findZBounds(XYZDataset,List,Range,boolean)",1,1,21,46,1
"org.jfree.data.general.DatasetUtils.findZBounds(XYZDataset,boolean)",1,1,18,43,1
"org.jfree.data.general.DatasetUtils.isEmptyOrNull(CategoryDataset)",6,3,26,238,7
"org.jfree.data.general.DatasetUtils.isEmptyOrNull(PieDataset)",6,3,27,206,6
"org.jfree.data.general.DatasetUtils.isEmptyOrNull(XYDataset)",4,3,18,110,4
"org.jfree.data.general.DatasetUtils.iterateDomainBounds(XYDataset)",1,1,13,15,1
"org.jfree.data.general.DatasetUtils.iterateDomainBounds(XYDataset,boolean)",2,10,61,765,12
"org.jfree.data.general.DatasetUtils.iterateRangeBounds(CategoryDataset)",1,1,13,15,1
"org.jfree.data.general.DatasetUtils.iterateRangeBounds(CategoryDataset,boolean)",2,14,69,846,16
"org.jfree.data.general.DatasetUtils.iterateRangeBounds(XYDataset)",1,1,13,15,1
"org.jfree.data.general.DatasetUtils.iterateRangeBounds(XYDataset,boolean)",2,15,80,"1,025",18
"org.jfree.data.general.DatasetUtils.iterateToFindDomainBounds(XYDataset,List,boolean)",2,10,67,773,12
"org.jfree.data.general.DatasetUtils.iterateToFindRangeBounds(CategoryDataset,List,boolean)",2,31,151,"2,048",37
"org.jfree.data.general.DatasetUtils.iterateToFindRangeBounds(XYDataset,List,Range,boolean)",2,24,123,"1,721",28
"org.jfree.data.general.DatasetUtils.iterateToFindZBounds(XYZDataset,List,Range,boolean)",2,5,44,419,6
"org.jfree.data.general.DatasetUtils.iterateZBounds(XYZDataset)",1,1,11,15,1
"org.jfree.data.general.DatasetUtils.iterateZBounds(XYZDataset,boolean)",2,4,32,290,5
"org.jfree.data.general.DatasetUtils.sampleFunction2D(Function2D,double,double,int,Comparable)",1,1,21,57,1
"org.jfree.data.general.DatasetUtils.sampleFunction2DToSeries(Function2D,double,double,int,Comparable)",3,2,33,292,4
"org.jfree.data.general.DatasetUtilsTest.createCategoryDataset1()",1,1,15,129,1
"org.jfree.data.general.DatasetUtilsTest.createCategoryDataset2()",1,1,13,98,1
"org.jfree.data.general.DatasetUtilsTest.createTableXYDataset1()",1,1,17,147,1
"org.jfree.data.general.DatasetUtilsTest.createXYDataset1()",1,1,20,182,1
"org.jfree.data.general.DatasetUtilsTest.test803660()",1,1,11,80,1
"org.jfree.data.general.DatasetUtilsTest.testBug2849731()",1,1,11,96,1
"org.jfree.data.general.DatasetUtilsTest.testBug2849731_2()",1,1,21,291,1
"org.jfree.data.general.DatasetUtilsTest.testBug2849731_3()",1,1,21,302,1
"org.jfree.data.general.DatasetUtilsTest.testCalculatePieDatasetTotal()",1,1,15,98,1
"org.jfree.data.general.DatasetUtilsTest.testCreateCategoryDataset1()",1,1,16,206,1
"org.jfree.data.general.DatasetUtilsTest.testCreateCategoryDataset2()",1,1,23,215,2
"org.jfree.data.general.DatasetUtilsTest.testCumulativeRange1()",1,1,15,136,1
"org.jfree.data.general.DatasetUtilsTest.testCumulativeRange2()",1,1,20,359,1
"org.jfree.data.general.DatasetUtilsTest.testCumulativeRange3()",1,1,15,183,1
"org.jfree.data.general.DatasetUtilsTest.testCumulativeRange_NaN()",1,1,14,129,1
"org.jfree.data.general.DatasetUtilsTest.testFindDomainBounds()",1,1,10,53,1
"org.jfree.data.general.DatasetUtilsTest.testFindDomainBounds2()",1,1,20,335,1
"org.jfree.data.general.DatasetUtilsTest.testFindDomainBounds3()",1,1,20,343,1
"org.jfree.data.general.DatasetUtilsTest.testFindDomainBounds4()",1,1,20,335,1
"org.jfree.data.general.DatasetUtilsTest.testFindDomainBounds_NaN()",1,1,22,409,1
"org.jfree.data.general.DatasetUtilsTest.testFindMaximumDomainValue()",1,1,9,28,1
"org.jfree.data.general.DatasetUtilsTest.testFindMaximumRangeValue()",1,1,12,60,1
"org.jfree.data.general.DatasetUtilsTest.testFindMaximumStackedRangeValue()",1,1,22,267,1
"org.jfree.data.general.DatasetUtilsTest.testFindMaximumStackedRangeValue2()",1,1,13,122,1
"org.jfree.data.general.DatasetUtilsTest.testFindMinimumDomainValue()",1,1,9,28,1
"org.jfree.data.general.DatasetUtilsTest.testFindMinimumRangeValue()",1,1,12,60,1
"org.jfree.data.general.DatasetUtilsTest.testFindMinimumStackedRangeValue()",1,1,22,276,1
"org.jfree.data.general.DatasetUtilsTest.testFindMinimumStackedRangeValue2()",1,1,13,130,1
"org.jfree.data.general.DatasetUtilsTest.testFindRangeBounds()",1,1,10,53,1
"org.jfree.data.general.DatasetUtilsTest.testFindRangeBounds2()",1,1,42,570,1
"org.jfree.data.general.DatasetUtilsTest.testFindRangeBounds_CategoryDataset()",1,1,10,53,1
"org.jfree.data.general.DatasetUtilsTest.testFindStackedRangeBoundsForTableXYDataset1()",1,1,10,59,1
"org.jfree.data.general.DatasetUtilsTest.testFindStackedRangeBoundsForTableXYDataset2()",1,1,9,30,1
"org.jfree.data.general.DatasetUtilsTest.testFindStackedRangeBounds_CategoryDataset1()",1,1,14,124,1
"org.jfree.data.general.DatasetUtilsTest.testFindStackedRangeBounds_CategoryDataset2()",1,1,25,413,1
"org.jfree.data.general.DatasetUtilsTest.testFindStackedRangeBounds_CategoryDataset3()",1,1,30,504,1
"org.jfree.data.general.DatasetUtilsTest.testFindYValue()",1,1,21,362,1
"org.jfree.data.general.DatasetUtilsTest.testFindYValueNonSorted()",1,1,22,437,1
"org.jfree.data.general.DatasetUtilsTest.testFindYValueWithDuplicates()",1,1,25,470,1
"org.jfree.data.general.DatasetUtilsTest.testIsEmptyOrNullXYDataset()",1,1,17,121,1
"org.jfree.data.general.DatasetUtilsTest.testIterateDomainBounds()",1,1,10,53,1
"org.jfree.data.general.DatasetUtilsTest.testIterateDomainBounds_NaN()",1,1,13,162,1
"org.jfree.data.general.DatasetUtilsTest.testIterateDomainBounds_NaN2()",1,1,22,414,1
"org.jfree.data.general.DatasetUtilsTest.testIterateRangeBounds()",1,1,10,53,1
"org.jfree.data.general.DatasetUtilsTest.testIterateRangeBounds2()",1,1,14,129,1
"org.jfree.data.general.DatasetUtilsTest.testIterateRangeBounds2_CategoryDataset()",1,1,25,280,1
"org.jfree.data.general.DatasetUtilsTest.testIterateRangeBounds3()",1,1,29,303,1
"org.jfree.data.general.DatasetUtilsTest.testIterateRangeBounds3_CategoryDataset()",1,1,29,480,1
"org.jfree.data.general.DatasetUtilsTest.testIterateRangeBounds4()",1,1,35,427,1
"org.jfree.data.general.DatasetUtilsTest.testIterateRangeBounds_CategoryDataset()",1,1,10,59,1
"org.jfree.data.general.DatasetUtilsTest.testIterateRangeBounds_IntervalCategoryDataset()",1,1,39,502,1
"org.jfree.data.general.DatasetUtilsTest.testIterateToFindDomainBounds_IntervalXYDataset()",1,1,21,356,1
"org.jfree.data.general.DatasetUtilsTest.testIterateToFindRangeBounds1_XYDataset()",1,1,36,171,4
"org.jfree.data.general.DatasetUtilsTest.testIterateToFindRangeBounds2_XYDataset()",1,1,63,785,1
"org.jfree.data.general.DatasetUtilsTest.testIterateToFindRangeBounds_BoxAndWhiskerXYDataset()",1,1,23,227,1
"org.jfree.data.general.DatasetUtilsTest.testIterateToFindRangeBounds_IntervalXYDataset()",1,1,21,388,1
"org.jfree.data.general.DatasetUtilsTest.testIterateToFindRangeBounds_MultiValueCategoryDataset()",1,1,33,375,1
"org.jfree.data.general.DatasetUtilsTest.testIterateToFindRangeBounds_StatisticalCategoryDataset()",1,1,20,138,1
"org.jfree.data.general.DatasetUtilsTest.testJava()",1,1,8,35,1
"org.jfree.data.general.DatasetUtilsTest.testLimitPieDataset()",1,1,30,385,1
"org.jfree.data.general.DatasetUtilsTest.testMaximumStackedRangeValue()",1,1,24,286,1
"org.jfree.data.general.DatasetUtilsTest.testMinMaxRange()",1,1,13,116,1
"org.jfree.data.general.DatasetUtilsTest.testSampleFunction2D()",1,1,16,232,1
"org.jfree.data.general.DatasetUtilsTest.testStackedRangeWithMap()",1,1,12,91,1
"org.jfree.data.general.DefaultHeatMapDataset.DefaultHeatMapDataset(int,int,double,double,double,double)",7,5,42,482,12
"org.jfree.data.general.DefaultHeatMapDataset.clone()",1,1,14,36,1
"org.jfree.data.general.DefaultHeatMapDataset.equals(Object)",10,1,40,355,10
"org.jfree.data.general.DefaultHeatMapDataset.getMaximumXValue()",1,1,11,11,1
"org.jfree.data.general.DefaultHeatMapDataset.getMaximumYValue()",1,1,11,11,1
"org.jfree.data.general.DefaultHeatMapDataset.getMinimumXValue()",1,1,11,11,1
"org.jfree.data.general.DefaultHeatMapDataset.getMinimumYValue()",1,1,11,11,1
"org.jfree.data.general.DefaultHeatMapDataset.getXSampleCount()",1,1,11,11,1
"org.jfree.data.general.DefaultHeatMapDataset.getXValue(int)",1,1,13,76,1
"org.jfree.data.general.DefaultHeatMapDataset.getYSampleCount()",1,1,11,11,1
"org.jfree.data.general.DefaultHeatMapDataset.getYValue(int)",1,1,13,76,1
"org.jfree.data.general.DefaultHeatMapDataset.getZ(int,int)",1,1,15,28,1
"org.jfree.data.general.DefaultHeatMapDataset.getZValue(int,int)",1,1,13,26,1
"org.jfree.data.general.DefaultHeatMapDataset.setZValue(int,int,double)",1,1,11,31,1
"org.jfree.data.general.DefaultHeatMapDataset.setZValue(int,int,double,boolean)",1,2,15,51,2
"org.jfree.data.general.DefaultHeatMapDatasetTest.datasetChanged(DatasetChangeEvent)",1,1,9,11,1
"org.jfree.data.general.DefaultHeatMapDatasetTest.testCloning()",1,1,21,317,1
"org.jfree.data.general.DefaultHeatMapDatasetTest.testEquals()",1,1,51,"1,091",1
"org.jfree.data.general.DefaultHeatMapDatasetTest.testGeneral()",1,1,22,390,1
"org.jfree.data.general.DefaultHeatMapDatasetTest.testSerialization()",1,1,15,158,1
"org.jfree.data.general.DefaultKeyedValueDataset.DefaultKeyedValueDataset()",1,1,6,8,1
"org.jfree.data.general.DefaultKeyedValueDataset.DefaultKeyedValueDataset(Comparable,Number)",1,1,9,15,1
"org.jfree.data.general.DefaultKeyedValueDataset.DefaultKeyedValueDataset(KeyedValue)",1,1,9,8,1
"org.jfree.data.general.DefaultKeyedValueDataset.clone()",1,1,14,15,1
"org.jfree.data.general.DefaultKeyedValueDataset.equals(Object)",7,3,30,237,8
"org.jfree.data.general.DefaultKeyedValueDataset.getKey()",1,2,14,41,2
"org.jfree.data.general.DefaultKeyedValueDataset.getValue()",1,2,13,41,2
"org.jfree.data.general.DefaultKeyedValueDataset.hashCode()",1,2,9,34,2
"org.jfree.data.general.DefaultKeyedValueDataset.setValue(Comparable,Number)",1,1,11,33,1
"org.jfree.data.general.DefaultKeyedValueDataset.updateValue(Number)",2,1,11,55,2
"org.jfree.data.general.DefaultKeyedValueDatasetTest.testCloneIndependence()",1,1,14,110,1
"org.jfree.data.general.DefaultKeyedValueDatasetTest.testCloning()",1,1,12,87,1
"org.jfree.data.general.DefaultKeyedValueDatasetTest.testEquals()",1,1,18,170,1
"org.jfree.data.general.DefaultKeyedValueDatasetTest.testSerialization()",1,1,11,34,1
"org.jfree.data.general.DefaultKeyedValues2DDatasetTest.testCloning()",1,1,15,162,1
"org.jfree.data.general.DefaultKeyedValues2DDatasetTest.testSerialization()",1,1,14,124,1
"org.jfree.data.general.DefaultKeyedValuesDatasetTest.testCloning()",1,1,14,144,1
"org.jfree.data.general.DefaultKeyedValuesDatasetTest.testSerialization()",1,1,13,108,1
"org.jfree.data.general.DefaultPieDataset.DefaultPieDataset()",1,1,6,8,1
"org.jfree.data.general.DefaultPieDataset.DefaultPieDataset(KeyedValues)",1,2,13,102,2
"org.jfree.data.general.DefaultPieDataset.clear()",1,2,12,33,2
"org.jfree.data.general.DefaultPieDataset.clone()",1,1,14,36,1
"org.jfree.data.general.DefaultPieDataset.equals(Object)",9,3,41,348,9
"org.jfree.data.general.DefaultPieDataset.getIndex(Comparable)",1,1,14,19,1
"org.jfree.data.general.DefaultPieDataset.getItemCount()",1,1,9,15,1
"org.jfree.data.general.DefaultPieDataset.getKey(int)",1,1,15,19,1
"org.jfree.data.general.DefaultPieDataset.getKeys()",1,1,10,15,1
"org.jfree.data.general.DefaultPieDataset.getValue(Comparable)",1,1,14,26,1
"org.jfree.data.general.DefaultPieDataset.getValue(int)",1,2,15,50,2
"org.jfree.data.general.DefaultPieDataset.hashCode()",1,1,9,15,1
"org.jfree.data.general.DefaultPieDataset.insertValue(int,Comparable,Number)",1,1,17,33,1
"org.jfree.data.general.DefaultPieDataset.insertValue(int,Comparable,double)",1,1,16,28,1
"org.jfree.data.general.DefaultPieDataset.remove(Comparable)",1,1,13,19,1
"org.jfree.data.general.DefaultPieDataset.setValue(Comparable,Number)",1,1,14,24,1
"org.jfree.data.general.DefaultPieDataset.setValue(Comparable,double)",1,1,13,19,1
"org.jfree.data.general.DefaultPieDataset.sortByKeys(SortOrder)",1,1,12,19,1
"org.jfree.data.general.DefaultPieDataset.sortByValues(SortOrder)",1,1,12,19,1
"org.jfree.data.general.DefaultPieDatasetTest.datasetChanged(DatasetChangeEvent)",1,1,9,11,1
"org.jfree.data.general.DefaultPieDatasetTest.testClear()",1,1,17,129,1
"org.jfree.data.general.DefaultPieDatasetTest.testCloning()",1,1,14,144,1
"org.jfree.data.general.DefaultPieDatasetTest.testGetIndex()",1,1,20,174,2
"org.jfree.data.general.DefaultPieDatasetTest.testGetKey()",1,1,27,199,3
"org.jfree.data.general.DefaultPieDatasetTest.testSerialization()",1,1,13,108,1
"org.jfree.data.general.DefaultValueDataset.DefaultValueDataset()",1,1,6,8,1
"org.jfree.data.general.DefaultValueDataset.DefaultValueDataset(Number)",1,1,9,15,1
"org.jfree.data.general.DefaultValueDataset.DefaultValueDataset(double)",1,1,8,15,1
"org.jfree.data.general.DefaultValueDataset.equals(Object)",3,2,18,76,3
"org.jfree.data.general.DefaultValueDataset.getValue()",1,1,9,8,1
"org.jfree.data.general.DefaultValueDataset.hashCode()",1,2,9,34,2
"org.jfree.data.general.DefaultValueDataset.setValue(Number)",1,1,10,25,1
"org.jfree.data.general.HeatMapUtils.createHeatMapImage(HeatMapDataset,PaintScale)",1,3,28,285,3
"org.jfree.data.general.HeatMapUtils.extractColumnFromHeatMapDataset(HeatMapDataset,int,Comparable)",1,2,20,125,2
"org.jfree.data.general.HeatMapUtils.extractRowFromHeatMapDataset(HeatMapDataset,int,Comparable)",1,2,20,125,2
"org.jfree.data.general.IntervalDataItem.IntervalDataItem(Number,Number,Number)",1,1,5,30,1
"org.jfree.data.general.IntervalDataItem.getLowerBound()",1,1,3,4,1
"org.jfree.data.general.IntervalDataItem.getUpperBound()",1,1,3,4,1
"org.jfree.data.general.IntervalDataItem.getValue()",1,1,3,4,1
"org.jfree.data.general.Series.Series(Comparable)",1,1,8,11,1
"org.jfree.data.general.Series.Series(Comparable,String)",1,1,15,91,1
"org.jfree.data.general.Series.addChangeListener(SeriesChangeListener)",1,1,12,19,1
"org.jfree.data.general.Series.addPropertyChangeListener(PropertyChangeListener)",1,1,8,15,1
"org.jfree.data.general.Series.addVetoableChangeListener(VetoableChangeListener)",1,1,10,15,1
"org.jfree.data.general.Series.clone()",1,1,25,56,1
"org.jfree.data.general.Series.equals(Object)",5,1,24,132,5
"org.jfree.data.general.Series.firePropertyChange(String,Object,Object)",1,1,12,24,1
"org.jfree.data.general.Series.fireSeriesChanged()",1,2,9,22,2
"org.jfree.data.general.Series.fireVetoableChange(String,Object,Object)",1,1,14,28,1
"org.jfree.data.general.Series.getDescription()",1,1,10,8,1
"org.jfree.data.general.Series.getKey()",1,1,10,8,1
"org.jfree.data.general.Series.getNotify()",1,1,11,13,1
"org.jfree.data.general.Series.hashCode()",1,2,13,85,2
"org.jfree.data.general.Series.isEmpty()",1,1,11,15,1
"org.jfree.data.general.Series.notifyListeners(SeriesChangeEvent)",1,3,15,118,3
"org.jfree.data.general.Series.removeChangeListener(SeriesChangeListener)",1,1,9,19,1
"org.jfree.data.general.Series.removePropertyChangeListener(PropertyChangeListener)",1,1,8,15,1
"org.jfree.data.general.Series.removeVetoableChangeListener(VetoableChangeListener)",1,1,10,15,1
"org.jfree.data.general.Series.setDescription(String)",1,1,14,41,1
"org.jfree.data.general.Series.setKey(Comparable)",1,2,27,118,2
"org.jfree.data.general.Series.setNotify(boolean)",1,2,14,38,2
"org.jfree.data.general.SeriesChangeEvent.SeriesChangeEvent(Object)",1,1,8,8,1
"org.jfree.data.general.SeriesException.SeriesException(String)",1,1,8,8,1
"org.jfree.data.general.TestIntervalCategoryDataset.TestIntervalCategoryDataset()",1,1,6,8,1
"org.jfree.data.general.TestIntervalCategoryDataset.addItem(Number,Number,Number,Comparable,Comparable)",1,1,16,48,1
"org.jfree.data.general.TestIntervalCategoryDataset.addItem(double,double,double,Comparable,Comparable)",1,1,14,46,1
"org.jfree.data.general.TestIntervalCategoryDataset.clear()",1,1,8,15,1
"org.jfree.data.general.TestIntervalCategoryDataset.clone()",1,1,15,36,1
"org.jfree.data.general.TestIntervalCategoryDataset.equals(Object)",10,4,40,393,10
"org.jfree.data.general.TestIntervalCategoryDataset.getColumnCount()",1,1,11,15,1
"org.jfree.data.general.TestIntervalCategoryDataset.getColumnIndex(Comparable)",1,1,14,22,1
"org.jfree.data.general.TestIntervalCategoryDataset.getColumnKey(int)",1,1,13,19,1
"org.jfree.data.general.TestIntervalCategoryDataset.getColumnKeys()",1,1,11,15,1
"org.jfree.data.general.TestIntervalCategoryDataset.getEndValue(Comparable,Comparable)",2,1,9,53,2
"org.jfree.data.general.TestIntervalCategoryDataset.getEndValue(int,int)",2,1,9,62,2
"org.jfree.data.general.TestIntervalCategoryDataset.getRowCount()",1,1,11,15,1
"org.jfree.data.general.TestIntervalCategoryDataset.getRowIndex(Comparable)",1,1,14,22,1
"org.jfree.data.general.TestIntervalCategoryDataset.getRowKey(int)",1,1,15,22,1
"org.jfree.data.general.TestIntervalCategoryDataset.getRowKeys()",1,1,11,15,1
"org.jfree.data.general.TestIntervalCategoryDataset.getStartValue(Comparable,Comparable)",2,1,9,53,2
"org.jfree.data.general.TestIntervalCategoryDataset.getStartValue(int,int)",2,1,9,62,2
"org.jfree.data.general.TestIntervalCategoryDataset.getValue(Comparable,Comparable)",2,1,21,53,2
"org.jfree.data.general.TestIntervalCategoryDataset.getValue(int,int)",2,1,20,62,2
"org.jfree.data.general.TestIntervalCategoryDataset.hashCode()",1,1,9,15,1
"org.jfree.data.general.TestIntervalCategoryDataset.removeColumn(Comparable)",1,1,15,19,1
"org.jfree.data.general.TestIntervalCategoryDataset.removeColumn(int)",1,1,12,26,1
"org.jfree.data.general.TestIntervalCategoryDataset.removeItem(Comparable,Comparable)",1,1,13,24,1
"org.jfree.data.general.TestIntervalCategoryDataset.removeRow(Comparable)",1,1,12,19,1
"org.jfree.data.general.TestIntervalCategoryDataset.removeRow(int)",1,1,12,26,1
"org.jfree.data.general.TestIntervalCategoryDataset.setItem(Number,Number,Number,Comparable,Comparable)",1,1,16,48,1
"org.jfree.data.general.TestIntervalCategoryDataset.setItem(double,double,double,Comparable,Comparable)",1,1,15,46,1
"org.jfree.data.general.WaferMapDataset.WaferMapDataset(int,int)",1,1,9,22,1
"org.jfree.data.general.WaferMapDataset.WaferMapDataset(int,int,Number)",1,2,20,140,2
"org.jfree.data.general.WaferMapDataset.addValue(Number,Comparable,Comparable)",1,1,10,15,1
"org.jfree.data.general.WaferMapDataset.addValue(int,int,int)",1,1,10,35,1
"org.jfree.data.general.WaferMapDataset.getChipSpace()",1,1,8,11,1
"org.jfree.data.general.WaferMapDataset.getChipValue(Comparable,Comparable)",3,1,19,116,3
"org.jfree.data.general.WaferMapDataset.getChipValue(int,int)",1,1,11,25,1
"org.jfree.data.general.WaferMapDataset.getMaxChipX()",1,1,8,11,1
"org.jfree.data.general.WaferMapDataset.getMaxChipY()",1,1,8,11,1
"org.jfree.data.general.WaferMapDataset.getMaxValue()",1,1,8,8,1
"org.jfree.data.general.WaferMapDataset.getMinValue()",1,1,8,8,1
"org.jfree.data.general.WaferMapDataset.getUniqueValueCount()",1,1,8,11,1
"org.jfree.data.general.WaferMapDataset.getUniqueValues()",1,4,18,158,4
"org.jfree.data.general.WaferMapDataset.isMaxValue(Number)",2,1,13,46,2
"org.jfree.data.general.WaferMapDataset.isMinValue(Number)",2,1,13,46,2
"org.jfree.data.general.WaferMapDataset.setChipSpace(double)",1,1,8,15,1
"org.jfree.data.general.WaferMapDataset.setMaxChipX(int)",1,1,8,15,1
"org.jfree.data.general.WaferMapDataset.setMaxChipY(int)",1,1,8,15,1
"org.jfree.data.general.WaferMapDataset.setValue(Number,Comparable,Comparable)",1,1,16,74,3
"org.jfree.data.io.CSV.CSV()",1,1,7,11,1
"org.jfree.data.io.CSV.CSV(char,char)",1,1,12,25,1
"org.jfree.data.io.CSV.extractColumnKeys(String)",1,4,26,239,4
"org.jfree.data.io.CSV.extractRowKeyAndData(String,DefaultCategoryDataset,List)",1,4,39,360,4
"org.jfree.data.io.CSV.readCategoryDataset(Reader)",1,3,27,147,3
"org.jfree.data.io.CSV.removeStringDelimiters(String)",1,3,18,136,3
"org.jfree.data.jdbc.JDBCCategoryDataset.JDBCCategoryDataset(Connection)",2,1,11,36,2
"org.jfree.data.jdbc.JDBCCategoryDataset.JDBCCategoryDataset(Connection,String)",1,1,14,19,1
"org.jfree.data.jdbc.JDBCCategoryDataset.JDBCCategoryDataset(String,String,String,String)",1,1,20,33,1
"org.jfree.data.jdbc.JDBCCategoryDataset.executeQuery(Connection,String)",3,13,115,"1,021",17
"org.jfree.data.jdbc.JDBCCategoryDataset.executeQuery(String)",1,1,15,19,1
"org.jfree.data.jdbc.JDBCCategoryDataset.getTranspose()",1,1,9,11,1
"org.jfree.data.jdbc.JDBCCategoryDataset.setTranspose(boolean)",1,1,9,15,1
"org.jfree.data.jdbc.JDBCPieDataset.JDBCPieDataset(Connection)",2,1,13,36,2
"org.jfree.data.jdbc.JDBCPieDataset.JDBCPieDataset(Connection,String)",1,1,14,19,1
"org.jfree.data.jdbc.JDBCPieDataset.JDBCPieDataset(String,String,String,String)",1,1,20,33,1
"org.jfree.data.jdbc.JDBCPieDataset.close()",1,2,11,33,2
"org.jfree.data.jdbc.JDBCPieDataset.executeQuery(Connection,String)",3,7,74,617,10
"org.jfree.data.jdbc.JDBCPieDataset.executeQuery(String)",1,1,14,19,1
"org.jfree.data.jdbc.JDBCXYDataset.JDBCXYDataset()",1,1,7,8,1
"org.jfree.data.jdbc.JDBCXYDataset.JDBCXYDataset(Connection)",1,1,12,18,1
"org.jfree.data.jdbc.JDBCXYDataset.JDBCXYDataset(Connection,String)",1,1,13,19,1
"org.jfree.data.jdbc.JDBCXYDataset.JDBCXYDataset(String,String,String,String)",1,1,21,41,1
"org.jfree.data.jdbc.JDBCXYDataset.close()",1,2,11,33,2
"org.jfree.data.jdbc.JDBCXYDataset.executeQuery(Connection,String)",7,20,180,"2,274",32
"org.jfree.data.jdbc.JDBCXYDataset.executeQuery(String)",1,1,15,19,1
"org.jfree.data.jdbc.JDBCXYDataset.getItemCount()",1,1,10,11,1
"org.jfree.data.jdbc.JDBCXYDataset.getItemCount(int)",1,1,13,18,1
"org.jfree.data.jdbc.JDBCXYDataset.getRangeBounds(boolean)",1,1,12,22,1
"org.jfree.data.jdbc.JDBCXYDataset.getRangeLowerBound(boolean)",1,1,12,15,1
"org.jfree.data.jdbc.JDBCXYDataset.getRangeUpperBound(boolean)",1,1,12,15,1
"org.jfree.data.jdbc.JDBCXYDataset.getSeriesCount()",1,1,12,15,1
"org.jfree.data.jdbc.JDBCXYDataset.getSeriesKey(int)",2,1,20,79,3
"org.jfree.data.jdbc.JDBCXYDataset.getX(int,int)",1,1,17,34,1
"org.jfree.data.jdbc.JDBCXYDataset.getY(int,int)",1,1,15,44,1
"org.jfree.data.jdbc.JDBCXYDataset.isTimeSeries()",1,1,9,11,1
"org.jfree.data.jdbc.JDBCXYDataset.setTimeSeries(boolean)",1,1,9,15,1
"org.jfree.data.json.JSONUtils.writeKeyedValues(KeyedValues)",1,1,23,64,2
"org.jfree.data.json.JSONUtils.writeKeyedValues(KeyedValues,Writer)",1,3,32,269,3
"org.jfree.data.json.JSONUtils.writeKeyedValues2D(KeyedValues2D)",1,1,20,64,2
"org.jfree.data.json.JSONUtils.writeKeyedValues2D(KeyedValues2D,Writer)",1,9,60,551,9
"org.jfree.data.json.impl.JSONArray.toJSONString()",1,1,9,8,1
"org.jfree.data.json.impl.JSONArray.toJSONString(List)",4,4,36,228,5
"org.jfree.data.json.impl.JSONArray.toString()",1,1,9,4,1
"org.jfree.data.json.impl.JSONArray.writeJSONString(List,Writer)",4,5,38,223,5
"org.jfree.data.json.impl.JSONArray.writeJSONString(Writer)",1,1,11,15,1
"org.jfree.data.json.impl.JSONObject.toJSONString()",1,1,9,8,1
"org.jfree.data.json.impl.JSONObject.toJSONString(Map)",2,3,32,213,4
"org.jfree.data.json.impl.JSONObject.toJSONString(String,Object,StringBuffer)",1,2,22,116,2
"org.jfree.data.json.impl.JSONObject.toString()",1,1,9,4,1
"org.jfree.data.json.impl.JSONObject.toString(String,Object)",1,1,13,31,1
"org.jfree.data.json.impl.JSONObject.writeJSONString(Map,Writer)",2,4,37,282,4
"org.jfree.data.json.impl.JSONObject.writeJSONString(Writer)",1,1,12,15,1
"org.jfree.data.json.impl.JSONValue.escape(String)",2,1,16,51,2
"org.jfree.data.json.impl.JSONValue.escape(String,StringBuffer)",2,5,50,664,18
"org.jfree.data.json.impl.JSONValue.toJSONString(Object)",12,13,58,346,14
"org.jfree.data.json.impl.JSONValue.writeJSONString(Object,Writer)",11,15,76,527,15
"org.jfree.data.resources.DataPackageResources.getContents()",1,1,9,4,1
"org.jfree.data.resources.DataPackageResources_de.getContents()",1,1,9,4,1
"org.jfree.data.resources.DataPackageResources_es.getContents()",1,1,9,4,1
"org.jfree.data.resources.DataPackageResources_fr.getContents()",1,1,9,4,1
"org.jfree.data.resources.DataPackageResources_pl.getContents()",1,1,9,4,1
"org.jfree.data.resources.DataPackageResources_ru.getContents()",1,1,9,4,1
"org.jfree.data.statistics.BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics(List)",1,1,15,15,1
"org.jfree.data.statistics.BoxAndWhiskerCalculator.calculateBoxAndWhiskerStatistics(List,boolean)",1,8,79,"1,020",12
"org.jfree.data.statistics.BoxAndWhiskerCalculator.calculateQ1(List)",1,4,31,226,4
"org.jfree.data.statistics.BoxAndWhiskerCalculator.calculateQ3(List)",1,4,32,235,4
"org.jfree.data.statistics.BoxAndWhiskerCalculatorTest.test1593149()",1,1,16,194,1
"org.jfree.data.statistics.BoxAndWhiskerCalculatorTest.testCalculateBoxAndWhiskerStatistics()",1,1,24,194,2
"org.jfree.data.statistics.BoxAndWhiskerCalculatorTest.testCalculateQ1()",1,1,30,288,2
"org.jfree.data.statistics.BoxAndWhiskerCalculatorTest.testCalculateQ3()",1,1,30,292,2
"org.jfree.data.statistics.BoxAndWhiskerItem.BoxAndWhiskerItem(Number,Number,Number,Number,Number,Number,Number,Number,List)",1,1,34,121,1
"org.jfree.data.statistics.BoxAndWhiskerItem.BoxAndWhiskerItem(double,double,double,double,double,double,double,double,List)",1,1,24,106,1
"org.jfree.data.statistics.BoxAndWhiskerItem.equals(Object)",12,1,47,485,12
"org.jfree.data.statistics.BoxAndWhiskerItem.getMaxOutlier()",1,1,8,8,1
"org.jfree.data.statistics.BoxAndWhiskerItem.getMaxRegularValue()",1,1,8,8,1
"org.jfree.data.statistics.BoxAndWhiskerItem.getMean()",1,1,8,8,1
"org.jfree.data.statistics.BoxAndWhiskerItem.getMedian()",1,1,8,8,1
"org.jfree.data.statistics.BoxAndWhiskerItem.getMinOutlier()",1,1,8,8,1
"org.jfree.data.statistics.BoxAndWhiskerItem.getMinRegularValue()",1,1,8,8,1
"org.jfree.data.statistics.BoxAndWhiskerItem.getOutliers()",2,1,11,35,2
"org.jfree.data.statistics.BoxAndWhiskerItem.getQ1()",1,1,8,8,1
"org.jfree.data.statistics.BoxAndWhiskerItem.getQ3()",1,1,8,8,1
"org.jfree.data.statistics.BoxAndWhiskerItem.toString()",1,1,11,64,1
"org.jfree.data.statistics.BoxAndWhiskerItemTest.testEquals()",1,1,16,179,1
"org.jfree.data.statistics.BoxAndWhiskerItemTest.testSerialization()",1,1,12,97,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.DefaultBoxAndWhiskerCategoryDataset()",1,1,12,96,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(BoxAndWhiskerItem,Comparable,Comparable)",1,4,53,624,11
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.add(List,Comparable,Comparable)",1,1,16,24,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.clear()",1,1,11,19,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.clone()",1,1,14,36,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.equals(Object)",3,2,19,76,3
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getColumnCount()",1,1,11,15,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getColumnIndex(Comparable)",1,1,13,22,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getColumnKey(int)",1,1,13,19,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getColumnKeys()",1,1,11,11,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getItem(int,int)",1,1,11,26,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMaxOutlier(Comparable,Comparable)",1,2,20,68,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMaxOutlier(int,int)",1,2,20,76,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMaxRegularValue(Comparable,Comparable)",1,2,20,68,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMaxRegularValue(int,int)",1,2,20,76,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMeanValue(Comparable,Comparable)",1,2,20,68,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMeanValue(int,int)",1,2,20,76,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMedianValue(Comparable,Comparable)",1,2,20,68,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMedianValue(int,int)",1,2,20,76,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMinOutlier(Comparable,Comparable)",1,2,20,68,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMinOutlier(int,int)",1,2,20,76,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMinRegularValue(Comparable,Comparable)",1,2,20,68,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getMinRegularValue(int,int)",1,2,20,76,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getOutliers(Comparable,Comparable)",1,2,20,68,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getOutliers(int,int)",1,2,20,76,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getQ1Value(Comparable,Comparable)",1,2,20,68,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getQ1Value(int,int)",1,2,20,76,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getQ3Value(Comparable,Comparable)",1,2,20,68,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getQ3Value(int,int)",1,2,20,76,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeBounds(boolean)",1,1,12,22,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeLowerBound(boolean)",1,1,14,18,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRangeUpperBound(boolean)",1,1,14,18,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRowCount()",1,1,11,15,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRowIndex(Comparable)",1,1,14,22,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRowKey(int)",1,1,13,19,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getRowKeys()",1,1,11,11,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getValue(Comparable,Comparable)",1,1,15,18,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.getValue(int,int)",1,1,15,23,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.remove(Comparable,Comparable)",1,2,25,156,5
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.removeColumn(Comparable)",1,1,15,24,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.removeColumn(int)",1,1,15,31,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.removeRow(Comparable)",1,1,15,24,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.removeRow(int)",1,1,15,31,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset.updateBounds()",1,10,45,601,12
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.test1701822()",1,2,21,215,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testAdd()",1,1,29,480,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testAddUpdatesCachedRange()",1,1,33,596,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testCloning()",1,1,23,315,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testConstructor()",1,1,12,77,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testEquals()",1,1,20,233,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testGetRangeBounds()",1,1,26,569,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testRemove()",1,1,27,452,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest.testSerialization()",1,1,15,125,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.DefaultBoxAndWhiskerXYDataset(Comparable)",1,1,16,65,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.add(Date,BoxAndWhiskerItem)",1,5,32,285,5
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.clone()",1,1,15,57,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.equals(Object)",6,1,28,190,6
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getFaroutCoefficient()",1,1,13,13,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getItem(int,int)",1,1,12,22,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getItemCount(int)",1,1,11,18,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getMaxOutlier(int,int)",1,2,18,62,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getMaxRegularValue(int,int)",1,2,17,62,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getMeanValue(int,int)",1,2,17,62,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getMedianValue(int,int)",1,2,17,62,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getMinOutlier(int,int)",1,2,16,62,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getMinRegularValue(int,int)",1,2,17,62,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getOutlierCoefficient()",1,1,16,13,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getOutliers(int,int)",1,2,18,62,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getQ1Value(int,int)",1,2,17,62,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getQ3Value(int,int)",1,2,17,62,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getRangeBounds(boolean)",1,1,12,11,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getRangeLowerBound(boolean)",1,2,16,57,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getRangeUpperBound(boolean)",1,2,16,57,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getSeriesCount()",1,1,11,8,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getSeriesKey(int)",1,1,11,11,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getX(int,int)",1,1,15,31,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getXDate(int,int)",1,1,13,22,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.getY(int,int)",1,1,15,18,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.setFaroutCoefficient(double)",2,2,19,66,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset.setOutlierCoefficient(double)",1,1,11,15,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDatasetTest.testAdd()",1,1,23,490,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDatasetTest.testCloning()",1,1,19,246,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDatasetTest.testConstructor()",1,1,12,89,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDatasetTest.testEquals()",1,1,17,195,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDatasetTest.testGetRangeBounds()",1,1,20,427,1
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDatasetTest.testSerialization()",1,1,17,180,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.DefaultMultiValueCategoryDataset()",1,1,9,47,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.add(List,Comparable,Comparable)",1,8,54,712,10
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.clone()",1,1,14,36,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.equals(Object)",3,1,19,82,3
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getColumnCount()",1,1,9,15,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getColumnIndex(Comparable)",1,1,11,19,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getColumnKey(int)",1,1,11,19,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getColumnKeys()",1,1,9,11,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getRangeBounds(boolean)",1,1,11,11,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getRangeLowerBound(boolean)",1,2,16,57,2
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getRangeUpperBound(boolean)",1,2,16,57,2
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getRowCount()",1,1,9,15,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getRowIndex(Comparable)",1,1,11,19,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getRowKey(int)",1,1,11,19,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getRowKeys()",1,1,9,11,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getValue(Comparable,Comparable)",2,4,28,262,6
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getValue(int,int)",2,4,28,272,6
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getValues(Comparable,Comparable)",1,1,14,24,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset.getValues(int,int)",2,2,19,70,2
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testAddValue()",1,1,27,177,3
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testCloning()",1,1,28,316,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testEquals()",1,1,27,293,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testGetColumnCount()",1,1,16,152,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testGetRowCount()",1,1,16,152,1
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testGetValue()",1,1,29,214,3
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testGetValue2()",1,1,16,55,2
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest.testSerialization()",1,1,11,22,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.DefaultStatisticalCategoryDataset()",1,1,18,203,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add(Number,Number,Comparable,Comparable)",1,12,71,999,23
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.add(double,double,Comparable,Comparable)",1,1,12,34,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clear()",1,1,11,19,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.clone()",1,1,14,36,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.equals(Object)",4,1,22,101,4
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnCount()",1,1,11,15,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnIndex(Comparable)",1,1,12,19,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnKey(int)",1,1,11,19,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getColumnKeys()",1,1,9,11,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getMeanValue(Comparable,Comparable)",1,2,18,59,2
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getMeanValue(int,int)",1,2,18,68,2
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeBounds(boolean)",2,2,17,76,3
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeLowerBound(boolean)",2,2,19,66,3
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRangeUpperBound(boolean)",2,2,19,66,3
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowCount()",1,1,11,15,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowIndex(Comparable)",1,1,12,19,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowKey(int)",1,1,11,19,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getRowKeys()",1,1,9,11,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getStdDevValue(Comparable,Comparable)",1,2,18,59,2
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getStdDevValue(int,int)",1,2,18,68,2
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getValue(Comparable,Comparable)",1,1,13,11,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.getValue(int,int)",1,1,13,18,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.remove(Comparable,Comparable)",1,2,31,253,9
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.removeColumn(Comparable)",1,1,15,24,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.removeColumn(int)",1,1,15,31,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.removeRow(Comparable)",1,1,15,24,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.removeRow(int)",1,1,15,31,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset.updateBounds()",4,5,86,"1,204",14
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.test3072674()",1,1,14,141,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testAdd()",1,1,15,188,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testCloning()",1,2,25,310,2
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testEquals()",1,1,12,33,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testGetRangeBounds()",1,1,34,517,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testGetRangeBounds2()",1,1,14,194,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testGetRangeLowerBound()",1,1,11,88,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testGetRangeUpperBound()",1,1,11,82,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testRemove()",1,1,29,451,2
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testSerialization1()",1,1,15,149,1
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest.testSerialization2()",1,1,12,50,1
"org.jfree.data.statistics.HistogramBin.HistogramBin(double,double)",2,1,15,72,2
"org.jfree.data.statistics.HistogramBin.clone()",1,1,11,11,1
"org.jfree.data.statistics.HistogramBin.equals(Object)",4,1,24,184,6
"org.jfree.data.statistics.HistogramBin.getBinWidth()",1,1,8,22,1
"org.jfree.data.statistics.HistogramBin.getCount()",1,1,8,11,1
"org.jfree.data.statistics.HistogramBin.getEndBoundary()",1,1,8,11,1
"org.jfree.data.statistics.HistogramBin.getStartBoundary()",1,1,8,11,1
"org.jfree.data.statistics.HistogramBin.incrementCount()",1,1,6,11,1
"org.jfree.data.statistics.HistogramBinTest.testCloning()",1,1,13,106,1
"org.jfree.data.statistics.HistogramBinTest.testEquals()",1,1,11,51,1
"org.jfree.data.statistics.HistogramBinTest.testSerialization()",1,1,11,50,1
"org.jfree.data.statistics.HistogramDataset.HistogramDataset()",1,1,8,18,1
"org.jfree.data.statistics.HistogramDataset.addSeries(Comparable,double[],int)",1,1,14,57,1
"org.jfree.data.statistics.HistogramDataset.addSeries(Comparable,double[],int,double,double)",2,3,67,797,8
"org.jfree.data.statistics.HistogramDataset.clone()",1,2,17,121,2
"org.jfree.data.statistics.HistogramDataset.equals(Object)",5,1,24,143,5
"org.jfree.data.statistics.HistogramDataset.getBinWidth(int)",1,1,11,43,1
"org.jfree.data.statistics.HistogramDataset.getBins(int)",1,1,15,28,1
"org.jfree.data.statistics.HistogramDataset.getEndX(int,int)",1,1,18,41,1
"org.jfree.data.statistics.HistogramDataset.getEndY(int,int)",1,1,18,18,1
"org.jfree.data.statistics.HistogramDataset.getItemCount(int)",1,1,15,18,1
"org.jfree.data.statistics.HistogramDataset.getMaximum(double[])",2,1,21,174,5
"org.jfree.data.statistics.HistogramDataset.getMinimum(double[])",2,1,21,158,5
"org.jfree.data.statistics.HistogramDataset.getSeriesCount()",1,1,9,15,1
"org.jfree.data.statistics.HistogramDataset.getSeriesKey(int)",1,1,16,33,1
"org.jfree.data.statistics.HistogramDataset.getStartX(int,int)",1,1,18,41,1
"org.jfree.data.statistics.HistogramDataset.getStartY(int,int)",1,1,18,18,1
"org.jfree.data.statistics.HistogramDataset.getTotal(int)",1,1,11,41,1
"org.jfree.data.statistics.HistogramDataset.getType()",1,1,8,8,1
"org.jfree.data.statistics.HistogramDataset.getX(int,int)",1,1,22,77,1
"org.jfree.data.statistics.HistogramDataset.getY(int,int)",4,4,32,247,4
"org.jfree.data.statistics.HistogramDataset.setType(HistogramType)",1,1,11,26,1
"org.jfree.data.statistics.HistogramDatasetTest.datasetChanged(DatasetChangeEvent)",1,1,9,11,1
"org.jfree.data.statistics.HistogramDatasetTest.test1553088()",1,1,16,293,1
"org.jfree.data.statistics.HistogramDatasetTest.test2902842()",1,1,12,103,1
"org.jfree.data.statistics.HistogramDatasetTest.testAddSeries()",1,1,15,302,1
"org.jfree.data.statistics.HistogramDatasetTest.testAddSeries2()",1,1,24,557,1
"org.jfree.data.statistics.HistogramDatasetTest.testBinBoundaries()",1,1,17,282,1
"org.jfree.data.statistics.HistogramDatasetTest.testBins()",1,1,14,252,1
"org.jfree.data.statistics.HistogramDatasetTest.testCloning()",1,1,18,296,1
"org.jfree.data.statistics.HistogramDatasetTest.testEquals()",1,1,17,265,1
"org.jfree.data.statistics.HistogramDatasetTest.testGetSeriesKey()",1,1,11,101,1
"org.jfree.data.statistics.HistogramDatasetTest.testSerialization()",1,1,16,230,1
"org.jfree.data.statistics.MeanAndStandardDeviation.MeanAndStandardDeviation(Number,Number)",1,1,11,18,1
"org.jfree.data.statistics.MeanAndStandardDeviation.MeanAndStandardDeviation(double,double)",1,1,9,25,1
"org.jfree.data.statistics.MeanAndStandardDeviation.equals(Object)",5,1,26,143,5
"org.jfree.data.statistics.MeanAndStandardDeviation.getMean()",1,1,8,8,1
"org.jfree.data.statistics.MeanAndStandardDeviation.getMeanValue()",1,2,17,51,2
"org.jfree.data.statistics.MeanAndStandardDeviation.getStandardDeviation()",1,1,8,8,1
"org.jfree.data.statistics.MeanAndStandardDeviation.getStandardDeviationValue()",1,2,16,51,2
"org.jfree.data.statistics.MeanAndStandardDeviation.toString()",1,1,11,26,1
"org.jfree.data.statistics.MeanAndStandardDeviationTest.testCloning()",1,1,8,24,1
"org.jfree.data.statistics.MeanAndStandardDeviationTest.testEquals()",1,1,18,172,1
"org.jfree.data.statistics.MeanAndStandardDeviationTest.testSerialization()",1,1,10,31,1
"org.jfree.data.statistics.Regression.calculateSubMatrix(double[][])",6,4,51,872,10
"org.jfree.data.statistics.Regression.getOLSRegression(XYDataset,int)",2,2,38,524,3
"org.jfree.data.statistics.Regression.getOLSRegression(double[][])",2,1,37,497,3
"org.jfree.data.statistics.Regression.getPolynomialRegression(XYDataset,int,int)",3,8,86,"1,668",15
"org.jfree.data.statistics.Regression.getPowerRegression(XYDataset,int)",2,2,38,566,3
"org.jfree.data.statistics.Regression.getPowerRegression(double[][])",2,2,37,539,3
"org.jfree.data.statistics.RegressionTest.createSampleData1()",1,1,34,480,1
"org.jfree.data.statistics.RegressionTest.createSampleData2()",1,1,29,423,1
"org.jfree.data.statistics.RegressionTest.testOLSRegression1a()",1,1,10,62,1
"org.jfree.data.statistics.RegressionTest.testOLSRegression1b()",1,2,16,174,2
"org.jfree.data.statistics.RegressionTest.testOLSRegression2a()",1,1,10,68,1
"org.jfree.data.statistics.RegressionTest.testOLSRegression2b()",1,2,16,181,2
"org.jfree.data.statistics.RegressionTest.testPowerRegression1a()",1,1,10,62,1
"org.jfree.data.statistics.RegressionTest.testPowerRegression1b()",1,2,16,174,2
"org.jfree.data.statistics.RegressionTest.testPowerRegression2a()",1,1,10,68,1
"org.jfree.data.statistics.RegressionTest.testPowerRegression2b()",1,2,16,181,2
"org.jfree.data.statistics.SimpleHistogramBin.SimpleHistogramBin(double,double)",1,1,9,25,1
"org.jfree.data.statistics.SimpleHistogramBin.SimpleHistogramBin(double,double,boolean,boolean)",2,1,20,114,2
"org.jfree.data.statistics.SimpleHistogramBin.accepts(double)",6,1,26,163,6
"org.jfree.data.statistics.SimpleHistogramBin.clone()",1,1,11,11,1
"org.jfree.data.statistics.SimpleHistogramBin.compareTo(Object)",6,1,30,191,6
"org.jfree.data.statistics.SimpleHistogramBin.equals(Object)",7,1,30,227,7
"org.jfree.data.statistics.SimpleHistogramBin.getItemCount()",1,1,8,11,1
"org.jfree.data.statistics.SimpleHistogramBin.getLowerBound()",1,1,8,11,1
"org.jfree.data.statistics.SimpleHistogramBin.getUpperBound()",1,1,8,11,1
"org.jfree.data.statistics.SimpleHistogramBin.overlapsWith(SimpleHistogramBin)",5,1,23,190,7
"org.jfree.data.statistics.SimpleHistogramBin.setItemCount(int)",1,1,8,15,1
"org.jfree.data.statistics.SimpleHistogramBinTest.testAccepts()",1,1,21,226,1
"org.jfree.data.statistics.SimpleHistogramBinTest.testCloning()",1,1,15,146,1
"org.jfree.data.statistics.SimpleHistogramBinTest.testEquals()",1,1,30,439,1
"org.jfree.data.statistics.SimpleHistogramBinTest.testOverlapsWidth()",1,1,22,276,1
"org.jfree.data.statistics.SimpleHistogramBinTest.testSerialization()",1,1,10,55,1
"org.jfree.data.statistics.SimpleHistogramDataset.SimpleHistogramDataset(Comparable)",1,1,12,43,1
"org.jfree.data.statistics.SimpleHistogramDataset.addBin(SimpleHistogramBin)",3,2,21,100,3
"org.jfree.data.statistics.SimpleHistogramDataset.addObservation(double)",1,1,10,15,1
"org.jfree.data.statistics.SimpleHistogramDataset.addObservation(double,boolean)",2,5,25,199,6
"org.jfree.data.statistics.SimpleHistogramDataset.addObservations(double[])",1,2,14,80,2
"org.jfree.data.statistics.SimpleHistogramDataset.clearObservations()",1,2,17,70,2
"org.jfree.data.statistics.SimpleHistogramDataset.clone()",1,1,14,36,1
"org.jfree.data.statistics.SimpleHistogramDataset.equals(Object)",6,1,27,188,6
"org.jfree.data.statistics.SimpleHistogramDataset.getAdjustForBinSize()",1,1,11,20,1
"org.jfree.data.statistics.SimpleHistogramDataset.getDomainOrder()",1,1,9,4,1
"org.jfree.data.statistics.SimpleHistogramDataset.getEndX(int,int)",1,1,12,22,1
"org.jfree.data.statistics.SimpleHistogramDataset.getEndXValue(int,int)",1,1,14,36,1
"org.jfree.data.statistics.SimpleHistogramDataset.getEndY(int,int)",1,1,12,18,1
"org.jfree.data.statistics.SimpleHistogramDataset.getEndYValue(int,int)",1,1,13,22,1
"org.jfree.data.statistics.SimpleHistogramDataset.getItemCount(int)",1,1,12,18,1
"org.jfree.data.statistics.SimpleHistogramDataset.getSeriesCount()",1,1,9,8,1
"org.jfree.data.statistics.SimpleHistogramDataset.getSeriesKey(int)",1,1,12,11,1
"org.jfree.data.statistics.SimpleHistogramDataset.getStartX(int,int)",1,1,12,22,1
"org.jfree.data.statistics.SimpleHistogramDataset.getStartXValue(int,int)",1,1,14,36,1
"org.jfree.data.statistics.SimpleHistogramDataset.getStartY(int,int)",1,1,12,18,1
"org.jfree.data.statistics.SimpleHistogramDataset.getStartYValue(int,int)",1,1,13,22,1
"org.jfree.data.statistics.SimpleHistogramDataset.getX(int,int)",1,1,14,22,1
"org.jfree.data.statistics.SimpleHistogramDataset.getXValue(int,int)",1,1,13,60,1
"org.jfree.data.statistics.SimpleHistogramDataset.getY(int,int)",1,1,12,22,1
"org.jfree.data.statistics.SimpleHistogramDataset.getYValue(int,int)",2,2,21,98,2
"org.jfree.data.statistics.SimpleHistogramDataset.removeAllBins()",1,1,12,23,1
"org.jfree.data.statistics.SimpleHistogramDataset.setAdjustForBinSize(boolean)",1,1,13,38,1
"org.jfree.data.statistics.SimpleHistogramDatasetTest.testClearObservations()",1,1,12,106,1
"org.jfree.data.statistics.SimpleHistogramDatasetTest.testCloning()",1,1,15,140,1
"org.jfree.data.statistics.SimpleHistogramDatasetTest.testEquals()",1,1,13,100,1
"org.jfree.data.statistics.SimpleHistogramDatasetTest.testRemoveAllBins()",1,1,13,118,1
"org.jfree.data.statistics.SimpleHistogramDatasetTest.testSerialization()",1,1,10,26,1
"org.jfree.data.statistics.Statistics.calculateMean(Collection)",1,1,10,19,1
"org.jfree.data.statistics.Statistics.calculateMean(Collection,boolean)",7,5,44,277,7
"org.jfree.data.statistics.Statistics.calculateMean(Number[])",1,1,11,19,1
"org.jfree.data.statistics.Statistics.calculateMean(Number[],boolean)",1,4,36,255,5
"org.jfree.data.statistics.Statistics.calculateMedian(List)",1,1,14,24,1
"org.jfree.data.statistics.Statistics.calculateMedian(List,boolean)",1,7,45,489,7
"org.jfree.data.statistics.Statistics.calculateMedian(List,int,int)",1,1,13,36,1
"org.jfree.data.statistics.Statistics.calculateMedian(List,int,int,boolean)",1,6,48,542,6
"org.jfree.data.statistics.Statistics.getCorrelation(Number[],Number[])",2,4,45,597,5
"org.jfree.data.statistics.Statistics.getLinearFit(Number[],Number[])",2,1,23,178,2
"org.jfree.data.statistics.Statistics.getMovingAverage(Number[],Number[],int)",3,3,33,363,5
"org.jfree.data.statistics.Statistics.getSlope(Number[],Number[])",2,2,33,401,3
"org.jfree.data.statistics.Statistics.getStdDev(Number[])",2,2,21,237,3
"org.jfree.data.statistics.StatisticsTest.testCalculateMean_Array()",1,1,43,410,3
"org.jfree.data.statistics.StatisticsTest.testCalculateMean_Collection()",1,1,57,634,3
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian()",1,1,50,306,5
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian1()",1,1,10,48,1
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian2()",1,1,11,66,1
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian3()",1,1,15,138,1
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian4()",1,1,16,155,1
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian5()",1,1,56,"1,158",1
"org.jfree.data.statistics.StatisticsTest.testCalculateMedian6()",1,1,16,169,1
"org.jfree.data.statistics.StatisticsTest.testCorrelation1()",1,1,16,148,1
"org.jfree.data.statistics.StatisticsTest.testCorrelation2()",1,1,52,"1,010",1
"org.jfree.data.statistics.StatisticsTest.testGetStdDev()",1,1,27,113,3
"org.jfree.data.time.DateRange.DateRange()",1,1,6,18,1
"org.jfree.data.time.DateRange.DateRange(Date,Date)",1,1,11,47,1
"org.jfree.data.time.DateRange.DateRange(Range)",1,1,11,18,1
"org.jfree.data.time.DateRange.DateRange(double,double)",1,1,12,49,1
"org.jfree.data.time.DateRange.getLowerDate()",1,1,10,11,1
"org.jfree.data.time.DateRange.getLowerMillis()",1,1,12,11,1
"org.jfree.data.time.DateRange.getUpperDate()",1,1,10,11,1
"org.jfree.data.time.DateRange.getUpperMillis()",1,1,12,11,1
"org.jfree.data.time.DateRange.toString()",1,1,11,39,1
"org.jfree.data.time.DateRangeTest.testClone()",1,1,9,30,1
"org.jfree.data.time.DateRangeTest.testEquals()",1,1,18,215,1
"org.jfree.data.time.DateRangeTest.testImmutable()",1,1,13,98,1
"org.jfree.data.time.DateRangeTest.testSerialization()",1,1,9,38,1
"org.jfree.data.time.Day.Day()",1,1,7,8,1
"org.jfree.data.time.Day.Day(Date)",1,1,12,15,1
"org.jfree.data.time.Day.Day(Date,TimeZone,Locale)",1,1,19,176,1
"org.jfree.data.time.Day.Day(SerialDate)",1,1,10,26,1
"org.jfree.data.time.Day.Day(int,int,int)",1,1,11,39,1
"org.jfree.data.time.Day.compareTo(Object)",1,2,33,100,3
"org.jfree.data.time.Day.equals(Object)",4,1,24,101,4
"org.jfree.data.time.Day.getDayOfMonth()",1,1,8,15,1
"org.jfree.data.time.Day.getFirstMillisecond()",1,1,14,11,1
"org.jfree.data.time.Day.getFirstMillisecond(Calendar)",1,1,21,144,1
"org.jfree.data.time.Day.getLastMillisecond()",1,1,14,11,1
"org.jfree.data.time.Day.getLastMillisecond(Calendar)",1,1,21,149,1
"org.jfree.data.time.Day.getMonth()",1,1,8,15,1
"org.jfree.data.time.Day.getSerialDate()",1,1,12,8,1
"org.jfree.data.time.Day.getSerialIndex()",1,1,9,15,1
"org.jfree.data.time.Day.getYear()",1,1,8,15,1
"org.jfree.data.time.Day.hashCode()",1,1,13,15,1
"org.jfree.data.time.Day.next()",2,2,20,87,2
"org.jfree.data.time.Day.parseDay(String)",1,2,25,62,3
"org.jfree.data.time.Day.peg(Calendar)",1,1,13,30,1
"org.jfree.data.time.Day.previous()",2,2,18,87,2
"org.jfree.data.time.Day.toString()",1,1,9,11,1
"org.jfree.data.time.DayTest.test1Jan1900Next()",1,1,10,43,1
"org.jfree.data.time.DayTest.test1Jan1900Previous()",1,1,10,33,1
"org.jfree.data.time.DayTest.test31Dec9999Next()",1,1,10,33,1
"org.jfree.data.time.DayTest.test31Dec9999Previous()",1,1,10,43,1
"org.jfree.data.time.DayTest.testDateConstructor1()",1,1,16,151,1
"org.jfree.data.time.DayTest.testDateConstructor2()",1,1,17,151,1
"org.jfree.data.time.DayTest.testEquals()",1,1,9,46,1
"org.jfree.data.time.DayTest.testEqualsSelf()",1,1,10,18,1
"org.jfree.data.time.DayTest.testGetEnd()",1,1,14,133,1
"org.jfree.data.time.DayTest.testGetFirstMillisecond()",1,1,14,89,1
"org.jfree.data.time.DayTest.testGetFirstMillisecondWithCalendar()",1,1,19,126,2
"org.jfree.data.time.DayTest.testGetFirstMillisecondWithTimeZone()",1,1,19,123,2
"org.jfree.data.time.DayTest.testGetLastMillisecond()",1,1,14,87,1
"org.jfree.data.time.DayTest.testGetLastMillisecondWithCalendar()",1,1,19,117,2
"org.jfree.data.time.DayTest.testGetLastMillisecondWithTimeZone()",1,1,19,123,2
"org.jfree.data.time.DayTest.testGetSerialIndex()",1,1,10,70,1
"org.jfree.data.time.DayTest.testGetStart()",1,1,14,131,1
"org.jfree.data.time.DayTest.testHashcode()",1,1,12,89,1
"org.jfree.data.time.DayTest.testNext()",1,1,13,116,1
"org.jfree.data.time.DayTest.testNotCloneable()",1,1,8,28,1
"org.jfree.data.time.DayTest.testParseDay()",1,2,23,140,2
"org.jfree.data.time.DayTest.testSerialization()",1,1,9,36,1
"org.jfree.data.time.DynamicTimeSeriesCollection.DynamicTimeSeriesCollection(int,int)",1,1,11,48,1
"org.jfree.data.time.DynamicTimeSeriesCollection.DynamicTimeSeriesCollection(int,int,RegularTimePeriod)",1,1,11,26,1
"org.jfree.data.time.DynamicTimeSeriesCollection.DynamicTimeSeriesCollection(int,int,RegularTimePeriod,TimeZone)",1,1,36,442,6
"org.jfree.data.time.DynamicTimeSeriesCollection.DynamicTimeSeriesCollection(int,int,TimeZone)",1,1,12,48,1
"org.jfree.data.time.DynamicTimeSeriesCollection.ValueSequence.ValueSequence()",1,1,6,10,1
"org.jfree.data.time.DynamicTimeSeriesCollection.ValueSequence.ValueSequence(int)",1,1,11,70,2
"org.jfree.data.time.DynamicTimeSeriesCollection.ValueSequence.enterData(int,float)",1,1,9,24,1
"org.jfree.data.time.DynamicTimeSeriesCollection.ValueSequence.getData(int)",1,1,10,19,1
"org.jfree.data.time.DynamicTimeSeriesCollection.addSeries(float[],int,Comparable)",3,4,53,512,9
"org.jfree.data.time.DynamicTimeSeriesCollection.addValue(int,int,float)",2,1,27,178,3
"org.jfree.data.time.DynamicTimeSeriesCollection.advanceTime()",3,5,53,640,8
"org.jfree.data.time.DynamicTimeSeriesCollection.appendData(float[])",2,2,22,211,4
"org.jfree.data.time.DynamicTimeSeriesCollection.appendData(float[],int,int)",2,4,27,274,6
"org.jfree.data.time.DynamicTimeSeriesCollection.findDomainLimits()",1,2,17,145,2
"org.jfree.data.time.DynamicTimeSeriesCollection.findMaxValue()",1,3,17,140,4
"org.jfree.data.time.DynamicTimeSeriesCollection.fireSeriesChanged()",1,1,6,11,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getDomainBounds(boolean)",1,2,15,34,2
"org.jfree.data.time.DynamicTimeSeriesCollection.getDomainLowerBound(boolean)",1,1,13,19,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getDomainUpperBound(boolean)",1,1,13,19,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getEndX(int,int)",1,1,13,44,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getEndY(int,int)",1,1,12,18,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getItemCount(int)",1,1,14,13,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getNewestIndex()",1,1,8,11,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getNewestTime()",1,1,8,13,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getOldestIndex()",1,1,8,11,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getOldestTime()",1,1,8,13,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getPosition()",1,1,8,11,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getRangeBounds(boolean)",1,2,16,68,2
"org.jfree.data.time.DynamicTimeSeriesCollection.getRangeLowerBound(boolean)",1,2,16,57,2
"org.jfree.data.time.DynamicTimeSeriesCollection.getRangeUpperBound(boolean)",1,2,16,57,2
"org.jfree.data.time.DynamicTimeSeriesCollection.getSeriesCount()",1,1,9,11,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getSeriesKey(int)",1,1,11,15,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getStartX(int,int)",1,1,13,44,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getStartY(int,int)",1,1,12,18,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getX(RegularTimePeriod)",5,5,19,128,5
"org.jfree.data.time.DynamicTimeSeriesCollection.getX(int,int)",1,1,15,36,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getY(int,int)",1,1,12,22,1
"org.jfree.data.time.DynamicTimeSeriesCollection.getYValue(int,int)",1,1,15,41,1
"org.jfree.data.time.DynamicTimeSeriesCollection.invalidateRangeInfo()",1,1,7,20,1
"org.jfree.data.time.DynamicTimeSeriesCollection.offsetFromNewest(int)",1,1,10,26,1
"org.jfree.data.time.DynamicTimeSeriesCollection.offsetFromOldest(int)",1,1,10,26,1
"org.jfree.data.time.DynamicTimeSeriesCollection.setPosition(int)",1,1,8,15,1
"org.jfree.data.time.DynamicTimeSeriesCollection.setSeriesKey(int,Comparable)",1,1,9,19,1
"org.jfree.data.time.DynamicTimeSeriesCollection.setTimeBase(RegularTimePeriod)",1,3,28,302,3
"org.jfree.data.time.DynamicTimeSeriesCollection.translateGet(int)",2,1,18,92,3
"org.jfree.data.time.DynamicTimeSeriesCollection.wrapOffset(int)",1,1,17,82,3
"org.jfree.data.time.FixedMillisecond.FixedMillisecond()",1,1,6,8,1
"org.jfree.data.time.FixedMillisecond.FixedMillisecond(Date)",1,1,8,11,1
"org.jfree.data.time.FixedMillisecond.FixedMillisecond(long)",1,1,8,11,1
"org.jfree.data.time.FixedMillisecond.compareTo(Object)",1,1,44,181,5
"org.jfree.data.time.FixedMillisecond.equals(Object)",2,2,17,55,2
"org.jfree.data.time.FixedMillisecond.getFirstMillisecond()",1,1,9,11,1
"org.jfree.data.time.FixedMillisecond.getFirstMillisecond(Calendar)",1,1,11,11,1
"org.jfree.data.time.FixedMillisecond.getLastMillisecond()",1,1,9,11,1
"org.jfree.data.time.FixedMillisecond.getLastMillisecond(Calendar)",1,1,11,11,1
"org.jfree.data.time.FixedMillisecond.getMiddleMillisecond()",1,1,9,11,1
"org.jfree.data.time.FixedMillisecond.getMiddleMillisecond(Calendar)",1,1,11,11,1
"org.jfree.data.time.FixedMillisecond.getSerialIndex()",1,1,9,11,1
"org.jfree.data.time.FixedMillisecond.getTime()",1,1,9,11,1
"org.jfree.data.time.FixedMillisecond.hashCode()",1,1,9,13,1
"org.jfree.data.time.FixedMillisecond.next()",1,1,14,60,2
"org.jfree.data.time.FixedMillisecond.peg(Calendar)",1,1,11,2,1
"org.jfree.data.time.FixedMillisecond.previous()",1,1,14,60,2
"org.jfree.data.time.FixedMillisecondTest.testHashcode()",1,1,12,70,1
"org.jfree.data.time.FixedMillisecondTest.testImmutability()",1,1,10,43,1
"org.jfree.data.time.FixedMillisecondTest.testNotCloneable()",1,1,9,19,1
"org.jfree.data.time.FixedMillisecondTest.testSerialization()",1,1,9,22,1
"org.jfree.data.time.Hour.Hour()",1,1,6,8,1
"org.jfree.data.time.Hour.Hour(Date)",1,1,12,15,1
"org.jfree.data.time.Hour.Hour(Date,TimeZone,Locale)",1,1,20,127,1
"org.jfree.data.time.Hour.Hour(int,Day)",1,1,12,50,1
"org.jfree.data.time.Hour.Hour(int,int,int,int)",1,1,11,38,1
"org.jfree.data.time.Hour.compareTo(Object)",1,3,36,137,4
"org.jfree.data.time.Hour.equals(Object)",5,1,28,141,5
"org.jfree.data.time.Hour.getDay()",1,1,8,8,1
"org.jfree.data.time.Hour.getDayOfMonth()",1,1,8,15,1
"org.jfree.data.time.Hour.getFirstMillisecond()",1,1,14,11,1
"org.jfree.data.time.Hour.getFirstMillisecond(Calendar)",1,1,19,140,1
"org.jfree.data.time.Hour.getHour()",1,1,8,11,1
"org.jfree.data.time.Hour.getLastMillisecond()",1,1,14,11,1
"org.jfree.data.time.Hour.getLastMillisecond(Calendar)",1,1,19,142,1
"org.jfree.data.time.Hour.getMonth()",1,1,8,15,1
"org.jfree.data.time.Hour.getSerialIndex()",1,1,9,36,1
"org.jfree.data.time.Hour.getYear()",1,1,8,15,1
"org.jfree.data.time.Hour.hashCode()",1,1,16,75,1
"org.jfree.data.time.Hour.next()",1,2,22,126,3
"org.jfree.data.time.Hour.parseHour(String)",1,2,28,242,4
"org.jfree.data.time.Hour.peg(Calendar)",1,1,13,30,1
"org.jfree.data.time.Hour.previous()",1,2,22,126,3
"org.jfree.data.time.Hour.toString()",1,1,11,41,1
"org.jfree.data.time.HourTest.testDateConstructor1()",1,1,16,151,1
"org.jfree.data.time.HourTest.testDateConstructor2()",1,1,16,151,1
"org.jfree.data.time.HourTest.testEquals()",1,1,9,62,1
"org.jfree.data.time.HourTest.testEqualsSelf()",1,1,10,18,1
"org.jfree.data.time.HourTest.testFirstHourNext()",1,1,11,66,1
"org.jfree.data.time.HourTest.testFirstHourPrevious()",1,1,10,41,1
"org.jfree.data.time.HourTest.testGetEnd()",1,1,14,138,1
"org.jfree.data.time.HourTest.testGetFirstMillisecond()",1,1,14,95,1
"org.jfree.data.time.HourTest.testGetFirstMillisecondWithCalendar()",1,1,19,132,2
"org.jfree.data.time.HourTest.testGetFirstMillisecondWithTimeZone()",1,1,19,130,2
"org.jfree.data.time.HourTest.testGetLastMillisecond()",1,1,14,91,1
"org.jfree.data.time.HourTest.testGetLastMillisecondWithCalendar()",1,1,19,131,2
"org.jfree.data.time.HourTest.testGetLastMillisecondWithTimeZone()",1,1,19,128,2
"org.jfree.data.time.HourTest.testGetSerialIndex()",1,1,10,72,1
"org.jfree.data.time.HourTest.testGetStart()",1,1,14,138,1
"org.jfree.data.time.HourTest.testHashcode()",1,1,12,100,1
"org.jfree.data.time.HourTest.testLastHourNext()",1,1,10,41,1
"org.jfree.data.time.HourTest.testLastHourPrevious()",1,1,11,68,1
"org.jfree.data.time.HourTest.testNext()",1,1,14,145,1
"org.jfree.data.time.HourTest.testNotCloneable()",1,1,8,33,1
"org.jfree.data.time.HourTest.testParseHour()",1,1,9,24,1
"org.jfree.data.time.HourTest.testSerialization()",1,1,9,22,1
"org.jfree.data.time.Millisecond.Millisecond()",1,1,6,8,1
"org.jfree.data.time.Millisecond.Millisecond(Date)",1,1,10,15,1
"org.jfree.data.time.Millisecond.Millisecond(Date,TimeZone,Locale)",1,1,19,166,1
"org.jfree.data.time.Millisecond.Millisecond(int,Second)",1,1,14,120,1
"org.jfree.data.time.Millisecond.Millisecond(int,int,int,int,int,int,int)",1,1,15,64,1
"org.jfree.data.time.Millisecond.compareTo(Object)",1,3,48,273,7
"org.jfree.data.time.Millisecond.equals(Object)",8,1,37,265,8
"org.jfree.data.time.Millisecond.getFirstMillisecond()",1,1,14,11,1
"org.jfree.data.time.Millisecond.getFirstMillisecond(Calendar)",1,1,20,169,1
"org.jfree.data.time.Millisecond.getLastMillisecond()",1,1,14,11,1
"org.jfree.data.time.Millisecond.getLastMillisecond(Calendar)",1,1,14,11,1
"org.jfree.data.time.Millisecond.getMillisecond()",1,1,8,11,1
"org.jfree.data.time.Millisecond.getSecond()",1,1,10,62,1
"org.jfree.data.time.Millisecond.getSerialIndex()",1,1,12,133,1
"org.jfree.data.time.Millisecond.hashCode()",1,1,16,71,1
"org.jfree.data.time.Millisecond.next()",1,2,19,110,3
"org.jfree.data.time.Millisecond.peg(Calendar)",1,1,12,15,1
"org.jfree.data.time.Millisecond.previous()",1,2,19,110,3
"org.jfree.data.time.MillisecondTest.test943985()",1,1,13,96,1
"org.jfree.data.time.MillisecondTest.testDateConstructor1()",1,1,19,151,1
"org.jfree.data.time.MillisecondTest.testDateConstructor2()",1,1,19,151,1
"org.jfree.data.time.MillisecondTest.testEquals()",1,1,17,166,1
"org.jfree.data.time.MillisecondTest.testEqualsSelf()",1,1,10,18,1
"org.jfree.data.time.MillisecondTest.testGetEnd()",1,1,14,155,1
"org.jfree.data.time.MillisecondTest.testGetFirstMillisecond()",1,1,14,111,1
"org.jfree.data.time.MillisecondTest.testGetFirstMillisecondWithCalendar()",1,1,19,152,2
"org.jfree.data.time.MillisecondTest.testGetFirstMillisecondWithTimeZone()",1,1,19,149,2
"org.jfree.data.time.MillisecondTest.testGetLastMillisecond()",1,1,14,106,1
"org.jfree.data.time.MillisecondTest.testGetLastMillisecondWithCalendar()",1,1,19,150,2
"org.jfree.data.time.MillisecondTest.testGetLastMillisecondWithTimeZone()",1,1,19,147,2
"org.jfree.data.time.MillisecondTest.testGetSerialIndex()",1,1,11,96,1
"org.jfree.data.time.MillisecondTest.testGetStart()",1,1,14,155,1
"org.jfree.data.time.MillisecondTest.testHashcode()",1,1,12,131,1
"org.jfree.data.time.MillisecondTest.testNext()",1,1,17,330,1
"org.jfree.data.time.MillisecondTest.testNotCloneable()",1,1,9,48,1
"org.jfree.data.time.MillisecondTest.testSerialization()",1,1,9,22,1
"org.jfree.data.time.Minute.Minute()",1,1,6,8,1
"org.jfree.data.time.Minute.Minute(Date)",1,1,12,15,1
"org.jfree.data.time.Minute.Minute(Date,TimeZone,Locale)",1,1,21,171,1
"org.jfree.data.time.Minute.Minute(int,Hour)",1,1,13,78,1
"org.jfree.data.time.Minute.Minute(int,int,int,int,int)",1,1,12,49,1
"org.jfree.data.time.Minute.compareTo(Object)",1,3,36,137,4
"org.jfree.data.time.Minute.equals(Object)",5,1,28,134,5
"org.jfree.data.time.Minute.getDay()",1,1,10,8,1
"org.jfree.data.time.Minute.getFirstMillisecond()",1,1,14,11,1
"org.jfree.data.time.Minute.getFirstMillisecond(Calendar)",1,1,21,158,1
"org.jfree.data.time.Minute.getHour()",1,1,8,18,1
"org.jfree.data.time.Minute.getHourValue()",1,1,10,11,1
"org.jfree.data.time.Minute.getLastMillisecond()",1,1,14,11,1
"org.jfree.data.time.Minute.getLastMillisecond(Calendar)",1,1,21,160,1
"org.jfree.data.time.Minute.getMinute()",1,1,8,11,1
"org.jfree.data.time.Minute.getSerialIndex()",1,1,10,66,1
"org.jfree.data.time.Minute.hashCode()",1,1,17,103,1
"org.jfree.data.time.Minute.next()",1,2,22,118,3
"org.jfree.data.time.Minute.parseMinute(String)",1,3,35,408,6
"org.jfree.data.time.Minute.peg(Calendar)",1,1,13,30,1
"org.jfree.data.time.Minute.previous()",1,2,22,118,3
"org.jfree.data.time.MinuteTest.test1611872()",1,1,9,68,1
"org.jfree.data.time.MinuteTest.testDateConstructor1()",1,1,16,151,1
"org.jfree.data.time.MinuteTest.testDateConstructor2()",1,1,17,151,1
"org.jfree.data.time.MinuteTest.testEquals()",1,1,13,101,1
"org.jfree.data.time.MinuteTest.testEqualsSelf()",1,1,10,18,1
"org.jfree.data.time.MinuteTest.testGetEnd()",1,1,17,184,1
"org.jfree.data.time.MinuteTest.testGetFirstMillisecond()",1,1,14,101,1
"org.jfree.data.time.MinuteTest.testGetFirstMillisecondWithCalendar()",1,1,19,139,2
"org.jfree.data.time.MinuteTest.testGetFirstMillisecondWithTimeZone()",1,1,19,136,2
"org.jfree.data.time.MinuteTest.testGetLastMillisecond()",1,1,14,95,1
"org.jfree.data.time.MinuteTest.testGetLastMillisecondWithCalendar()",1,1,19,137,2
"org.jfree.data.time.MinuteTest.testGetLastMillisecondWithTimeZone()",1,1,19,134,2
"org.jfree.data.time.MinuteTest.testGetSerialIndex()",1,1,10,79,1
"org.jfree.data.time.MinuteTest.testGetStart()",1,1,17,182,1
"org.jfree.data.time.MinuteTest.testHashcode()",1,1,12,110,1
"org.jfree.data.time.MinuteTest.testNext()",1,1,15,197,1
"org.jfree.data.time.MinuteTest.testNotCloneable()",1,1,9,38,1
"org.jfree.data.time.MinuteTest.testSerialization()",1,1,9,22,1
"org.jfree.data.time.Month.Month()",1,1,6,8,1
"org.jfree.data.time.Month.Month(Date)",1,1,11,15,1
"org.jfree.data.time.Month.Month(Date,TimeZone,Locale)",1,1,17,84,1
"org.jfree.data.time.Month.Month(int,Year)",2,1,14,93,3
"org.jfree.data.time.Month.Month(int,int)",2,1,14,91,3
"org.jfree.data.time.Month.compareTo(Object)",1,3,35,141,4
"org.jfree.data.time.Month.equals(Object)",5,1,27,134,5
"org.jfree.data.time.Month.evaluateAsYear(String)",1,1,19,31,2
"org.jfree.data.time.Month.findSeparator(String)",1,4,22,140,4
"org.jfree.data.time.Month.getFirstMillisecond()",1,1,14,11,1
"org.jfree.data.time.Month.getFirstMillisecond(Calendar)",1,1,17,79,1
"org.jfree.data.time.Month.getLastMillisecond()",1,1,14,11,1
"org.jfree.data.time.Month.getLastMillisecond(Calendar)",1,1,18,114,1
"org.jfree.data.time.Month.getMonth()",1,1,8,11,1
"org.jfree.data.time.Month.getSerialIndex()",1,1,9,31,1
"org.jfree.data.time.Month.getYear()",1,1,8,11,1
"org.jfree.data.time.Month.getYearValue()",1,1,8,11,1
"org.jfree.data.time.Month.hashCode()",1,1,16,69,1
"org.jfree.data.time.Month.next()",1,1,24,130,3
"org.jfree.data.time.Month.parseMonth(String)",4,5,64,576,8
"org.jfree.data.time.Month.peg(Calendar)",1,1,13,30,1
"org.jfree.data.time.Month.previous()",1,1,24,130,3
"org.jfree.data.time.Month.toString()",1,1,11,22,1
"org.jfree.data.time.MonthTest.setUp()",1,1,10,83,1
"org.jfree.data.time.MonthTest.testDateConstructor1()",1,1,15,144,1
"org.jfree.data.time.MonthTest.testDateConstructor2()",1,1,15,144,1
"org.jfree.data.time.MonthTest.testDec9999Next()",1,1,9,19,1
"org.jfree.data.time.MonthTest.testDec9999Previous()",1,1,9,26,1
"org.jfree.data.time.MonthTest.testEquals()",1,1,9,38,1
"org.jfree.data.time.MonthTest.testEqualsSelf()",1,1,10,18,1
"org.jfree.data.time.MonthTest.testGetEnd()",1,1,14,131,1
"org.jfree.data.time.MonthTest.testGetFirstMillisecond()",1,1,14,83,1
"org.jfree.data.time.MonthTest.testGetFirstMillisecondWithCalendar()",1,1,19,120,2
"org.jfree.data.time.MonthTest.testGetFirstMillisecondWithTimeZone()",1,1,19,117,2
"org.jfree.data.time.MonthTest.testGetLastMillisecond()",1,1,14,83,1
"org.jfree.data.time.MonthTest.testGetLastMillisecondWithCalendar()",1,1,19,120,2
"org.jfree.data.time.MonthTest.testGetLastMillisecondWithTimeZone()",1,1,19,117,2
"org.jfree.data.time.MonthTest.testGetSerialIndex()",1,1,10,58,1
"org.jfree.data.time.MonthTest.testGetStart()",1,1,14,127,1
"org.jfree.data.time.MonthTest.testHashcode()",1,1,12,79,1
"org.jfree.data.time.MonthTest.testJan1900Next()",1,1,9,26,1
"org.jfree.data.time.MonthTest.testJan1900Previous()",1,1,9,19,1
"org.jfree.data.time.MonthTest.testNext()",1,1,12,93,1
"org.jfree.data.time.MonthTest.testNotCloneable()",1,1,8,24,1
"org.jfree.data.time.MonthTest.testParseMonth()",1,1,35,291,4
"org.jfree.data.time.MonthTest.testSerialization()",1,1,9,31,1
"org.jfree.data.time.MovingAverage.createMovingAverage(TimeSeries,String,int,int)",2,9,67,758,11
"org.jfree.data.time.MovingAverage.createMovingAverage(TimeSeriesCollection,String,int,int)",2,2,30,199,3
"org.jfree.data.time.MovingAverage.createMovingAverage(XYDataset,String,double,double)",1,2,23,146,2
"org.jfree.data.time.MovingAverage.createMovingAverage(XYDataset,String,long,long)",1,1,17,39,1
"org.jfree.data.time.MovingAverage.createMovingAverage(XYDataset,int,String,double,double)",3,9,66,782,11
"org.jfree.data.time.MovingAverage.createPointMovingAverage(TimeSeries,String,int)",2,4,44,380,5
"org.jfree.data.time.MovingAverageTest.createDailyTimeSeries1()",1,1,18,319,1
"org.jfree.data.time.MovingAverageTest.test1()",1,1,26,368,1
"org.jfree.data.time.Quarter.Quarter()",1,1,6,8,1
"org.jfree.data.time.Quarter.Quarter(Date)",1,1,11,15,1
"org.jfree.data.time.Quarter.Quarter(Date,TimeZone,Locale)",1,1,18,114,1
"org.jfree.data.time.Quarter.Quarter(int,Year)",2,1,14,105,3
"org.jfree.data.time.Quarter.Quarter(int,int)",2,1,14,103,3
"org.jfree.data.time.Quarter.compareTo(Object)",1,3,36,141,4
"org.jfree.data.time.Quarter.equals(Object)",3,4,27,116,4
"org.jfree.data.time.Quarter.getFirstMillisecond()",1,1,14,11,1
"org.jfree.data.time.Quarter.getFirstMillisecond(Calendar)",1,1,18,98,1
"org.jfree.data.time.Quarter.getLastMillisecond()",1,1,14,11,1
"org.jfree.data.time.Quarter.getLastMillisecond(Calendar)",1,1,19,127,1
"org.jfree.data.time.Quarter.getQuarter()",1,1,8,11,1
"org.jfree.data.time.Quarter.getSerialIndex()",1,1,9,31,1
"org.jfree.data.time.Quarter.getYear()",1,1,8,11,1
"org.jfree.data.time.Quarter.getYearValue()",1,1,10,11,1
"org.jfree.data.time.Quarter.hashCode()",1,1,16,69,1
"org.jfree.data.time.Quarter.next()",1,1,21,128,3
"org.jfree.data.time.Quarter.parseQuarter(String)",3,1,31,359,3
"org.jfree.data.time.Quarter.peg(Calendar)",1,1,13,30,1
"org.jfree.data.time.Quarter.previous()",1,1,22,128,3
"org.jfree.data.time.Quarter.toString()",1,1,9,22,1
"org.jfree.data.time.QuarterTest.setUp()",1,1,10,83,1
"org.jfree.data.time.QuarterTest.testConstructor()",1,1,23,88,3
"org.jfree.data.time.QuarterTest.testDateConstructor1()",1,1,15,144,1
"org.jfree.data.time.QuarterTest.testDateConstructor2()",1,1,15,144,1
"org.jfree.data.time.QuarterTest.testEquals()",1,1,9,38,1
"org.jfree.data.time.QuarterTest.testEqualsSelf()",1,1,10,18,1
"org.jfree.data.time.QuarterTest.testGetEnd()",1,1,14,131,1
"org.jfree.data.time.QuarterTest.testGetFirstMillisecond()",1,1,14,83,1
"org.jfree.data.time.QuarterTest.testGetFirstMillisecondWithCalendar()",1,1,19,120,2
"org.jfree.data.time.QuarterTest.testGetFirstMillisecondWithTimeZone()",1,1,19,117,2
"org.jfree.data.time.QuarterTest.testGetLastMillisecond()",1,1,14,83,1
"org.jfree.data.time.QuarterTest.testGetLastMillisecondWithCalendar()",1,1,19,120,2
"org.jfree.data.time.QuarterTest.testGetLastMillisecondWithTimeZone()",1,1,19,117,2
"org.jfree.data.time.QuarterTest.testGetSerialIndex()",1,1,10,58,1
"org.jfree.data.time.QuarterTest.testGetStart()",1,1,14,127,1
"org.jfree.data.time.QuarterTest.testHashcode()",1,1,12,79,1
"org.jfree.data.time.QuarterTest.testNext()",1,1,12,93,1
"org.jfree.data.time.QuarterTest.testNotCloneable()",1,1,9,24,1
"org.jfree.data.time.QuarterTest.testParseQuarter()",1,1,34,254,4
"org.jfree.data.time.QuarterTest.testQ1Y1900Next()",1,1,9,26,1
"org.jfree.data.time.QuarterTest.testQ1Y1900Previous()",1,1,9,19,1
"org.jfree.data.time.QuarterTest.testQ4Y9999Next()",1,1,9,19,1
"org.jfree.data.time.QuarterTest.testQ4Y9999Previous()",1,1,9,26,1
"org.jfree.data.time.QuarterTest.testSerialization()",1,1,9,31,1
"org.jfree.data.time.RegularTimePeriod.createInstance(Class,Date,TimeZone,Locale)",1,1,25,80,2
"org.jfree.data.time.RegularTimePeriod.downsize(Class)",8,7,34,158,8
"org.jfree.data.time.RegularTimePeriod.getEnd()",1,1,12,8,1
"org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond()",1,1,10,48,1
"org.jfree.data.time.RegularTimePeriod.getMiddleMillisecond(Calendar)",1,1,13,57,1
"org.jfree.data.time.RegularTimePeriod.getMillisecond(TimePeriodAnchor,Calendar)",4,4,23,129,4
"org.jfree.data.time.RegularTimePeriod.getStart()",1,1,12,8,1
"org.jfree.data.time.RegularTimePeriod.toString()",1,1,9,8,1
"org.jfree.data.time.Second.Second()",1,1,6,8,1
"org.jfree.data.time.Second.Second(Date)",1,1,11,15,1
"org.jfree.data.time.Second.Second(Date,TimeZone,Locale)",1,1,18,140,1
"org.jfree.data.time.Second.Second(int,Minute)",1,1,16,131,1
"org.jfree.data.time.Second.Second(int,int,int,int,int,int)",1,1,14,55,1
"org.jfree.data.time.Second.compareTo(Object)",4,1,40,162,5
"org.jfree.data.time.Second.equals(Object)",7,1,34,222,7
"org.jfree.data.time.Second.getFirstMillisecond()",1,1,14,11,1
"org.jfree.data.time.Second.getFirstMillisecond(Calendar)",1,1,19,165,1
"org.jfree.data.time.Second.getLastMillisecond()",1,1,14,19,1
"org.jfree.data.time.Second.getLastMillisecond(Calendar)",1,1,13,19,1
"org.jfree.data.time.Second.getMinute()",1,1,8,28,1
"org.jfree.data.time.Second.getSecond()",1,1,8,11,1
"org.jfree.data.time.Second.getSerialIndex()",1,1,11,97,1
"org.jfree.data.time.Second.hashCode()",1,1,18,133,1
"org.jfree.data.time.Second.next()",1,2,19,110,3
"org.jfree.data.time.Second.parseSecond(String)",1,4,36,546,8
"org.jfree.data.time.Second.peg(Calendar)",1,1,12,15,1
"org.jfree.data.time.Second.previous()",1,2,19,110,3
"org.jfree.data.time.SecondTest.testDateConstructor1()",1,1,16,151,1
"org.jfree.data.time.SecondTest.testDateConstructor2()",1,1,16,151,1
"org.jfree.data.time.SecondTest.testEquals()",1,1,15,133,1
"org.jfree.data.time.SecondTest.testEqualsSelf()",1,1,10,18,1
"org.jfree.data.time.SecondTest.testGetEnd()",1,1,14,151,1
"org.jfree.data.time.SecondTest.testGetFirstMillisecond()",1,1,14,105,1
"org.jfree.data.time.SecondTest.testGetFirstMillisecondWithCalendar()",1,1,19,145,2
"org.jfree.data.time.SecondTest.testGetFirstMillisecondWithTimeZone()",1,1,19,142,2
"org.jfree.data.time.SecondTest.testGetLastMillisecond()",1,1,14,100,1
"org.jfree.data.time.SecondTest.testGetLastMillisecondWithCalendar()",1,1,19,143,2
"org.jfree.data.time.SecondTest.testGetLastMillisecondWithTimeZone()",1,1,19,141,2
"org.jfree.data.time.SecondTest.testGetSerialIndex()",1,1,10,86,1
"org.jfree.data.time.SecondTest.testGetStart()",1,1,14,151,1
"org.jfree.data.time.SecondTest.testHashcode()",1,1,12,120,1
"org.jfree.data.time.SecondTest.testNext()",1,1,16,260,1
"org.jfree.data.time.SecondTest.testNotCloneable()",1,1,9,43,1
"org.jfree.data.time.SecondTest.testSerialization()",1,1,9,22,1
"org.jfree.data.time.SimpleTimePeriod.SimpleTimePeriod(Date,Date)",1,1,9,18,1
"org.jfree.data.time.SimpleTimePeriod.SimpleTimePeriod(long,long)",2,1,13,57,2
"org.jfree.data.time.SimpleTimePeriod.compareTo(Object)",7,1,46,384,7
"org.jfree.data.time.SimpleTimePeriod.equals(Object)",5,1,26,143,5
"org.jfree.data.time.SimpleTimePeriod.getEnd()",1,1,9,11,1
"org.jfree.data.time.SimpleTimePeriod.getEndMillis()",1,1,10,11,1
"org.jfree.data.time.SimpleTimePeriod.getStart()",1,1,9,11,1
"org.jfree.data.time.SimpleTimePeriod.getStartMillis()",1,1,10,11,1
"org.jfree.data.time.SimpleTimePeriod.hashCode()",1,1,16,76,1
"org.jfree.data.time.SimpleTimePeriodTest.testClone()",1,1,9,30,1
"org.jfree.data.time.SimpleTimePeriodTest.testCompareTo()",1,1,29,527,1
"org.jfree.data.time.SimpleTimePeriodTest.testEquals()",1,1,20,215,1
"org.jfree.data.time.SimpleTimePeriodTest.testEqualsSelf()",1,1,11,33,1
"org.jfree.data.time.SimpleTimePeriodTest.testHashcode()",1,1,14,95,1
"org.jfree.data.time.SimpleTimePeriodTest.testImmutable()",1,1,18,140,1
"org.jfree.data.time.SimpleTimePeriodTest.testSerialization()",1,1,10,38,1
"org.jfree.data.time.TimePeriodAnchorTest.testEquals()",1,1,9,39,1
"org.jfree.data.time.TimePeriodAnchorTest.testSerialization()",1,1,9,26,1
"org.jfree.data.time.TimePeriodFormatException.TimePeriodFormatException(String)",1,1,8,8,1
"org.jfree.data.time.TimePeriodValue.TimePeriodValue(TimePeriod,Number)",1,1,13,30,1
"org.jfree.data.time.TimePeriodValue.TimePeriodValue(TimePeriod,double)",1,1,11,19,1
"org.jfree.data.time.TimePeriodValue.clone()",1,1,19,41,2
"org.jfree.data.time.TimePeriodValue.equals(Object)",5,3,26,216,7
"org.jfree.data.time.TimePeriodValue.getPeriod()",1,1,8,8,1
"org.jfree.data.time.TimePeriodValue.getValue()",1,1,10,8,1
"org.jfree.data.time.TimePeriodValue.hashCode()",1,3,12,102,3
"org.jfree.data.time.TimePeriodValue.setValue(Number)",1,1,10,11,1
"org.jfree.data.time.TimePeriodValue.toString()",1,1,10,19,1
"org.jfree.data.time.TimePeriodValueTest.testEquals()",1,1,10,76,1
"org.jfree.data.time.TimePeriodValueTest.testEqualsSelf()",1,1,8,25,1
"org.jfree.data.time.TimePeriodValueTest.testSerialization()",1,1,9,44,1
"org.jfree.data.time.TimePeriodValues.TimePeriodValues(String)",1,1,8,15,1
"org.jfree.data.time.TimePeriodValues.TimePeriodValues(String,String,String)",1,1,17,44,1
"org.jfree.data.time.TimePeriodValues.add(TimePeriod,Number)",1,1,11,19,1
"org.jfree.data.time.TimePeriodValues.add(TimePeriod,double)",1,1,13,24,1
"org.jfree.data.time.TimePeriodValues.add(TimePeriodValue)",1,1,12,68,1
"org.jfree.data.time.TimePeriodValues.clone()",1,1,20,28,1
"org.jfree.data.time.TimePeriodValues.createCopy(int,int)",1,4,29,193,4
"org.jfree.data.time.TimePeriodValues.delete(int,int)",1,2,14,80,2
"org.jfree.data.time.TimePeriodValues.equals(Object)",9,2,38,331,9
"org.jfree.data.time.TimePeriodValues.getDataItem(int)",1,1,11,19,1
"org.jfree.data.time.TimePeriodValues.getDomainDescription()",1,1,11,8,1
"org.jfree.data.time.TimePeriodValues.getItemCount()",1,1,9,15,1
"org.jfree.data.time.TimePeriodValues.getMaxEndIndex()",1,1,8,11,1
"org.jfree.data.time.TimePeriodValues.getMaxMiddleIndex()",1,1,9,11,1
"org.jfree.data.time.TimePeriodValues.getMaxStartIndex()",1,1,8,11,1
"org.jfree.data.time.TimePeriodValues.getMinEndIndex()",1,1,8,11,1
"org.jfree.data.time.TimePeriodValues.getMinMiddleIndex()",1,1,9,11,1
"org.jfree.data.time.TimePeriodValues.getMinStartIndex()",1,1,8,11,1
"org.jfree.data.time.TimePeriodValues.getRangeDescription()",1,1,11,8,1
"org.jfree.data.time.TimePeriodValues.getTimePeriod(int)",1,1,13,18,1
"org.jfree.data.time.TimePeriodValues.getValue(int)",1,1,13,18,1
"org.jfree.data.time.TimePeriodValues.hashCode()",1,3,19,343,3
"org.jfree.data.time.TimePeriodValues.recalculateBounds()",1,2,15,199,2
"org.jfree.data.time.TimePeriodValues.setDomainDescription(String)",1,1,13,33,1
"org.jfree.data.time.TimePeriodValues.setRangeDescription(String)",1,1,13,33,1
"org.jfree.data.time.TimePeriodValues.update(int,Number)",1,1,12,28,1
"org.jfree.data.time.TimePeriodValues.updateBounds(TimePeriod,int)",1,7,77,988,13
"org.jfree.data.time.TimePeriodValuesCollection.TimePeriodValuesCollection()",1,1,6,8,1
"org.jfree.data.time.TimePeriodValuesCollection.TimePeriodValuesCollection(TimePeriodValues)",1,2,14,64,2
"org.jfree.data.time.TimePeriodValuesCollection.addSeries(TimePeriodValues)",1,1,13,43,1
"org.jfree.data.time.TimePeriodValuesCollection.equals(Object)",5,1,24,141,5
"org.jfree.data.time.TimePeriodValuesCollection.getDomainBounds(boolean)",1,7,56,743,7
"org.jfree.data.time.TimePeriodValuesCollection.getDomainLowerBound(boolean)",1,2,17,59,2
"org.jfree.data.time.TimePeriodValuesCollection.getDomainUpperBound(boolean)",1,2,17,59,2
"org.jfree.data.time.TimePeriodValuesCollection.getEndX(int,int)",1,1,14,62,1
"org.jfree.data.time.TimePeriodValuesCollection.getEndY(int,int)",1,1,12,18,1
"org.jfree.data.time.TimePeriodValuesCollection.getItemCount(int)",1,1,13,18,1
"org.jfree.data.time.TimePeriodValuesCollection.getSeries(int)",2,2,13,72,3
"org.jfree.data.time.TimePeriodValuesCollection.getSeriesCount()",1,1,9,15,1
"org.jfree.data.time.TimePeriodValuesCollection.getSeriesKey(int)",1,1,12,15,1
"org.jfree.data.time.TimePeriodValuesCollection.getStartX(int,int)",1,1,14,62,1
"org.jfree.data.time.TimePeriodValuesCollection.getStartY(int,int)",1,1,12,18,1
"org.jfree.data.time.TimePeriodValuesCollection.getX(TimePeriod)",4,4,22,188,4
"org.jfree.data.time.TimePeriodValuesCollection.getX(int,int)",1,1,15,62,1
"org.jfree.data.time.TimePeriodValuesCollection.getXPosition()",1,1,10,8,1
"org.jfree.data.time.TimePeriodValuesCollection.getY(int,int)",1,1,14,46,1
"org.jfree.data.time.TimePeriodValuesCollection.removeSeries(TimePeriodValues)",1,1,11,43,1
"org.jfree.data.time.TimePeriodValuesCollection.removeSeries(int)",1,2,11,36,2
"org.jfree.data.time.TimePeriodValuesCollection.setXPosition(TimePeriodAnchor)",1,1,11,22,1
"org.jfree.data.time.TimePeriodValuesCollectionTest.test1161340()",1,1,20,253,1
"org.jfree.data.time.TimePeriodValuesCollectionTest.testEquals()",1,1,19,152,1
"org.jfree.data.time.TimePeriodValuesCollectionTest.testGetDomainBoundsWithInterval()",1,1,34,465,1
"org.jfree.data.time.TimePeriodValuesCollectionTest.testGetDomainBoundsWithoutInterval()",1,1,22,243,1
"org.jfree.data.time.TimePeriodValuesCollectionTest.testGetSeries()",1,1,26,162,3
"org.jfree.data.time.TimePeriodValuesCollectionTest.testSerialization()",1,1,10,22,1
"org.jfree.data.time.TimePeriodValuesTest.MySeriesChangeListener.MySeriesChangeListener()",1,1,6,8,1
"org.jfree.data.time.TimePeriodValuesTest.MySeriesChangeListener.clearLastEvent()",1,1,6,11,1
"org.jfree.data.time.TimePeriodValuesTest.MySeriesChangeListener.getLastEvent()",1,1,8,8,1
"org.jfree.data.time.TimePeriodValuesTest.MySeriesChangeListener.seriesChanged(SeriesChangeEvent)",1,1,9,11,1
"org.jfree.data.time.TimePeriodValuesTest.getMaxEndIndex()",1,1,14,171,1
"org.jfree.data.time.TimePeriodValuesTest.getMinEndIndex()",1,1,14,171,1
"org.jfree.data.time.TimePeriodValuesTest.setUp()",1,1,21,494,1
"org.jfree.data.time.TimePeriodValuesTest.test1161329()",1,1,15,125,1
"org.jfree.data.time.TimePeriodValuesTest.testAdd()",1,1,22,190,2
"org.jfree.data.time.TimePeriodValuesTest.testAddValue()",1,1,10,68,1
"org.jfree.data.time.TimePeriodValuesTest.testClone()",1,1,19,228,1
"org.jfree.data.time.TimePeriodValuesTest.testEquals()",1,1,43,560,1
"org.jfree.data.time.TimePeriodValuesTest.testGetMaxMiddleIndex()",1,1,16,221,1
"org.jfree.data.time.TimePeriodValuesTest.testGetMaxStartIndex()",1,1,14,171,1
"org.jfree.data.time.TimePeriodValuesTest.testGetMinMiddleIndex()",1,1,14,171,1
"org.jfree.data.time.TimePeriodValuesTest.testGetMinStartIndex()",1,1,14,171,1
"org.jfree.data.time.TimePeriodValuesTest.testSerialization()",1,1,14,153,1
"org.jfree.data.time.TimeSeries.TimeSeries(Comparable)",1,1,10,15,1
"org.jfree.data.time.TimeSeries.TimeSeries(Comparable,String,String)",1,1,24,121,1
"org.jfree.data.time.TimeSeries.add(RegularTimePeriod,Number)",1,1,12,15,1
"org.jfree.data.time.TimeSeries.add(RegularTimePeriod,Number,boolean)",1,1,13,28,1
"org.jfree.data.time.TimeSeries.add(RegularTimePeriod,double)",1,1,11,19,1
"org.jfree.data.time.TimeSeries.add(RegularTimePeriod,double,boolean)",1,1,13,33,1
"org.jfree.data.time.TimeSeries.add(TimeSeriesDataItem)",1,1,9,11,1
"org.jfree.data.time.TimeSeries.add(TimeSeriesDataItem,boolean)",6,9,70,907,9
"org.jfree.data.time.TimeSeries.addAndOrUpdate(TimeSeries)",1,3,21,143,3
"org.jfree.data.time.TimeSeries.addOrUpdate(RegularTimePeriod,Number)",1,1,15,15,1
"org.jfree.data.time.TimeSeries.addOrUpdate(RegularTimePeriod,double)",1,1,15,19,1
"org.jfree.data.time.TimeSeries.addOrUpdate(TimeSeriesDataItem)",3,8,64,815,10
"org.jfree.data.time.TimeSeries.clear()",1,2,13,82,2
"org.jfree.data.time.TimeSeries.clone()",1,1,21,36,1
"org.jfree.data.time.TimeSeries.createCopy(RegularTimePeriod,RegularTimePeriod)",3,3,44,406,8
"org.jfree.data.time.TimeSeries.createCopy(int,int)",5,3,39,305,6
"org.jfree.data.time.TimeSeries.delete(RegularTimePeriod)",1,2,20,95,3
"org.jfree.data.time.TimeSeries.delete(int,int)",1,1,9,22,1
"org.jfree.data.time.TimeSeries.delete(int,int,boolean)",2,3,24,173,5
"org.jfree.data.time.TimeSeries.equals(Object)",10,1,43,361,10
"org.jfree.data.time.TimeSeries.findValueRange()",2,1,17,43,2
"org.jfree.data.time.TimeSeries.findValueRange(Range,TimePeriodAnchor,TimeZone)",4,5,49,477,8
"org.jfree.data.time.TimeSeries.findValueRange(Range,TimeZone)",1,1,16,15,1
"org.jfree.data.time.TimeSeries.getDataItem(RegularTimePeriod)",2,2,19,48,2
"org.jfree.data.time.TimeSeries.getDataItem(int)",1,1,13,28,1
"org.jfree.data.time.TimeSeries.getDomainDescription()",1,1,10,8,1
"org.jfree.data.time.TimeSeries.getIndex(RegularTimePeriod)",1,1,14,46,1
"org.jfree.data.time.TimeSeries.getItemCount()",1,1,9,15,1
"org.jfree.data.time.TimeSeries.getItems()",1,1,10,11,1
"org.jfree.data.time.TimeSeries.getMaxY()",1,1,15,11,1
"org.jfree.data.time.TimeSeries.getMaximumItemAge()",1,1,10,13,1
"org.jfree.data.time.TimeSeries.getMaximumItemCount()",1,1,11,13,1
"org.jfree.data.time.TimeSeries.getMinY()",1,1,15,11,1
"org.jfree.data.time.TimeSeries.getNextTimePeriod()",1,1,10,24,1
"org.jfree.data.time.TimeSeries.getRangeDescription()",1,1,10,8,1
"org.jfree.data.time.TimeSeries.getRawDataItem(RegularTimePeriod)",2,2,20,50,2
"org.jfree.data.time.TimeSeries.getRawDataItem(int)",1,1,16,18,1
"org.jfree.data.time.TimeSeries.getTimePeriod(int)",1,1,10,15,1
"org.jfree.data.time.TimeSeries.getTimePeriodClass()",1,1,13,8,1
"org.jfree.data.time.TimeSeries.getTimePeriods()",1,2,12,59,2
"org.jfree.data.time.TimeSeries.getTimePeriodsUniqueToOtherSeries(TimeSeries)",1,3,19,108,3
"org.jfree.data.time.TimeSeries.getValue(RegularTimePeriod)",2,2,15,44,2
"org.jfree.data.time.TimeSeries.getValue(int)",1,1,10,15,1
"org.jfree.data.time.TimeSeries.hashCode()",1,7,32,525,7
"org.jfree.data.time.TimeSeries.maxIgnoreNaN(double,double)",3,2,20,60,3
"org.jfree.data.time.TimeSeries.minIgnoreNaN(double,double)",3,1,18,53,3
"org.jfree.data.time.TimeSeries.removeAgedItems(boolean)",1,5,27,165,5
"org.jfree.data.time.TimeSeries.removeAgedItems(long,boolean)",2,5,49,393,9
"org.jfree.data.time.TimeSeries.setDomainDescription(String)",1,1,14,33,1
"org.jfree.data.time.TimeSeries.setMaximumItemAge(long)",2,1,19,57,2
"org.jfree.data.time.TimeSeries.setMaximumItemCount(int)",2,2,21,108,3
"org.jfree.data.time.TimeSeries.setRangeDescription(String)",1,1,13,33,1
"org.jfree.data.time.TimeSeries.update(RegularTimePeriod,Number)",2,1,16,87,2
"org.jfree.data.time.TimeSeries.update(RegularTimePeriod,double)",1,1,12,19,1
"org.jfree.data.time.TimeSeries.update(int,Number)",1,4,27,300,6
"org.jfree.data.time.TimeSeries.updateBoundsForAddedItem(TimeSeriesDataItem)",1,2,15,96,2
"org.jfree.data.time.TimeSeries.updateBoundsForRemovedItem(TimeSeriesDataItem)",1,4,19,112,5
"org.jfree.data.time.TimeSeries.updateMinMaxYByIteration()",1,2,15,68,2
"org.jfree.data.time.TimeSeriesCollection.TimeSeriesCollection()",1,1,6,11,1
"org.jfree.data.time.TimeSeriesCollection.TimeSeriesCollection(TimeSeries)",1,1,9,11,1
"org.jfree.data.time.TimeSeriesCollection.TimeSeriesCollection(TimeSeries,TimeZone)",1,3,22,114,3
"org.jfree.data.time.TimeSeriesCollection.TimeSeriesCollection(TimeZone)",1,1,10,11,1
"org.jfree.data.time.TimeSeriesCollection.addSeries(TimeSeries)",1,1,13,55,1
"org.jfree.data.time.TimeSeriesCollection.clone()",1,1,15,59,1
"org.jfree.data.time.TimeSeriesCollection.equals(Object)",5,1,24,141,5
"org.jfree.data.time.TimeSeriesCollection.getDomainBounds(List,boolean)",1,4,36,274,4
"org.jfree.data.time.TimeSeriesCollection.getDomainBounds(boolean)",1,4,32,264,4
"org.jfree.data.time.TimeSeriesCollection.getDomainLowerBound(boolean)",1,2,17,59,2
"org.jfree.data.time.TimeSeriesCollection.getDomainOrder()",1,1,9,4,1
"org.jfree.data.time.TimeSeriesCollection.getDomainUpperBound(boolean)",1,2,17,59,2
"org.jfree.data.time.TimeSeriesCollection.getEndX(int,int)",1,1,14,60,1
"org.jfree.data.time.TimeSeriesCollection.getEndY(int,int)",1,1,12,18,1
"org.jfree.data.time.TimeSeriesCollection.getItemCount(int)",1,1,12,18,1
"org.jfree.data.time.TimeSeriesCollection.getRangeBounds(List,Range,boolean)",1,2,25,115,2
"org.jfree.data.time.TimeSeriesCollection.getRangeBounds(boolean)",1,2,19,91,2
"org.jfree.data.time.TimeSeriesCollection.getSeries()",1,1,8,11,1
"org.jfree.data.time.TimeSeriesCollection.getSeries(Comparable)",1,3,20,101,4
"org.jfree.data.time.TimeSeriesCollection.getSeries(int)",2,2,14,81,3
"org.jfree.data.time.TimeSeriesCollection.getSeriesCount()",1,1,9,15,1
"org.jfree.data.time.TimeSeriesCollection.getSeriesIndex(Comparable)",3,2,21,129,3
"org.jfree.data.time.TimeSeriesCollection.getSeriesKey(int)",1,1,13,15,1
"org.jfree.data.time.TimeSeriesCollection.getStartX(int,int)",1,1,14,60,1
"org.jfree.data.time.TimeSeriesCollection.getStartY(int,int)",1,1,12,18,1
"org.jfree.data.time.TimeSeriesCollection.getSurroundingItems(int,long)",3,2,26,213,4
"org.jfree.data.time.TimeSeriesCollection.getX(RegularTimePeriod)",1,4,20,165,4
"org.jfree.data.time.TimeSeriesCollection.getX(int,int)",1,1,14,51,1
"org.jfree.data.time.TimeSeriesCollection.getXPosition()",1,1,10,8,1
"org.jfree.data.time.TimeSeriesCollection.getXValue(int,int)",1,1,14,51,1
"org.jfree.data.time.TimeSeriesCollection.getY(int,int)",1,1,13,36,1
"org.jfree.data.time.TimeSeriesCollection.hashCode()",1,3,15,143,3
"org.jfree.data.time.TimeSeriesCollection.indexOf(TimeSeries)",1,1,14,31,1
"org.jfree.data.time.TimeSeriesCollection.removeAllSeries()",1,2,16,106,2
"org.jfree.data.time.TimeSeriesCollection.removeSeries(TimeSeries)",1,1,13,55,1
"org.jfree.data.time.TimeSeriesCollection.removeSeries(int)",1,2,11,36,2
"org.jfree.data.time.TimeSeriesCollection.setXPosition(TimePeriodAnchor)",1,1,12,38,1
"org.jfree.data.time.TimeSeriesCollection.vetoableChange(PropertyChangeEvent)",4,1,29,159,4
"org.jfree.data.time.TimeSeriesCollectionTest.createSeries()",1,1,17,114,1
"org.jfree.data.time.TimeSeriesCollectionTest.test1170825()",1,2,18,59,3
"org.jfree.data.time.TimeSeriesCollectionTest.testBug3445507()",1,1,22,271,1
"org.jfree.data.time.TimeSeriesCollectionTest.testCloning()",1,1,19,208,1
"org.jfree.data.time.TimeSeriesCollectionTest.testEquals()",1,1,31,283,1
"org.jfree.data.time.TimeSeriesCollectionTest.testFindDomainBounds()",1,1,38,512,1
"org.jfree.data.time.TimeSeriesCollectionTest.testGetRangeBounds()",1,1,46,850,1
"org.jfree.data.time.TimeSeriesCollectionTest.testGetRangeBounds2()",1,1,25,456,1
"org.jfree.data.time.TimeSeriesCollectionTest.testGetSurroundingItems()",1,1,59,"1,112",1
"org.jfree.data.time.TimeSeriesCollectionTest.testIndexOf()",1,1,22,273,1
"org.jfree.data.time.TimeSeriesCollectionTest.testRemoveSeries()",1,1,19,153,1
"org.jfree.data.time.TimeSeriesCollectionTest.testRemoveSeries_int()",1,1,21,205,1
"org.jfree.data.time.TimeSeriesCollectionTest.testSerialization()",1,1,10,26,1
"org.jfree.data.time.TimeSeriesDataItem.TimeSeriesDataItem(RegularTimePeriod,Number)",1,1,11,30,1
"org.jfree.data.time.TimeSeriesDataItem.TimeSeriesDataItem(RegularTimePeriod,double)",1,1,9,19,1
"org.jfree.data.time.TimeSeriesDataItem.clone()",1,2,17,36,2
"org.jfree.data.time.TimeSeriesDataItem.compareTo(Object)",1,2,29,60,2
"org.jfree.data.time.TimeSeriesDataItem.equals(Object)",5,1,24,143,5
"org.jfree.data.time.TimeSeriesDataItem.getPeriod()",1,1,8,8,1
"org.jfree.data.time.TimeSeriesDataItem.getValue()",1,1,10,8,1
"org.jfree.data.time.TimeSeriesDataItem.hashCode()",1,3,12,102,3
"org.jfree.data.time.TimeSeriesDataItem.setValue(Number)",1,1,10,11,1
"org.jfree.data.time.TimeSeriesDataItemTest.testEquals()",1,1,16,144,1
"org.jfree.data.time.TimeSeriesDataItemTest.testEqualsSelf()",1,1,11,39,1
"org.jfree.data.time.TimeSeriesDataItemTest.testSerialization()",1,1,11,44,1
"org.jfree.data.time.TimeSeriesTableModel.TimeSeriesTableModel()",1,1,6,11,1
"org.jfree.data.time.TimeSeriesTableModel.TimeSeriesTableModel(TimeSeries)",1,1,8,11,1
"org.jfree.data.time.TimeSeriesTableModel.TimeSeriesTableModel(TimeSeries,boolean)",1,1,11,35,1
"org.jfree.data.time.TimeSeriesTableModel.getColumnClass(int)",3,1,21,62,3
"org.jfree.data.time.TimeSeriesTableModel.getColumnCount()",1,1,10,8,1
"org.jfree.data.time.TimeSeriesTableModel.getColumnName(int)",3,1,21,64,3
"org.jfree.data.time.TimeSeriesTableModel.getRowCount()",1,1,9,15,1
"org.jfree.data.time.TimeSeriesTableModel.getValueAt(int,int)",6,4,37,212,6
"org.jfree.data.time.TimeSeriesTableModel.isCellEditable(int,int)",3,1,22,89,4
"org.jfree.data.time.TimeSeriesTableModel.seriesChanged(SeriesChangeEvent)",1,1,10,4,1
"org.jfree.data.time.TimeSeriesTableModel.setValueAt(Object,int,int)",1,6,31,213,6
"org.jfree.data.time.TimeSeriesTest.seriesChanged(SeriesChangeEvent)",1,1,10,11,1
"org.jfree.data.time.TimeSeriesTest.setUp()",1,1,21,494,1
"org.jfree.data.time.TimeSeriesTest.testAdd()",1,1,15,155,1
"org.jfree.data.time.TimeSeriesTest.testAddOrUpdate()",1,1,16,179,1
"org.jfree.data.time.TimeSeriesTest.testAddOrUpdate2()",1,1,14,155,1
"org.jfree.data.time.TimeSeriesTest.testAddOrUpdate3()",1,1,18,118,2
"org.jfree.data.time.TimeSeriesTest.testAddOrUpdate4()",1,1,22,285,1
"org.jfree.data.time.TimeSeriesTest.testAddValue()",1,1,9,68,1
"org.jfree.data.time.TimeSeriesTest.testAdd_TimeSeriesDataItem()",1,1,13,108,1
"org.jfree.data.time.TimeSeriesTest.testBug1075255()",1,2,17,114,2
"org.jfree.data.time.TimeSeriesTest.testBug1832432()",1,1,14,133,1
"org.jfree.data.time.TimeSeriesTest.testBug1864222()",1,1,17,160,2
"org.jfree.data.time.TimeSeriesTest.testBug3446965()",1,1,13,138,1
"org.jfree.data.time.TimeSeriesTest.testClear()",1,1,14,135,1
"org.jfree.data.time.TimeSeriesTest.testClone()",1,1,19,230,1
"org.jfree.data.time.TimeSeriesTest.testClone2()",1,1,17,193,1
"org.jfree.data.time.TimeSeriesTest.testCreateCopy1()",1,2,78,"1,150",2
"org.jfree.data.time.TimeSeriesTest.testCreateCopy2()",1,3,67,851,7
"org.jfree.data.time.TimeSeriesTest.testCreateCopy3()",1,1,21,262,1
"org.jfree.data.time.TimeSeriesTest.testDelete()",1,1,10,72,1
"org.jfree.data.time.TimeSeriesTest.testDelete2()",1,1,28,289,2
"org.jfree.data.time.TimeSeriesTest.testDelete3()",1,1,19,317,1
"org.jfree.data.time.TimeSeriesTest.testDelete_RegularTimePeriod()",1,1,16,178,1
"org.jfree.data.time.TimeSeriesTest.testEquals()",1,1,35,500,1
"org.jfree.data.time.TimeSeriesTest.testEquals2()",1,1,10,44,1
"org.jfree.data.time.TimeSeriesTest.testFindValueRange()",1,1,20,285,1
"org.jfree.data.time.TimeSeriesTest.testFindValueRange2()",1,1,38,792,1
"org.jfree.data.time.TimeSeriesTest.testFindValueRange3()",1,1,35,713,1
"org.jfree.data.time.TimeSeriesTest.testGetDataItem1()",1,1,35,230,4
"org.jfree.data.time.TimeSeriesTest.testGetDataItem2()",1,1,17,80,2
"org.jfree.data.time.TimeSeriesTest.testGetIndex()",1,1,18,379,1
"org.jfree.data.time.TimeSeriesTest.testGetMaxY()",1,1,20,316,1
"org.jfree.data.time.TimeSeriesTest.testGetMaxY2()",1,1,13,175,1
"org.jfree.data.time.TimeSeriesTest.testGetMinY()",1,1,20,325,1
"org.jfree.data.time.TimeSeriesTest.testGetMinY2()",1,1,13,175,1
"org.jfree.data.time.TimeSeriesTest.testGetValue()",1,1,10,74,1
"org.jfree.data.time.TimeSeriesTest.testHashCode()",1,1,26,440,1
"org.jfree.data.time.TimeSeriesTest.testRemoveAgedItems()",1,1,34,451,1
"org.jfree.data.time.TimeSeriesTest.testRemoveAgedItems2()",1,1,39,575,1
"org.jfree.data.time.TimeSeriesTest.testRemoveAgedItems3()",1,1,16,60,2
"org.jfree.data.time.TimeSeriesTest.testRemoveAgedItems4()",1,1,16,185,1
"org.jfree.data.time.TimeSeriesTest.testRemoveAgedItems5()",1,1,17,223,1
"org.jfree.data.time.TimeSeriesTest.testSerialization()",1,1,14,153,1
"org.jfree.data.time.TimeSeriesTest.testSetKey()",1,1,28,228,2
"org.jfree.data.time.TimeSeriesTest.testSetMaximumItemCount()",1,1,20,305,1
"org.jfree.data.time.TimeSeriesTest.testUpdate_RegularTimePeriod()",1,1,18,259,1
"org.jfree.data.time.TimeTableXYDataset.TimeTableXYDataset()",1,1,7,11,1
"org.jfree.data.time.TimeTableXYDataset.TimeTableXYDataset(TimeZone)",1,1,9,11,1
"org.jfree.data.time.TimeTableXYDataset.TimeTableXYDataset(TimeZone,Locale)",1,1,13,72,1
"org.jfree.data.time.TimeTableXYDataset.add(TimePeriod,Number,Comparable,boolean)",1,3,27,84,3
"org.jfree.data.time.TimeTableXYDataset.add(TimePeriod,double,Comparable)",1,1,13,28,1
"org.jfree.data.time.TimeTableXYDataset.clear()",1,2,12,39,2
"org.jfree.data.time.TimeTableXYDataset.clone()",1,1,14,59,1
"org.jfree.data.time.TimeTableXYDataset.equals(Object)",7,1,32,243,7
"org.jfree.data.time.TimeTableXYDataset.getDomainBounds(boolean)",3,2,24,190,4
"org.jfree.data.time.TimeTableXYDataset.getDomainIsPointsInTime()",1,1,16,13,1
"org.jfree.data.time.TimeTableXYDataset.getDomainLowerBound(boolean)",1,2,17,59,2
"org.jfree.data.time.TimeTableXYDataset.getDomainUpperBound(boolean)",1,2,17,59,2
"org.jfree.data.time.TimeTableXYDataset.getEndX(int,int)",1,1,14,28,1
"org.jfree.data.time.TimeTableXYDataset.getEndXValue(int,int)",1,1,14,41,1
"org.jfree.data.time.TimeTableXYDataset.getEndY(int,int)",1,1,12,18,1
"org.jfree.data.time.TimeTableXYDataset.getItemCount()",1,1,9,15,1
"org.jfree.data.time.TimeTableXYDataset.getItemCount(int)",1,1,13,10,1
"org.jfree.data.time.TimeTableXYDataset.getSeriesCount()",1,1,9,15,1
"org.jfree.data.time.TimeTableXYDataset.getSeriesKey(int)",1,1,11,19,1
"org.jfree.data.time.TimeTableXYDataset.getStartX(int,int)",1,1,14,28,1
"org.jfree.data.time.TimeTableXYDataset.getStartXValue(int,int)",1,1,14,41,1
"org.jfree.data.time.TimeTableXYDataset.getStartY(int,int)",1,1,12,18,1
"org.jfree.data.time.TimeTableXYDataset.getTimePeriod(int)",1,1,11,19,1
"org.jfree.data.time.TimeTableXYDataset.getX(int,int)",1,1,14,22,1
"org.jfree.data.time.TimeTableXYDataset.getXPosition()",1,1,11,8,1
"org.jfree.data.time.TimeTableXYDataset.getXValue(TimePeriod)",1,4,22,212,4
"org.jfree.data.time.TimeTableXYDataset.getXValue(int,int)",1,1,13,36,1
"org.jfree.data.time.TimeTableXYDataset.getY(int,int)",1,1,12,26,1
"org.jfree.data.time.TimeTableXYDataset.remove(TimePeriod,Comparable)",1,1,13,19,1
"org.jfree.data.time.TimeTableXYDataset.remove(TimePeriod,Comparable,boolean)",1,2,19,43,2
"org.jfree.data.time.TimeTableXYDataset.setDomainIsPointsInTime(boolean)",1,1,13,30,1
"org.jfree.data.time.TimeTableXYDataset.setXPosition(TimePeriodAnchor)",1,1,13,38,1
"org.jfree.data.time.TimeTableXYDatasetTest.testClear()",1,1,15,134,1
"org.jfree.data.time.TimeTableXYDatasetTest.testClone()",1,2,19,133,2
"org.jfree.data.time.TimeTableXYDatasetTest.testEquals()",1,1,22,258,1
"org.jfree.data.time.TimeTableXYDatasetTest.testGetTimePeriod()",1,1,13,159,1
"org.jfree.data.time.TimeTableXYDatasetTest.testSerialization()",1,1,11,53,1
"org.jfree.data.time.TimeTableXYDatasetTest.testStandard()",1,1,17,254,1
"org.jfree.data.time.Week.Week()",1,1,7,8,1
"org.jfree.data.time.Week.Week(Date)",1,1,14,15,1
"org.jfree.data.time.Week.Week(Date,TimeZone,Locale)",1,4,38,369,5
"org.jfree.data.time.Week.Week(int,Year)",2,1,15,105,3
"org.jfree.data.time.Week.Week(int,int)",2,1,15,103,3
"org.jfree.data.time.Week.compareTo(Object)",1,3,36,148,4
"org.jfree.data.time.Week.equals(Object)",5,1,27,134,5
"org.jfree.data.time.Week.evaluateAsYear(String)",1,1,19,31,2
"org.jfree.data.time.Week.findSeparator(String)",1,4,21,140,4
"org.jfree.data.time.Week.getFirstMillisecond()",1,1,14,11,1
"org.jfree.data.time.Week.getFirstMillisecond(Calendar)",1,1,24,175,1
"org.jfree.data.time.Week.getLastMillisecond()",1,1,14,11,1
"org.jfree.data.time.Week.getLastMillisecond(Calendar)",1,1,24,201,1
"org.jfree.data.time.Week.getSerialIndex()",1,1,9,31,1
"org.jfree.data.time.Week.getWeek()",1,1,8,11,1
"org.jfree.data.time.Week.getYear()",1,1,8,11,1
"org.jfree.data.time.Week.getYearValue()",1,1,8,11,1
"org.jfree.data.time.Week.hashCode()",1,1,16,69,1
"org.jfree.data.time.Week.next()",1,2,34,264,4
"org.jfree.data.time.Week.parseWeek(String)",7,5,53,430,7
"org.jfree.data.time.Week.peg(Calendar)",1,1,13,30,1
"org.jfree.data.time.Week.previous()",1,3,29,195,3
"org.jfree.data.time.Week.stringToWeek(String)",1,1,22,140,4
"org.jfree.data.time.Week.toString()",1,1,11,22,1
"org.jfree.data.time.WeekTest.setUp()",1,1,10,83,1
"org.jfree.data.time.WeekTest.testBug1448828()",1,1,17,95,1
"org.jfree.data.time.WeekTest.testBug1498805()",1,1,19,166,1
"org.jfree.data.time.WeekTest.testConstructor()",1,1,34,485,1
"org.jfree.data.time.WeekTest.testEquals()",1,1,18,172,1
"org.jfree.data.time.WeekTest.testGetEnd()",1,1,14,131,1
"org.jfree.data.time.WeekTest.testGetFirstMillisecond()",1,1,14,83,1
"org.jfree.data.time.WeekTest.testGetFirstMillisecondWithCalendar()",1,1,19,120,2
"org.jfree.data.time.WeekTest.testGetFirstMillisecondWithTimeZone()",1,1,26,158,2
"org.jfree.data.time.WeekTest.testGetLastMillisecond()",1,1,14,83,1
"org.jfree.data.time.WeekTest.testGetLastMillisecondWithCalendar()",1,1,19,120,2
"org.jfree.data.time.WeekTest.testGetLastMillisecondWithTimeZone()",1,1,26,158,2
"org.jfree.data.time.WeekTest.testGetSerialIndex()",1,1,10,58,1
"org.jfree.data.time.WeekTest.testGetStart()",1,1,14,127,1
"org.jfree.data.time.WeekTest.testHashcode()",1,1,12,79,1
"org.jfree.data.time.WeekTest.testNext()",1,1,12,93,1
"org.jfree.data.time.WeekTest.testNotCloneable()",1,1,8,24,1
"org.jfree.data.time.WeekTest.testSerialization()",1,1,9,31,1
"org.jfree.data.time.WeekTest.testW1Y1900Next()",1,1,8,26,1
"org.jfree.data.time.WeekTest.testW1Y1900Previous()",1,1,8,19,1
"org.jfree.data.time.WeekTest.testW52Y9999Next()",1,1,8,19,1
"org.jfree.data.time.WeekTest.testW52Y9999Previous()",1,1,8,26,1
"org.jfree.data.time.WeekTest.testWeek12005()",1,1,38,254,1
"org.jfree.data.time.WeekTest.testWeek532005()",1,1,36,276,1
"org.jfree.data.time.Year.Year()",1,1,6,8,1
"org.jfree.data.time.Year.Year(Date)",1,1,11,15,1
"org.jfree.data.time.Year.Year(Date,TimeZone,Locale)",1,1,16,55,1
"org.jfree.data.time.Year.Year(int)",2,1,13,87,3
"org.jfree.data.time.Year.compareTo(Object)",1,2,33,93,3
"org.jfree.data.time.Year.equals(Object)",3,1,22,79,3
"org.jfree.data.time.Year.getFirstMillisecond()",1,1,14,11,1
"org.jfree.data.time.Year.getFirstMillisecond(Calendar)",1,1,17,66,1
"org.jfree.data.time.Year.getLastMillisecond()",1,1,14,11,1
"org.jfree.data.time.Year.getLastMillisecond(Calendar)",1,1,17,70,1
"org.jfree.data.time.Year.getSerialIndex()",1,1,11,11,1
"org.jfree.data.time.Year.getYear()",1,1,8,11,1
"org.jfree.data.time.Year.hashCode()",1,1,16,51,1
"org.jfree.data.time.Year.next()",2,1,15,53,2
"org.jfree.data.time.Year.parseYear(String)",1,1,27,76,3
"org.jfree.data.time.Year.peg(Calendar)",1,1,13,30,1
"org.jfree.data.time.Year.previous()",2,1,15,53,2
"org.jfree.data.time.Year.toString()",1,1,9,11,1
"org.jfree.data.time.YearTest.test1900Next()",1,1,9,33,1
"org.jfree.data.time.YearTest.test9999Next()",1,1,9,24,1
"org.jfree.data.time.YearTest.test9999Previous()",1,1,10,33,1
"org.jfree.data.time.YearTest.testDateConstructor1()",1,1,17,158,1
"org.jfree.data.time.YearTest.testDateConstructor2()",1,1,15,144,1
"org.jfree.data.time.YearTest.testEquals()",1,1,13,79,1
"org.jfree.data.time.YearTest.testEqualsSelf()",1,1,10,18,1
"org.jfree.data.time.YearTest.testGetEnd()",1,1,14,124,1
"org.jfree.data.time.YearTest.testGetFirstMillisecond()",1,1,15,83,1
"org.jfree.data.time.YearTest.testGetFirstMillisecondWithCalendar()",1,1,19,114,2
"org.jfree.data.time.YearTest.testGetFirstMillisecondWithTimeZone()",1,1,19,111,2
"org.jfree.data.time.YearTest.testGetLastMillisecond()",1,1,15,77,1
"org.jfree.data.time.YearTest.testGetLastMillisecondWithCalendar()",1,1,19,114,2
"org.jfree.data.time.YearTest.testGetLastMillisecondWithTimeZone()",1,1,19,111,2
"org.jfree.data.time.YearTest.testGetSerialIndex()",1,1,8,24,1
"org.jfree.data.time.YearTest.testGetStart()",1,1,14,121,1
"org.jfree.data.time.YearTest.testHashcode()",1,1,12,70,1
"org.jfree.data.time.YearTest.testMinuss9999Previous()",1,1,10,28,1
"org.jfree.data.time.YearTest.testNext()",1,1,11,58,1
"org.jfree.data.time.YearTest.testNotCloneable()",1,1,8,19,1
"org.jfree.data.time.YearTest.testParseYear()",1,1,31,159,4
"org.jfree.data.time.YearTest.testSerialization()",1,1,9,26,1
"org.jfree.data.time.ohlc.OHLC.OHLC(double,double,double,double)",1,1,14,58,1
"org.jfree.data.time.ohlc.OHLC.equals(Object)",7,1,30,215,7
"org.jfree.data.time.ohlc.OHLC.getClose()",1,1,8,11,1
"org.jfree.data.time.ohlc.OHLC.getHigh()",1,1,8,11,1
"org.jfree.data.time.ohlc.OHLC.getLow()",1,1,8,11,1
"org.jfree.data.time.ohlc.OHLC.getOpen()",1,1,8,11,1
"org.jfree.data.time.ohlc.OHLC.hashCode()",1,1,14,89,1
"org.jfree.data.time.ohlc.OHLCItem.OHLCItem(RegularTimePeriod,double,double,double,double)",1,1,13,43,1
"org.jfree.data.time.ohlc.OHLCItem.getCloseValue()",2,2,14,44,2
"org.jfree.data.time.ohlc.OHLCItem.getHighValue()",2,2,14,44,2
"org.jfree.data.time.ohlc.OHLCItem.getLowValue()",2,2,14,44,2
"org.jfree.data.time.ohlc.OHLCItem.getOpenValue()",2,2,14,44,2
"org.jfree.data.time.ohlc.OHLCItem.getPeriod()",1,1,8,4,1
"org.jfree.data.time.ohlc.OHLCItem.getYValue()",1,1,8,8,1
"org.jfree.data.time.ohlc.OHLCItemTest.testCloning()",1,1,11,106,1
"org.jfree.data.time.ohlc.OHLCItemTest.testConstructor1()",1,1,12,138,1
"org.jfree.data.time.ohlc.OHLCItemTest.testEquals()",1,1,35,600,1
"org.jfree.data.time.ohlc.OHLCItemTest.testHashcode()",1,1,12,118,1
"org.jfree.data.time.ohlc.OHLCItemTest.testSerialization()",1,1,9,50,1
"org.jfree.data.time.ohlc.OHLCSeries.OHLCSeries(Comparable)",1,1,10,15,1
"org.jfree.data.time.ohlc.OHLCSeries.add(OHLCItem)",1,1,13,55,1
"org.jfree.data.time.ohlc.OHLCSeries.add(RegularTimePeriod,double,double,double,double)",3,2,20,153,3
"org.jfree.data.time.ohlc.OHLCSeries.getDataItem(int)",1,1,11,15,1
"org.jfree.data.time.ohlc.OHLCSeries.getPeriod(int)",1,1,11,19,1
"org.jfree.data.time.ohlc.OHLCSeries.remove(int)",1,1,13,15,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.OHLCSeriesCollection()",1,1,6,8,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.addSeries(OHLCSeries)",1,1,12,43,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.clone()",1,1,14,36,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.equals(Object)",4,1,21,125,4
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getClose(int,int)",1,1,12,22,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getCloseValue(int,int)",1,1,14,51,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getHigh(int,int)",1,1,12,22,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getHighValue(int,int)",1,1,14,51,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getItemCount(int)",1,1,15,18,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getLow(int,int)",1,1,12,22,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getLowValue(int,int)",1,1,14,51,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getOpen(int,int)",1,1,12,22,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getOpenValue(int,int)",1,1,14,51,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getSeries(int)",2,2,16,72,3
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getSeriesCount()",1,1,9,15,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getSeriesKey(int)",1,1,16,15,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getVolume(int,int)",1,1,13,10,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getVolumeValue(int,int)",1,1,13,13,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getX(RegularTimePeriod)",1,4,20,137,4
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getX(int,int)",1,1,12,22,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getXPosition()",1,1,11,8,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getXValue(int,int)",1,1,15,62,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.getY(int,int)",1,1,14,51,1
"org.jfree.data.time.ohlc.OHLCSeriesCollection.hashCode()",1,2,14,114,2
"org.jfree.data.time.ohlc.OHLCSeriesCollection.removeAllSeries()",2,2,20,118,3
"org.jfree.data.time.ohlc.OHLCSeriesCollection.removeSeries(OHLCSeries)",1,2,20,66,2
"org.jfree.data.time.ohlc.OHLCSeriesCollection.removeSeries(int)",1,2,14,36,2
"org.jfree.data.time.ohlc.OHLCSeriesCollection.setXPosition(TimePeriodAnchor)",1,1,14,38,1
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.datasetChanged(DatasetChangeEvent)",1,1,9,11,1
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.test1170825()",1,2,19,59,3
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testCloning()",1,1,17,183,1
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testEquals()",1,1,27,316,1
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testHashcode()",1,1,18,191,1
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testRemoveAllSeries()",1,1,20,152,1
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testRemoveSeries()",1,1,21,197,1
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testRemoveSeries_int()",1,1,21,205,1
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest.testSerialization()",1,1,13,84,1
"org.jfree.data.time.ohlc.OHLCSeriesTest.seriesChanged(SeriesChangeEvent)",1,1,9,11,1
"org.jfree.data.time.ohlc.OHLCSeriesTest.testAdditionOfDuplicatePeriod()",1,1,16,109,2
"org.jfree.data.time.ohlc.OHLCSeriesTest.testClear()",1,1,16,141,1
"org.jfree.data.time.ohlc.OHLCSeriesTest.testCloning()",1,1,12,123,1
"org.jfree.data.time.ohlc.OHLCSeriesTest.testEquals()",1,1,29,366,1
"org.jfree.data.time.ohlc.OHLCSeriesTest.testHashcode()",1,1,14,148,1
"org.jfree.data.time.ohlc.OHLCSeriesTest.testIndexOf()",1,1,13,191,1
"org.jfree.data.time.ohlc.OHLCSeriesTest.testRemove()",1,1,15,252,1
"org.jfree.data.time.ohlc.OHLCSeriesTest.testRemove_int()",1,1,14,235,1
"org.jfree.data.time.ohlc.OHLCSeriesTest.testSerialization()",1,1,10,64,1
"org.jfree.data.time.ohlc.OHLCSeriesTest.testSetMaximumItemCount()",1,1,15,233,1
"org.jfree.data.time.ohlc.OHLCSeriesTest.testSetMaximumItemCount2()",1,1,13,188,1
"org.jfree.data.time.ohlc.OHLCTest.testCloning()",1,1,8,33,1
"org.jfree.data.time.ohlc.OHLCTest.testEquals()",1,1,25,388,1
"org.jfree.data.time.ohlc.OHLCTest.testHashcode()",1,1,12,100,1
"org.jfree.data.time.ohlc.OHLCTest.testSerialization()",1,1,9,41,1
"org.jfree.data.xml.CategoryDatasetHandler.CategoryDatasetHandler()",1,1,6,8,1
"org.jfree.data.xml.CategoryDatasetHandler.addItem(Comparable,Comparable,Number)",1,1,10,24,1
"org.jfree.data.xml.CategoryDatasetHandler.endElement(String,String,String)",1,2,18,46,2
"org.jfree.data.xml.CategoryDatasetHandler.getDataset()",1,1,8,8,1
"org.jfree.data.xml.CategoryDatasetHandler.startElement(String,String,String,Attributes)",4,4,31,206,4
"org.jfree.data.xml.CategorySeriesHandler.CategorySeriesHandler(RootHandler)",1,1,9,18,1
"org.jfree.data.xml.CategorySeriesHandler.addItem(Comparable,Number)",1,1,9,19,1
"org.jfree.data.xml.CategorySeriesHandler.endElement(String,String,String)",1,3,22,129,3
"org.jfree.data.xml.CategorySeriesHandler.setSeriesKey(Comparable)",1,1,8,11,1
"org.jfree.data.xml.CategorySeriesHandler.startElement(String,String,String,Attributes)",3,3,31,201,3
"org.jfree.data.xml.DatasetReader.getSAXParserFactory()",2,2,22,133,5
"org.jfree.data.xml.DatasetReader.readCategoryDatasetFromXML(File)",1,1,14,24,1
"org.jfree.data.xml.DatasetReader.readCategoryDatasetFromXML(InputStream)",1,1,26,106,3
"org.jfree.data.xml.DatasetReader.readPieDatasetFromXML(File)",1,1,14,24,1
"org.jfree.data.xml.DatasetReader.readPieDatasetFromXML(InputStream)",1,1,26,106,3
"org.jfree.data.xml.DatasetReader.setSAXParserFactory(SAXParserFactory)",1,1,11,22,1
"org.jfree.data.xml.ItemHandler.ItemHandler(RootHandler,DefaultHandler)",1,1,12,41,1
"org.jfree.data.xml.ItemHandler.endElement(String,String,String)",1,3,22,125,3
"org.jfree.data.xml.ItemHandler.getKey()",1,1,8,8,1
"org.jfree.data.xml.ItemHandler.getValue()",1,1,8,8,1
"org.jfree.data.xml.ItemHandler.setKey(Comparable)",1,1,8,11,1
"org.jfree.data.xml.ItemHandler.setValue(Number)",1,1,8,11,1
"org.jfree.data.xml.ItemHandler.startElement(String,String,String,Attributes)",3,3,29,138,3
"org.jfree.data.xml.KeyHandler.KeyHandler(RootHandler,ItemHandler)",1,1,12,30,1
"org.jfree.data.xml.KeyHandler.characters(char[],int,int)",1,2,13,64,2
"org.jfree.data.xml.KeyHandler.clearCurrentText()",1,1,6,25,1
"org.jfree.data.xml.KeyHandler.endElement(String,String,String)",2,2,24,118,2
"org.jfree.data.xml.KeyHandler.getCurrentText()",1,1,8,11,1
"org.jfree.data.xml.KeyHandler.startElement(String,String,String,Attributes)",2,2,22,51,2
"org.jfree.data.xml.PieDatasetHandler.PieDatasetHandler()",1,1,6,8,1
"org.jfree.data.xml.PieDatasetHandler.addItem(Comparable,Number)",1,1,9,19,1
"org.jfree.data.xml.PieDatasetHandler.endElement(String,String,String)",1,2,18,46,2
"org.jfree.data.xml.PieDatasetHandler.getDataset()",1,1,8,8,1
"org.jfree.data.xml.PieDatasetHandler.startElement(String,String,String,Attributes)",1,4,28,176,4
"org.jfree.data.xml.RootHandler.RootHandler()",1,1,6,8,1
"org.jfree.data.xml.RootHandler.characters(char[],int,int)",1,2,17,60,2
"org.jfree.data.xml.RootHandler.getCurrentHandler()",1,3,17,88,4
"org.jfree.data.xml.RootHandler.getSubHandlers()",1,1,8,8,1
"org.jfree.data.xml.RootHandler.popSubHandler()",1,1,8,11,1
"org.jfree.data.xml.RootHandler.pushSubHandler(DefaultHandler)",1,1,8,15,1
"org.jfree.data.xml.ValueHandler.ValueHandler(RootHandler,ItemHandler)",1,1,11,30,1
"org.jfree.data.xml.ValueHandler.characters(char[],int,int)",1,2,13,64,2
"org.jfree.data.xml.ValueHandler.clearCurrentText()",1,1,6,25,1
"org.jfree.data.xml.ValueHandler.endElement(String,String,String)",2,2,31,157,4
"org.jfree.data.xml.ValueHandler.getCurrentText()",1,1,8,11,1
"org.jfree.data.xml.ValueHandler.startElement(String,String,String,Attributes)",2,2,23,51,2
"org.jfree.data.xy.AbstractIntervalXYDataset.getEndXValue(int,int)",1,2,18,68,2
"org.jfree.data.xy.AbstractIntervalXYDataset.getEndYValue(int,int)",1,2,18,68,2
"org.jfree.data.xy.AbstractIntervalXYDataset.getStartXValue(int,int)",1,2,18,68,2
"org.jfree.data.xy.AbstractIntervalXYDataset.getStartYValue(int,int)",1,2,18,68,2
"org.jfree.data.xy.AbstractXYDataset.getDomainOrder()",1,1,9,4,1
"org.jfree.data.xy.AbstractXYDataset.getXValue(int,int)",1,2,17,68,2
"org.jfree.data.xy.AbstractXYDataset.getYValue(int,int)",1,2,17,68,2
"org.jfree.data.xy.AbstractXYZDataset.getZValue(int,int)",1,2,17,68,2
"org.jfree.data.xy.CategoryTableXYDataset.CategoryTableXYDataset()",1,1,8,33,1
"org.jfree.data.xy.CategoryTableXYDataset.add(Number,Number,String,boolean)",1,2,15,43,2
"org.jfree.data.xy.CategoryTableXYDataset.add(double,double,String)",1,1,11,34,1
"org.jfree.data.xy.CategoryTableXYDataset.clear()",1,1,10,15,1
"org.jfree.data.xy.CategoryTableXYDataset.clone()",1,1,20,112,1
"org.jfree.data.xy.CategoryTableXYDataset.equals(Object)",4,1,21,118,4
"org.jfree.data.xy.CategoryTableXYDataset.getDomainBounds(boolean)",2,2,17,46,2
"org.jfree.data.xy.CategoryTableXYDataset.getDomainLowerBound(boolean)",1,1,12,24,1
"org.jfree.data.xy.CategoryTableXYDataset.getDomainUpperBound(boolean)",1,1,12,24,1
"org.jfree.data.xy.CategoryTableXYDataset.getEndX(int,int)",1,1,12,26,1
"org.jfree.data.xy.CategoryTableXYDataset.getEndY(int,int)",1,1,12,18,1
"org.jfree.data.xy.CategoryTableXYDataset.getIntervalPositionFactor()",1,1,8,15,1
"org.jfree.data.xy.CategoryTableXYDataset.getIntervalWidth()",1,1,8,15,1
"org.jfree.data.xy.CategoryTableXYDataset.getItemCount()",1,1,9,15,1
"org.jfree.data.xy.CategoryTableXYDataset.getItemCount(int)",1,1,13,10,1
"org.jfree.data.xy.CategoryTableXYDataset.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.CategoryTableXYDataset.getSeriesKey(int)",1,1,11,19,1
"org.jfree.data.xy.CategoryTableXYDataset.getStartX(int,int)",1,1,12,26,1
"org.jfree.data.xy.CategoryTableXYDataset.getStartY(int,int)",1,1,12,18,1
"org.jfree.data.xy.CategoryTableXYDataset.getX(int,int)",1,1,12,22,1
"org.jfree.data.xy.CategoryTableXYDataset.getY(int,int)",1,1,12,26,1
"org.jfree.data.xy.CategoryTableXYDataset.isAutoWidth()",1,1,8,15,1
"org.jfree.data.xy.CategoryTableXYDataset.remove(Number,String,boolean)",1,2,13,38,2
"org.jfree.data.xy.CategoryTableXYDataset.remove(double,String)",1,1,9,24,1
"org.jfree.data.xy.CategoryTableXYDataset.setAutoWidth(boolean)",1,1,10,24,1
"org.jfree.data.xy.CategoryTableXYDataset.setIntervalPositionFactor(double)",1,1,12,24,1
"org.jfree.data.xy.CategoryTableXYDataset.setIntervalWidth(double)",1,1,10,24,1
"org.jfree.data.xy.CategoryTableXYDatasetTest.testAddSeries()",1,1,34,766,1
"org.jfree.data.xy.CategoryTableXYDatasetTest.testCloning()",1,1,21,280,1
"org.jfree.data.xy.CategoryTableXYDatasetTest.testCloning2()",1,1,23,301,1
"org.jfree.data.xy.CategoryTableXYDatasetTest.testEquals()",1,1,18,200,1
"org.jfree.data.xy.CategoryTableXYDatasetTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.CategoryTableXYDatasetTest.testSerialization()",1,1,12,66,1
"org.jfree.data.xy.DefaultHighLowDataset.DefaultHighLowDataset(Comparable,Date[],double[],double[],double[],double[],double[])",1,1,28,166,1
"org.jfree.data.xy.DefaultHighLowDataset.createNumberArray(double[])",1,1,15,83,2
"org.jfree.data.xy.DefaultHighLowDataset.equals(Object)",10,1,39,384,10
"org.jfree.data.xy.DefaultHighLowDataset.getClose(int,int)",1,1,14,23,1
"org.jfree.data.xy.DefaultHighLowDataset.getCloseValue(int,int)",1,2,20,76,2
"org.jfree.data.xy.DefaultHighLowDataset.getHigh(int,int)",1,1,14,23,1
"org.jfree.data.xy.DefaultHighLowDataset.getHighValue(int,int)",1,2,20,76,2
"org.jfree.data.xy.DefaultHighLowDataset.getItemCount(int)",1,1,11,18,1
"org.jfree.data.xy.DefaultHighLowDataset.getLow(int,int)",1,1,14,23,1
"org.jfree.data.xy.DefaultHighLowDataset.getLowValue(int,int)",1,2,20,76,2
"org.jfree.data.xy.DefaultHighLowDataset.getOpen(int,int)",1,1,14,23,1
"org.jfree.data.xy.DefaultHighLowDataset.getOpenValue(int,int)",1,2,20,76,2
"org.jfree.data.xy.DefaultHighLowDataset.getSeriesCount()",1,1,11,8,1
"org.jfree.data.xy.DefaultHighLowDataset.getSeriesKey(int)",1,1,12,11,1
"org.jfree.data.xy.DefaultHighLowDataset.getVolume(int,int)",1,1,14,23,1
"org.jfree.data.xy.DefaultHighLowDataset.getVolumeValue(int,int)",1,2,20,76,2
"org.jfree.data.xy.DefaultHighLowDataset.getX(int,int)",1,1,18,45,1
"org.jfree.data.xy.DefaultHighLowDataset.getXDate(int,int)",1,1,15,23,1
"org.jfree.data.xy.DefaultHighLowDataset.getY(int,int)",1,1,17,28,1
"org.jfree.data.xy.DefaultHighLowDatasetTest.testCloning()",1,1,14,168,1
"org.jfree.data.xy.DefaultHighLowDatasetTest.testEquals()",1,1,78,"1,682",1
"org.jfree.data.xy.DefaultHighLowDatasetTest.testPublicCloneable()",1,1,10,76,1
"org.jfree.data.xy.DefaultHighLowDatasetTest.testSerialization()",1,1,13,105,1
"org.jfree.data.xy.DefaultIntervalXYDataset.DefaultIntervalXYDataset()",1,1,8,16,1
"org.jfree.data.xy.DefaultIntervalXYDataset.addSeries(Comparable,double[][])",5,2,41,477,10
"org.jfree.data.xy.DefaultIntervalXYDataset.clone()",1,2,39,749,2
"org.jfree.data.xy.DefaultIntervalXYDataset.equals(Object)",11,2,63,695,11
"org.jfree.data.xy.DefaultIntervalXYDataset.getEndX(int,int)",1,1,21,28,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getEndXValue(int,int)",1,1,22,55,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getEndY(int,int)",1,1,21,28,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getEndYValue(int,int)",1,1,22,55,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getItemCount(int)",2,2,19,101,3
"org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getSeriesKey(int)",2,2,18,72,3
"org.jfree.data.xy.DefaultIntervalXYDataset.getStartX(int,int)",1,1,21,28,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getStartXValue(int,int)",1,1,22,55,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getStartY(int,int)",1,1,21,28,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getStartYValue(int,int)",1,1,22,55,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getX(int,int)",1,1,21,28,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getXValue(int,int)",1,1,22,55,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getY(int,int)",1,1,21,28,1
"org.jfree.data.xy.DefaultIntervalXYDataset.getYValue(int,int)",1,1,22,55,1
"org.jfree.data.xy.DefaultIntervalXYDataset.hashCode()",1,1,12,58,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.createSampleDataset1()",1,1,27,597,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testAddSeries()",1,1,28,325,2
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testCloning()",1,1,17,144,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testCloning2()",1,1,23,412,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testEquals()",1,1,14,76,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetEndXValue()",1,1,13,180,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetEndYValue()",1,1,13,180,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetItemCount()",1,1,18,98,2
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetSeriesCount()",1,1,10,41,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetSeriesKey()",1,1,26,155,3
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetStartXValue()",1,1,13,180,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetStartYValue()",1,1,13,180,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetXValue()",1,1,13,180,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testGetYValue()",1,1,13,180,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testIndexOf()",1,1,11,95,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.DefaultIntervalXYDatasetTest.testSerialization()",1,1,14,48,1
"org.jfree.data.xy.DefaultOHLCDataset.DefaultOHLCDataset(Comparable,OHLCDataItem[])",1,1,10,18,1
"org.jfree.data.xy.DefaultOHLCDataset.clone()",1,1,14,81,1
"org.jfree.data.xy.DefaultOHLCDataset.equals(Object)",5,1,24,145,5
"org.jfree.data.xy.DefaultOHLCDataset.getClose(int,int)",1,1,12,22,1
"org.jfree.data.xy.DefaultOHLCDataset.getCloseValue(int,int)",1,2,18,68,2
"org.jfree.data.xy.DefaultOHLCDataset.getHigh(int,int)",1,1,12,22,1
"org.jfree.data.xy.DefaultOHLCDataset.getHighValue(int,int)",1,2,18,68,2
"org.jfree.data.xy.DefaultOHLCDataset.getItemCount(int)",1,1,11,18,1
"org.jfree.data.xy.DefaultOHLCDataset.getLow(int,int)",1,1,12,22,1
"org.jfree.data.xy.DefaultOHLCDataset.getLowValue(int,int)",1,2,18,68,2
"org.jfree.data.xy.DefaultOHLCDataset.getOpen(int,int)",1,1,12,22,1
"org.jfree.data.xy.DefaultOHLCDataset.getOpenValue(int,int)",1,2,18,68,2
"org.jfree.data.xy.DefaultOHLCDataset.getSeriesCount()",1,1,9,8,1
"org.jfree.data.xy.DefaultOHLCDataset.getSeriesKey(int)",1,1,11,11,1
"org.jfree.data.xy.DefaultOHLCDataset.getVolume(int,int)",1,1,12,22,1
"org.jfree.data.xy.DefaultOHLCDataset.getVolumeValue(int,int)",1,2,18,68,2
"org.jfree.data.xy.DefaultOHLCDataset.getX(int,int)",1,1,12,31,1
"org.jfree.data.xy.DefaultOHLCDataset.getXDate(int,int)",1,1,11,22,1
"org.jfree.data.xy.DefaultOHLCDataset.getY(int,int)",1,1,12,18,1
"org.jfree.data.xy.DefaultOHLCDataset.sortDataByDate()",1,1,6,11,1
"org.jfree.data.xy.DefaultOHLCDatasetTest.testCloning()",1,1,12,87,1
"org.jfree.data.xy.DefaultOHLCDatasetTest.testCloning2()",1,1,19,230,1
"org.jfree.data.xy.DefaultOHLCDatasetTest.testDataRange()",1,1,14,247,1
"org.jfree.data.xy.DefaultOHLCDatasetTest.testEquals()",1,1,22,277,1
"org.jfree.data.xy.DefaultOHLCDatasetTest.testPublicCloneable()",1,1,9,26,1
"org.jfree.data.xy.DefaultOHLCDatasetTest.testSerialization()",1,1,10,34,1
"org.jfree.data.xy.DefaultTableXYDataset.DefaultTableXYDataset()",1,1,6,8,1
"org.jfree.data.xy.DefaultTableXYDataset.DefaultTableXYDataset(boolean)",1,1,14,65,1
"org.jfree.data.xy.DefaultTableXYDataset.addSeries(XYSeries)",2,1,20,89,2
"org.jfree.data.xy.DefaultTableXYDataset.canPrune(Number)",3,2,17,124,3
"org.jfree.data.xy.DefaultTableXYDataset.clone()",1,2,26,240,2
"org.jfree.data.xy.DefaultTableXYDataset.equals(Object)",7,1,30,230,7
"org.jfree.data.xy.DefaultTableXYDataset.getDomainBounds(boolean)",2,2,17,46,2
"org.jfree.data.xy.DefaultTableXYDataset.getDomainLowerBound(boolean)",1,1,12,24,1
"org.jfree.data.xy.DefaultTableXYDataset.getDomainUpperBound(boolean)",1,1,12,24,1
"org.jfree.data.xy.DefaultTableXYDataset.getEndX(int,int)",1,1,12,26,1
"org.jfree.data.xy.DefaultTableXYDataset.getEndY(int,int)",1,1,12,18,1
"org.jfree.data.xy.DefaultTableXYDataset.getIntervalPositionFactor()",1,1,8,15,1
"org.jfree.data.xy.DefaultTableXYDataset.getIntervalWidth()",1,1,8,15,1
"org.jfree.data.xy.DefaultTableXYDataset.getItemCount()",2,2,14,48,2
"org.jfree.data.xy.DefaultTableXYDataset.getItemCount(int)",1,1,12,18,1
"org.jfree.data.xy.DefaultTableXYDataset.getSeries(int)",2,2,13,72,3
"org.jfree.data.xy.DefaultTableXYDataset.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.DefaultTableXYDataset.getSeriesKey(int)",1,1,12,15,1
"org.jfree.data.xy.DefaultTableXYDataset.getStartX(int,int)",1,1,12,26,1
"org.jfree.data.xy.DefaultTableXYDataset.getStartY(int,int)",1,1,12,18,1
"org.jfree.data.xy.DefaultTableXYDataset.getX(int,int)",1,1,13,36,1
"org.jfree.data.xy.DefaultTableXYDataset.getY(int,int)",1,1,14,36,1
"org.jfree.data.xy.DefaultTableXYDataset.hashCode()",1,3,15,187,5
"org.jfree.data.xy.DefaultTableXYDataset.isAutoPrune()",1,1,9,11,1
"org.jfree.data.xy.DefaultTableXYDataset.isAutoWidth()",1,1,9,15,1
"org.jfree.data.xy.DefaultTableXYDataset.prune()",1,3,13,66,3
"org.jfree.data.xy.DefaultTableXYDataset.removeAllSeries()",1,2,16,108,2
"org.jfree.data.xy.DefaultTableXYDataset.removeAllValuesForX(Number)",1,2,17,165,2
"org.jfree.data.xy.DefaultTableXYDataset.removeSeries(XYSeries)",1,3,17,97,3
"org.jfree.data.xy.DefaultTableXYDataset.removeSeries(int)",2,4,23,178,5
"org.jfree.data.xy.DefaultTableXYDataset.seriesChanged(SeriesChangeEvent)",1,2,14,19,2
"org.jfree.data.xy.DefaultTableXYDataset.setAutoWidth(boolean)",1,1,10,24,1
"org.jfree.data.xy.DefaultTableXYDataset.setIntervalPositionFactor(double)",1,1,12,24,1
"org.jfree.data.xy.DefaultTableXYDataset.setIntervalWidth(double)",1,1,10,24,1
"org.jfree.data.xy.DefaultTableXYDataset.updateXPoints()",1,3,13,114,3
"org.jfree.data.xy.DefaultTableXYDataset.updateXPoints(XYSeries)",1,7,34,439,7
"org.jfree.data.xy.DefaultTableXYDatasetTest.testAddSeries()",1,1,38,843,1
"org.jfree.data.xy.DefaultTableXYDatasetTest.testCloning()",1,1,17,199,1
"org.jfree.data.xy.DefaultTableXYDatasetTest.testEquals()",1,1,22,254,1
"org.jfree.data.xy.DefaultTableXYDatasetTest.testGetSeries()",1,1,26,171,3
"org.jfree.data.xy.DefaultTableXYDatasetTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.DefaultTableXYDatasetTest.testSerialization()",1,1,14,94,1
"org.jfree.data.xy.DefaultWindDataset.DefaultWindDataset()",1,1,9,16,1
"org.jfree.data.xy.DefaultWindDataset.DefaultWindDataset(List,Object[][][])",2,6,62,492,7
"org.jfree.data.xy.DefaultWindDataset.DefaultWindDataset(Object[][][])",1,1,10,13,1
"org.jfree.data.xy.DefaultWindDataset.DefaultWindDataset(String[],Object[][][])",1,1,12,15,1
"org.jfree.data.xy.DefaultWindDataset.equals(Object)",5,1,31,143,5
"org.jfree.data.xy.DefaultWindDataset.getItemCount(int)",2,2,16,97,3
"org.jfree.data.xy.DefaultWindDataset.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.DefaultWindDataset.getSeriesKey(int)",2,2,15,81,3
"org.jfree.data.xy.DefaultWindDataset.getWindDirection(int,int)",1,1,15,44,1
"org.jfree.data.xy.DefaultWindDataset.getWindForce(int,int)",1,1,15,44,1
"org.jfree.data.xy.DefaultWindDataset.getX(int,int)",1,1,16,44,1
"org.jfree.data.xy.DefaultWindDataset.getY(int,int)",1,1,14,23,1
"org.jfree.data.xy.DefaultWindDataset.seriesNameListFromDataArray(Object[][])",1,2,17,100,2
"org.jfree.data.xy.DefaultWindDatasetTest.createItem(RegularTimePeriod,int,int)",1,1,13,35,1
"org.jfree.data.xy.DefaultWindDatasetTest.createSampleDataset1()",1,1,18,223,1
"org.jfree.data.xy.DefaultWindDatasetTest.testCloning()",1,1,17,144,1
"org.jfree.data.xy.DefaultWindDatasetTest.testEquals()",1,1,14,76,1
"org.jfree.data.xy.DefaultWindDatasetTest.testGetSeriesKey()",1,1,26,155,3
"org.jfree.data.xy.DefaultWindDatasetTest.testIndexOf()",1,1,11,95,1
"org.jfree.data.xy.DefaultWindDatasetTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.DefaultWindDatasetTest.testSerialization()",1,1,13,48,1
"org.jfree.data.xy.DefaultXYDataset.DefaultXYDataset()",1,1,8,16,1
"org.jfree.data.xy.DefaultXYDataset.addSeries(Comparable,double[][])",5,2,37,335,6
"org.jfree.data.xy.DefaultXYDataset.clone()",1,2,26,351,2
"org.jfree.data.xy.DefaultXYDataset.equals(Object)",7,2,42,376,7
"org.jfree.data.xy.DefaultXYDataset.getDomainOrder()",1,1,11,4,1
"org.jfree.data.xy.DefaultXYDataset.getItemCount(int)",2,2,19,101,3
"org.jfree.data.xy.DefaultXYDataset.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.DefaultXYDataset.getSeriesKey(int)",2,2,18,72,3
"org.jfree.data.xy.DefaultXYDataset.getX(int,int)",1,1,21,28,1
"org.jfree.data.xy.DefaultXYDataset.getXValue(int,int)",1,1,22,55,1
"org.jfree.data.xy.DefaultXYDataset.getY(int,int)",1,1,21,28,1
"org.jfree.data.xy.DefaultXYDataset.getYValue(int,int)",1,1,22,55,1
"org.jfree.data.xy.DefaultXYDataset.hashCode()",1,1,12,58,1
"org.jfree.data.xy.DefaultXYDataset.indexOf(Comparable)",1,1,12,19,1
"org.jfree.data.xy.DefaultXYDataset.removeSeries(Comparable)",1,2,15,82,2
"org.jfree.data.xy.DefaultXYDatasetTest.createSampleDataset1()",1,1,17,198,1
"org.jfree.data.xy.DefaultXYDatasetTest.testAddSeries()",1,1,25,249,2
"org.jfree.data.xy.DefaultXYDatasetTest.testCloning()",1,1,25,342,1
"org.jfree.data.xy.DefaultXYDatasetTest.testEquals()",1,1,20,280,1
"org.jfree.data.xy.DefaultXYDatasetTest.testGetSeriesKey()",1,1,26,155,3
"org.jfree.data.xy.DefaultXYDatasetTest.testIndexOf()",1,1,11,95,1
"org.jfree.data.xy.DefaultXYDatasetTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.DefaultXYDatasetTest.testSerialization()",1,1,16,148,1
"org.jfree.data.xy.DefaultXYZDataset.DefaultXYZDataset()",1,1,8,16,1
"org.jfree.data.xy.DefaultXYZDataset.addSeries(Comparable,double[][])",5,2,39,393,7
"org.jfree.data.xy.DefaultXYZDataset.clone()",1,2,29,446,2
"org.jfree.data.xy.DefaultXYZDataset.equals(Object)",8,2,47,453,8
"org.jfree.data.xy.DefaultXYZDataset.getDomainOrder()",1,1,11,4,1
"org.jfree.data.xy.DefaultXYZDataset.getItemCount(int)",2,2,19,101,3
"org.jfree.data.xy.DefaultXYZDataset.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.DefaultXYZDataset.getSeriesKey(int)",2,2,18,72,3
"org.jfree.data.xy.DefaultXYZDataset.getX(int,int)",1,1,21,28,1
"org.jfree.data.xy.DefaultXYZDataset.getXValue(int,int)",1,1,22,55,1
"org.jfree.data.xy.DefaultXYZDataset.getY(int,int)",1,1,21,28,1
"org.jfree.data.xy.DefaultXYZDataset.getYValue(int,int)",1,1,22,55,1
"org.jfree.data.xy.DefaultXYZDataset.getZ(int,int)",1,1,21,28,1
"org.jfree.data.xy.DefaultXYZDataset.getZValue(int,int)",1,1,22,55,1
"org.jfree.data.xy.DefaultXYZDataset.hashCode()",1,1,12,58,1
"org.jfree.data.xy.DefaultXYZDataset.indexOf(Comparable)",1,1,12,19,1
"org.jfree.data.xy.DefaultXYZDataset.removeSeries(Comparable)",1,2,15,82,2
"org.jfree.data.xy.DefaultXYZDatasetTest.createSampleDataset1()",1,1,19,278,1
"org.jfree.data.xy.DefaultXYZDatasetTest.testAddSeries()",1,1,25,269,2
"org.jfree.data.xy.DefaultXYZDatasetTest.testCloning()",1,1,26,391,1
"org.jfree.data.xy.DefaultXYZDatasetTest.testEquals()",1,1,22,365,1
"org.jfree.data.xy.DefaultXYZDatasetTest.testGetSeriesKey()",1,1,26,155,3
"org.jfree.data.xy.DefaultXYZDatasetTest.testIndexOf()",1,1,11,95,1
"org.jfree.data.xy.DefaultXYZDatasetTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.DefaultXYZDatasetTest.testSerialization()",1,1,17,189,1
"org.jfree.data.xy.IntervalXYDelegate.IntervalXYDelegate(XYDataset)",1,1,8,11,1
"org.jfree.data.xy.IntervalXYDelegate.IntervalXYDelegate(XYDataset,boolean)",1,1,15,78,1
"org.jfree.data.xy.IntervalXYDelegate.calculateIntervalForSeries(int)",1,3,20,201,3
"org.jfree.data.xy.IntervalXYDelegate.clone()",1,1,9,11,1
"org.jfree.data.xy.IntervalXYDelegate.datasetChanged(DatasetChangeEvent)",1,2,17,22,2
"org.jfree.data.xy.IntervalXYDelegate.equals(Object)",6,1,31,174,6
"org.jfree.data.xy.IntervalXYDelegate.getDomainBounds(boolean)",1,2,22,146,3
"org.jfree.data.xy.IntervalXYDelegate.getDomainLowerBound(boolean)",1,2,17,59,2
"org.jfree.data.xy.IntervalXYDelegate.getDomainUpperBound(boolean)",1,2,17,59,2
"org.jfree.data.xy.IntervalXYDelegate.getEndX(int,int)",1,2,19,118,2
"org.jfree.data.xy.IntervalXYDelegate.getEndXValue(int,int)",1,1,14,70,1
"org.jfree.data.xy.IntervalXYDelegate.getFixedIntervalWidth()",1,1,8,11,1
"org.jfree.data.xy.IntervalXYDelegate.getIntervalPositionFactor()",1,1,8,11,1
"org.jfree.data.xy.IntervalXYDelegate.getIntervalWidth()",2,2,18,57,3
"org.jfree.data.xy.IntervalXYDelegate.getStartX(int,int)",1,2,19,106,2
"org.jfree.data.xy.IntervalXYDelegate.getStartXValue(int,int)",1,1,14,59,1
"org.jfree.data.xy.IntervalXYDelegate.hashCode()",1,1,13,72,1
"org.jfree.data.xy.IntervalXYDelegate.isAutoWidth()",1,1,9,11,1
"org.jfree.data.xy.IntervalXYDelegate.recalculateInterval()",1,2,13,94,2
"org.jfree.data.xy.IntervalXYDelegate.setAutoWidth(boolean)",1,2,17,34,2
"org.jfree.data.xy.IntervalXYDelegate.setFixedIntervalWidth(double)",2,1,18,60,2
"org.jfree.data.xy.IntervalXYDelegate.setIntervalPositionFactor(double)",2,1,23,64,3
"org.jfree.data.xy.IntervalXYDelegateTest.testCloning()",1,1,15,131,1
"org.jfree.data.xy.IntervalXYDelegateTest.testEquals()",1,1,30,343,1
"org.jfree.data.xy.IntervalXYDelegateTest.testSerialization()",1,1,13,72,1
"org.jfree.data.xy.MatrixSeries.MatrixSeries(String,int,int)",1,1,15,46,1
"org.jfree.data.xy.MatrixSeries.equals(Object)",8,3,31,287,8
"org.jfree.data.xy.MatrixSeries.get(int,int)",1,1,14,39,1
"org.jfree.data.xy.MatrixSeries.getColumnsCount()",1,1,8,19,1
"org.jfree.data.xy.MatrixSeries.getItem(int)",1,1,16,55,1
"org.jfree.data.xy.MatrixSeries.getItemColumn(int)",1,1,11,18,1
"org.jfree.data.xy.MatrixSeries.getItemCount()",1,1,9,15,1
"org.jfree.data.xy.MatrixSeries.getItemRow(int)",1,1,11,18,1
"org.jfree.data.xy.MatrixSeries.getRowCount()",1,1,8,15,1
"org.jfree.data.xy.MatrixSeries.update(int,int,double)",1,1,13,43,1
"org.jfree.data.xy.MatrixSeries.zeroAll()",1,1,15,114,3
"org.jfree.data.xy.MatrixSeriesCollection.MatrixSeriesCollection()",1,1,6,8,1
"org.jfree.data.xy.MatrixSeriesCollection.MatrixSeriesCollection(MatrixSeries)",1,2,12,49,2
"org.jfree.data.xy.MatrixSeriesCollection.addSeries(MatrixSeries)",1,1,16,43,1
"org.jfree.data.xy.MatrixSeriesCollection.clone()",1,1,13,36,1
"org.jfree.data.xy.MatrixSeriesCollection.equals(Object)",4,2,21,101,4
"org.jfree.data.xy.MatrixSeriesCollection.getItemCount(int)",1,1,11,18,1
"org.jfree.data.xy.MatrixSeriesCollection.getSeries(int)",2,2,14,77,3
"org.jfree.data.xy.MatrixSeriesCollection.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.MatrixSeriesCollection.getSeriesKey(int)",1,1,11,15,1
"org.jfree.data.xy.MatrixSeriesCollection.getX(int,int)",1,1,17,57,1
"org.jfree.data.xy.MatrixSeriesCollection.getY(int,int)",1,1,17,57,1
"org.jfree.data.xy.MatrixSeriesCollection.getZ(int,int)",1,1,17,48,1
"org.jfree.data.xy.MatrixSeriesCollection.hashCode()",1,2,9,34,2
"org.jfree.data.xy.MatrixSeriesCollection.removeAllSeries()",1,2,17,92,2
"org.jfree.data.xy.MatrixSeriesCollection.removeSeries(MatrixSeries)",1,2,16,64,2
"org.jfree.data.xy.MatrixSeriesCollection.removeSeries(int)",2,2,18,112,3
"org.jfree.data.xy.MatrixSeriesCollectionTest.testCloning()",1,1,17,176,1
"org.jfree.data.xy.MatrixSeriesCollectionTest.testEquals()",1,1,20,237,1
"org.jfree.data.xy.MatrixSeriesCollectionTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.MatrixSeriesCollectionTest.testSerialization()",1,1,13,78,1
"org.jfree.data.xy.MatrixSeriesTest.testCloning()",1,1,13,144,1
"org.jfree.data.xy.MatrixSeriesTest.testEquals()",1,1,30,483,1
"org.jfree.data.xy.MatrixSeriesTest.testGetItem()",1,1,19,347,1
"org.jfree.data.xy.MatrixSeriesTest.testGetItemColumn()",1,1,13,133,1
"org.jfree.data.xy.MatrixSeriesTest.testGetItemRow()",1,1,13,133,1
"org.jfree.data.xy.MatrixSeriesTest.testSerialization()",1,1,11,84,1
"org.jfree.data.xy.NormalizedMatrixSeries.NormalizedMatrixSeries(String,int,int)",1,1,17,36,1
"org.jfree.data.xy.NormalizedMatrixSeries.getItem(int)",1,1,17,95,1
"org.jfree.data.xy.NormalizedMatrixSeries.getScaleFactor()",1,1,9,11,1
"org.jfree.data.xy.NormalizedMatrixSeries.setScaleFactor(double)",1,1,12,15,1
"org.jfree.data.xy.NormalizedMatrixSeries.update(int,int,double)",1,1,15,71,1
"org.jfree.data.xy.NormalizedMatrixSeries.zeroAll()",1,1,8,19,1
"org.jfree.data.xy.OHLCDataItem.OHLCDataItem(Date,double,double,double,double,double)",1,1,20,133,1
"org.jfree.data.xy.OHLCDataItem.compareTo(Object)",2,2,20,62,2
"org.jfree.data.xy.OHLCDataItem.equals(Object)",8,1,33,284,8
"org.jfree.data.xy.OHLCDataItem.getClose()",1,1,8,8,1
"org.jfree.data.xy.OHLCDataItem.getDate()",1,1,8,8,1
"org.jfree.data.xy.OHLCDataItem.getHigh()",1,1,8,8,1
"org.jfree.data.xy.OHLCDataItem.getLow()",1,1,8,8,1
"org.jfree.data.xy.OHLCDataItem.getOpen()",1,1,8,8,1
"org.jfree.data.xy.OHLCDataItem.getVolume()",1,1,8,8,1
"org.jfree.data.xy.OHLCDataItemTest.testCloning()",1,1,10,46,1
"org.jfree.data.xy.OHLCDataItemTest.testEquals()",1,1,12,96,1
"org.jfree.data.xy.OHLCDataItemTest.testSerialization()",1,1,10,55,1
"org.jfree.data.xy.TableXYDatasetTest.createSeries1()",1,1,13,82,1
"org.jfree.data.xy.TableXYDatasetTest.createSeries2()",1,1,14,99,1
"org.jfree.data.xy.TableXYDatasetTest.createSeriesA()",1,1,11,55,1
"org.jfree.data.xy.TableXYDatasetTest.createSeriesB()",1,1,11,55,1
"org.jfree.data.xy.TableXYDatasetTest.test788597()",1,1,11,55,1
"org.jfree.data.xy.TableXYDatasetTest.testAutoPrune()",1,1,22,182,1
"org.jfree.data.xy.TableXYDatasetTest.testCloning()",1,1,12,87,1
"org.jfree.data.xy.TableXYDatasetTest.testEquals()",1,1,14,86,1
"org.jfree.data.xy.TableXYDatasetTest.testPrune()",1,1,12,66,1
"org.jfree.data.xy.TableXYDatasetTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.TableXYDatasetTest.testRemoveAllValuesForX()",1,1,16,238,1
"org.jfree.data.xy.TableXYDatasetTest.testSerialization()",1,1,11,34,1
"org.jfree.data.xy.TableXYDatasetTest.testTableXYDataset()",1,1,33,380,1
"org.jfree.data.xy.Vector.Vector(double,double)",1,1,10,25,1
"org.jfree.data.xy.Vector.equals(Object)",5,1,24,134,5
"org.jfree.data.xy.Vector.getAngle()",1,1,8,22,1
"org.jfree.data.xy.Vector.getLength()",1,1,8,47,1
"org.jfree.data.xy.Vector.getX()",1,1,8,11,1
"org.jfree.data.xy.Vector.getY()",1,1,8,11,1
"org.jfree.data.xy.Vector.hashCode()",1,1,14,147,1
"org.jfree.data.xy.VectorDataItem.VectorDataItem(double,double,double,double)",1,1,11,41,1
"org.jfree.data.xy.VectorDataItem.getVector()",1,1,8,4,1
"org.jfree.data.xy.VectorDataItem.getVectorX()",2,2,14,44,2
"org.jfree.data.xy.VectorDataItem.getVectorY()",2,2,14,44,2
"org.jfree.data.xy.VectorDataItem.getXValue()",1,1,9,15,1
"org.jfree.data.xy.VectorDataItem.getYValue()",1,1,9,15,1
"org.jfree.data.xy.VectorDataItemTest.testCloning()",1,1,11,96,1
"org.jfree.data.xy.VectorDataItemTest.testEquals()",1,1,27,400,1
"org.jfree.data.xy.VectorDataItemTest.testHashcode()",1,1,12,100,1
"org.jfree.data.xy.VectorDataItemTest.testSerialization()",1,1,9,41,1
"org.jfree.data.xy.VectorSeries.VectorSeries(Comparable)",1,1,8,15,1
"org.jfree.data.xy.VectorSeries.VectorSeries(Comparable,boolean,boolean)",1,1,14,22,1
"org.jfree.data.xy.VectorSeries.add(VectorDataItem,boolean)",1,1,12,19,1
"org.jfree.data.xy.VectorSeries.add(double,double,double,double)",1,1,11,43,1
"org.jfree.data.xy.VectorSeries.getDataItem(int)",1,1,12,15,1
"org.jfree.data.xy.VectorSeries.getVectorXValue(int)",1,1,11,24,1
"org.jfree.data.xy.VectorSeries.getVectorYValue(int)",1,1,11,24,1
"org.jfree.data.xy.VectorSeries.getXValue(int)",1,1,11,28,1
"org.jfree.data.xy.VectorSeries.getYValue(int)",1,1,11,24,1
"org.jfree.data.xy.VectorSeries.remove(int)",1,1,14,28,1
"org.jfree.data.xy.VectorSeriesCollection.VectorSeriesCollection()",1,1,6,8,1
"org.jfree.data.xy.VectorSeriesCollection.addSeries(VectorSeries)",1,1,12,43,1
"org.jfree.data.xy.VectorSeriesCollection.clone()",1,1,14,36,1
"org.jfree.data.xy.VectorSeriesCollection.equals(Object)",3,1,18,82,3
"org.jfree.data.xy.VectorSeriesCollection.getItemCount(int)",1,1,15,18,1
"org.jfree.data.xy.VectorSeriesCollection.getSeries(int)",2,2,16,72,3
"org.jfree.data.xy.VectorSeriesCollection.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.VectorSeriesCollection.getSeriesKey(int)",1,1,16,15,1
"org.jfree.data.xy.VectorSeriesCollection.getVector(int,int)",1,1,14,46,1
"org.jfree.data.xy.VectorSeriesCollection.getVectorXValue(int,int)",1,1,14,51,1
"org.jfree.data.xy.VectorSeriesCollection.getVectorYValue(int,int)",1,1,14,51,1
"org.jfree.data.xy.VectorSeriesCollection.getX(int,int)",1,1,14,28,1
"org.jfree.data.xy.VectorSeriesCollection.getXValue(int,int)",1,1,14,51,1
"org.jfree.data.xy.VectorSeriesCollection.getY(int,int)",1,1,14,28,1
"org.jfree.data.xy.VectorSeriesCollection.getYValue(int,int)",1,1,14,51,1
"org.jfree.data.xy.VectorSeriesCollection.indexOf(VectorSeries)",1,1,12,31,1
"org.jfree.data.xy.VectorSeriesCollection.removeAllSeries()",1,2,15,92,2
"org.jfree.data.xy.VectorSeriesCollection.removeSeries(VectorSeries)",1,2,18,66,2
"org.jfree.data.xy.VectorSeriesCollectionTest.testCloning()",1,1,17,171,1
"org.jfree.data.xy.VectorSeriesCollectionTest.testEquals()",1,1,20,208,1
"org.jfree.data.xy.VectorSeriesCollectionTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.VectorSeriesCollectionTest.testRemoveSeries()",1,1,22,236,1
"org.jfree.data.xy.VectorSeriesCollectionTest.testSerialization()",1,1,13,74,1
"org.jfree.data.xy.VectorSeriesTest.seriesChanged(SeriesChangeEvent)",1,1,8,11,1
"org.jfree.data.xy.VectorSeriesTest.testAdd()",1,1,21,453,1
"org.jfree.data.xy.VectorSeriesTest.testAdditionOfDuplicateXValues()",1,1,18,271,1
"org.jfree.data.xy.VectorSeriesTest.testClear()",1,1,16,135,1
"org.jfree.data.xy.VectorSeriesTest.testCloning()",1,1,12,112,1
"org.jfree.data.xy.VectorSeriesTest.testEquals()",1,1,39,492,1
"org.jfree.data.xy.VectorSeriesTest.testIndexOf()",1,1,11,107,1
"org.jfree.data.xy.VectorSeriesTest.testIndexOf2()",1,1,13,163,1
"org.jfree.data.xy.VectorSeriesTest.testRemove()",1,1,15,200,1
"org.jfree.data.xy.VectorSeriesTest.testSerialization()",1,1,10,55,1
"org.jfree.data.xy.VectorSeriesTest.testSetMaximumItemCount()",1,1,15,200,1
"org.jfree.data.xy.VectorSeriesTest.testSetMaximumItemCount2()",1,1,13,157,1
"org.jfree.data.xy.VectorTest.testCloning()",1,1,8,24,1
"org.jfree.data.xy.VectorTest.testEquals()",1,1,19,172,1
"org.jfree.data.xy.VectorTest.testHashcode()",1,1,12,79,1
"org.jfree.data.xy.VectorTest.testSerialization()",1,1,9,31,1
"org.jfree.data.xy.WindDataItem.WindDataItem(Number,Number,Number)",1,1,12,30,1
"org.jfree.data.xy.WindDataItem.compareTo(Object)",4,3,25,144,4
"org.jfree.data.xy.WindDataItem.equals(Object)",6,1,28,186,6
"org.jfree.data.xy.WindDataItem.getWindDirection()",1,1,8,8,1
"org.jfree.data.xy.WindDataItem.getWindForce()",1,1,8,8,1
"org.jfree.data.xy.WindDataItem.getX()",1,1,8,8,1
"org.jfree.data.xy.XIntervalDataItem.XIntervalDataItem(double,double,double,double)",1,1,11,41,1
"org.jfree.data.xy.XIntervalDataItem.getX()",1,1,8,4,1
"org.jfree.data.xy.XIntervalDataItem.getXHighValue()",2,2,14,44,2
"org.jfree.data.xy.XIntervalDataItem.getXLowValue()",2,2,14,44,2
"org.jfree.data.xy.XIntervalDataItem.getYValue()",2,2,14,44,2
"org.jfree.data.xy.XIntervalDataItemTest.testCloning()",1,1,11,96,1
"org.jfree.data.xy.XIntervalDataItemTest.testConstructor1()",1,1,11,105,1
"org.jfree.data.xy.XIntervalDataItemTest.testEquals()",1,1,30,400,1
"org.jfree.data.xy.XIntervalDataItemTest.testSerialization()",1,1,9,41,1
"org.jfree.data.xy.XIntervalSeries.XIntervalSeries(Comparable)",1,1,10,13,1
"org.jfree.data.xy.XIntervalSeries.XIntervalSeries(Comparable,boolean,boolean)",1,1,14,22,1
"org.jfree.data.xy.XIntervalSeries.add(XIntervalDataItem,boolean)",1,1,12,19,1
"org.jfree.data.xy.XIntervalSeries.add(double,double,double,double)",1,1,12,43,1
"org.jfree.data.xy.XIntervalSeries.getDataItem(int)",1,1,11,15,1
"org.jfree.data.xy.XIntervalSeries.getX(int)",1,1,11,19,1
"org.jfree.data.xy.XIntervalSeries.getXHighValue(int)",1,1,13,24,1
"org.jfree.data.xy.XIntervalSeries.getXLowValue(int)",1,1,13,24,1
"org.jfree.data.xy.XIntervalSeries.getYValue(int)",1,1,11,24,1
"org.jfree.data.xy.XIntervalSeriesCollection.XIntervalSeriesCollection()",1,1,6,8,1
"org.jfree.data.xy.XIntervalSeriesCollection.addSeries(XIntervalSeries)",1,1,12,43,1
"org.jfree.data.xy.XIntervalSeriesCollection.clone()",1,1,14,36,1
"org.jfree.data.xy.XIntervalSeriesCollection.equals(Object)",3,1,18,82,3
"org.jfree.data.xy.XIntervalSeriesCollection.getEndX(int,int)",1,1,14,51,1
"org.jfree.data.xy.XIntervalSeriesCollection.getEndXValue(int,int)",1,1,14,41,1
"org.jfree.data.xy.XIntervalSeriesCollection.getEndY(int,int)",1,1,13,23,1
"org.jfree.data.xy.XIntervalSeriesCollection.getItemCount(int)",1,1,15,18,1
"org.jfree.data.xy.XIntervalSeriesCollection.getSeries(int)",2,2,16,72,3
"org.jfree.data.xy.XIntervalSeriesCollection.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.XIntervalSeriesCollection.getSeriesKey(int)",1,1,16,15,1
"org.jfree.data.xy.XIntervalSeriesCollection.getStartX(int,int)",1,1,14,51,1
"org.jfree.data.xy.XIntervalSeriesCollection.getStartXValue(int,int)",1,1,14,41,1
"org.jfree.data.xy.XIntervalSeriesCollection.getStartY(int,int)",1,1,13,23,1
"org.jfree.data.xy.XIntervalSeriesCollection.getX(int,int)",1,1,14,46,1
"org.jfree.data.xy.XIntervalSeriesCollection.getY(int,int)",1,1,14,51,1
"org.jfree.data.xy.XIntervalSeriesCollection.getYValue(int,int)",1,1,14,41,1
"org.jfree.data.xy.XIntervalSeriesCollection.removeAllSeries()",1,2,16,92,2
"org.jfree.data.xy.XIntervalSeriesCollection.removeSeries(XIntervalSeries)",1,2,16,64,2
"org.jfree.data.xy.XIntervalSeriesCollection.removeSeries(int)",2,2,17,112,3
"org.jfree.data.xy.XIntervalSeriesCollectionTest.test1170825()",1,2,19,59,3
"org.jfree.data.xy.XIntervalSeriesCollectionTest.testCloning()",1,1,17,171,1
"org.jfree.data.xy.XIntervalSeriesCollectionTest.testEquals()",1,1,23,225,1
"org.jfree.data.xy.XIntervalSeriesCollectionTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.XIntervalSeriesCollectionTest.testRemoveSeries()",1,1,28,180,3
"org.jfree.data.xy.XIntervalSeriesCollectionTest.testSerialization()",1,1,12,60,1
"org.jfree.data.xy.XIntervalSeriesTest.seriesChanged(SeriesChangeEvent)",1,1,8,11,1
"org.jfree.data.xy.XIntervalSeriesTest.testAdd()",1,1,21,453,1
"org.jfree.data.xy.XIntervalSeriesTest.testAdditionOfDuplicateXValues()",1,1,18,271,1
"org.jfree.data.xy.XIntervalSeriesTest.testClear()",1,1,16,135,1
"org.jfree.data.xy.XIntervalSeriesTest.testCloning()",1,1,12,112,1
"org.jfree.data.xy.XIntervalSeriesTest.testEquals()",1,1,39,483,1
"org.jfree.data.xy.XIntervalSeriesTest.testGetXHighValue()",1,1,11,112,1
"org.jfree.data.xy.XIntervalSeriesTest.testGetXLowValue()",1,1,11,112,1
"org.jfree.data.xy.XIntervalSeriesTest.testIndexOf()",1,1,11,103,1
"org.jfree.data.xy.XIntervalSeriesTest.testIndexOf2()",1,1,13,168,1
"org.jfree.data.xy.XIntervalSeriesTest.testRemove()",1,1,15,188,1
"org.jfree.data.xy.XIntervalSeriesTest.testSerialization()",1,1,10,55,1
"org.jfree.data.xy.XIntervalSeriesTest.testSetMaximumItemCount()",1,1,15,212,1
"org.jfree.data.xy.XIntervalSeriesTest.testSetMaximumItemCount2()",1,1,13,168,1
"org.jfree.data.xy.XYBarDataset.XYBarDataset(XYDataset,double)",1,1,12,35,1
"org.jfree.data.xy.XYBarDataset.clone()",1,2,23,59,2
"org.jfree.data.xy.XYBarDataset.datasetChanged(DatasetChangeEvent)",1,1,9,8,1
"org.jfree.data.xy.XYBarDataset.equals(Object)",5,1,24,141,5
"org.jfree.data.xy.XYBarDataset.getBarWidth()",1,1,11,13,1
"org.jfree.data.xy.XYBarDataset.getEndX(int,int)",1,2,17,101,2
"org.jfree.data.xy.XYBarDataset.getEndXValue(int,int)",1,1,15,53,1
"org.jfree.data.xy.XYBarDataset.getEndY(int,int)",1,1,12,26,1
"org.jfree.data.xy.XYBarDataset.getEndYValue(int,int)",1,1,15,28,1
"org.jfree.data.xy.XYBarDataset.getItemCount(int)",1,1,11,22,1
"org.jfree.data.xy.XYBarDataset.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.XYBarDataset.getSeriesKey(int)",1,1,12,19,1
"org.jfree.data.xy.XYBarDataset.getStartX(int,int)",1,2,17,101,2
"org.jfree.data.xy.XYBarDataset.getStartXValue(int,int)",1,1,15,53,1
"org.jfree.data.xy.XYBarDataset.getStartY(int,int)",1,1,12,26,1
"org.jfree.data.xy.XYBarDataset.getStartYValue(int,int)",1,1,15,28,1
"org.jfree.data.xy.XYBarDataset.getUnderlyingDataset()",1,1,10,8,1
"org.jfree.data.xy.XYBarDataset.getX(int,int)",1,1,14,33,1
"org.jfree.data.xy.XYBarDataset.getXValue(int,int)",1,1,14,38,1
"org.jfree.data.xy.XYBarDataset.getY(int,int)",1,1,14,33,1
"org.jfree.data.xy.XYBarDataset.getYValue(int,int)",1,1,14,38,1
"org.jfree.data.xy.XYBarDataset.setBarWidth(double)",1,1,13,30,1
"org.jfree.data.xy.XYBarDatasetTest.testCloning()",1,1,23,344,1
"org.jfree.data.xy.XYBarDatasetTest.testEquals()",1,1,20,275,1
"org.jfree.data.xy.XYBarDatasetTest.testPublicCloneable()",1,1,13,127,1
"org.jfree.data.xy.XYBarDatasetTest.testSerialization()",1,1,14,138,1
"org.jfree.data.xy.XYCoordinate.XYCoordinate()",1,1,6,10,1
"org.jfree.data.xy.XYCoordinate.XYCoordinate(double,double)",1,1,10,25,1
"org.jfree.data.xy.XYCoordinate.compareTo(Object)",6,1,29,221,6
"org.jfree.data.xy.XYCoordinate.equals(Object)",5,1,24,134,5
"org.jfree.data.xy.XYCoordinate.getX()",1,1,8,11,1
"org.jfree.data.xy.XYCoordinate.getY()",1,1,8,11,1
"org.jfree.data.xy.XYCoordinate.hashCode()",1,1,14,147,1
"org.jfree.data.xy.XYCoordinate.toString()",1,1,10,26,1
"org.jfree.data.xy.XYCoordinateTest.testCloning()",1,1,8,24,1
"org.jfree.data.xy.XYCoordinateTest.testEquals()",1,1,19,172,1
"org.jfree.data.xy.XYCoordinateTest.testHashcode()",1,1,12,79,1
"org.jfree.data.xy.XYCoordinateTest.testSerialization()",1,1,9,31,1
"org.jfree.data.xy.XYDataItem.XYDataItem(Number,Number)",1,1,11,30,1
"org.jfree.data.xy.XYDataItem.XYDataItem(double,double)",1,1,9,25,1
"org.jfree.data.xy.XYDataItem.clone()",1,2,16,36,2
"org.jfree.data.xy.XYDataItem.compareTo(Object)",1,2,41,164,4
"org.jfree.data.xy.XYDataItem.equals(Object)",5,1,25,145,5
"org.jfree.data.xy.XYDataItem.getX()",1,1,8,8,1
"org.jfree.data.xy.XYDataItem.getXValue()",1,1,14,15,1
"org.jfree.data.xy.XYDataItem.getY()",1,1,8,8,1
"org.jfree.data.xy.XYDataItem.getYValue()",1,2,17,51,2
"org.jfree.data.xy.XYDataItem.hashCode()",1,2,12,83,2
"org.jfree.data.xy.XYDataItem.setY(Number)",1,1,9,11,1
"org.jfree.data.xy.XYDataItem.setY(double)",1,1,9,15,1
"org.jfree.data.xy.XYDataItem.toString()",1,1,10,19,1
"org.jfree.data.xy.XYDataItemTest.testCloning()",1,1,11,77,1
"org.jfree.data.xy.XYDataItemTest.testEquals()",1,1,14,114,1
"org.jfree.data.xy.XYDataItemTest.testSerialization()",1,1,9,31,1
"org.jfree.data.xy.XYDatasetTableModel.XYDatasetTableModel()",1,1,6,4,1
"org.jfree.data.xy.XYDatasetTableModel.XYDatasetTableModel(TableXYDataset)",1,1,10,25,1
"org.jfree.data.xy.XYDatasetTableModel.datasetChanged(DatasetChangeEvent)",1,1,11,4,1
"org.jfree.data.xy.XYDatasetTableModel.getColumnCount()",2,1,12,53,2
"org.jfree.data.xy.XYDatasetTableModel.getColumnName(int)",3,3,19,108,3
"org.jfree.data.xy.XYDatasetTableModel.getRowCount()",2,1,12,43,2
"org.jfree.data.xy.XYDatasetTableModel.getValueAt(int,int)",3,2,21,118,3
"org.jfree.data.xy.XYDatasetTableModel.isCellEditable(int,int)",1,1,12,13,1
"org.jfree.data.xy.XYDatasetTableModel.setModel(TableXYDataset)",1,1,10,28,1
"org.jfree.data.xy.XYDatasetTableModel.setValueAt(Object,int,int)",1,1,13,22,2
"org.jfree.data.xy.XYInterval.XYInterval(double,double,double,double,double)",1,1,17,77,1
"org.jfree.data.xy.XYInterval.equals(Object)",8,1,33,257,8
"org.jfree.data.xy.XYInterval.getXHigh()",1,1,8,11,1
"org.jfree.data.xy.XYInterval.getXLow()",1,1,8,11,1
"org.jfree.data.xy.XYInterval.getY()",1,1,8,11,1
"org.jfree.data.xy.XYInterval.getYHigh()",1,1,8,11,1
"org.jfree.data.xy.XYInterval.getYLow()",1,1,8,11,1
"org.jfree.data.xy.XYIntervalDataItem.XYIntervalDataItem(double,double,double,double,double,double)",1,1,14,58,1
"org.jfree.data.xy.XYIntervalDataItem.getX()",1,1,8,4,1
"org.jfree.data.xy.XYIntervalDataItem.getXHighValue()",2,2,14,44,2
"org.jfree.data.xy.XYIntervalDataItem.getXLowValue()",2,2,14,44,2
"org.jfree.data.xy.XYIntervalDataItem.getYHighValue()",2,2,14,44,2
"org.jfree.data.xy.XYIntervalDataItem.getYLowValue()",2,2,14,44,2
"org.jfree.data.xy.XYIntervalDataItem.getYValue()",2,2,14,44,2
"org.jfree.data.xy.XYIntervalDataItemTest.testCloning()",1,1,12,108,1
"org.jfree.data.xy.XYIntervalDataItemTest.testConstructor1()",1,1,14,165,1
"org.jfree.data.xy.XYIntervalDataItemTest.testEquals()",1,1,42,726,1
"org.jfree.data.xy.XYIntervalDataItemTest.testSerialization()",1,1,11,51,1
"org.jfree.data.xy.XYIntervalSeries.XYIntervalSeries(Comparable)",1,1,10,13,1
"org.jfree.data.xy.XYIntervalSeries.XYIntervalSeries(Comparable,boolean,boolean)",1,1,14,22,1
"org.jfree.data.xy.XYIntervalSeries.add(XYIntervalDataItem,boolean)",1,1,12,19,1
"org.jfree.data.xy.XYIntervalSeries.add(double,double,double,double,double,double)",1,1,15,60,1
"org.jfree.data.xy.XYIntervalSeries.getDataItem(int)",1,1,11,15,1
"org.jfree.data.xy.XYIntervalSeries.getX(int)",1,1,11,19,1
"org.jfree.data.xy.XYIntervalSeries.getXHighValue(int)",1,1,14,24,1
"org.jfree.data.xy.XYIntervalSeries.getXLowValue(int)",1,1,14,24,1
"org.jfree.data.xy.XYIntervalSeries.getYHighValue(int)",1,1,14,24,1
"org.jfree.data.xy.XYIntervalSeries.getYLowValue(int)",1,1,14,24,1
"org.jfree.data.xy.XYIntervalSeries.getYValue(int)",1,1,11,24,1
"org.jfree.data.xy.XYIntervalSeriesCollection.XYIntervalSeriesCollection()",1,1,6,8,1
"org.jfree.data.xy.XYIntervalSeriesCollection.addSeries(XYIntervalSeries)",1,1,12,43,1
"org.jfree.data.xy.XYIntervalSeriesCollection.clone()",1,2,18,129,2
"org.jfree.data.xy.XYIntervalSeriesCollection.equals(Object)",3,1,18,82,3
"org.jfree.data.xy.XYIntervalSeriesCollection.getEndX(int,int)",1,1,12,22,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getEndXValue(int,int)",1,1,14,41,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getEndY(int,int)",1,1,13,28,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getEndYValue(int,int)",1,1,14,41,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getItemCount(int)",1,1,15,18,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getSeries(int)",2,2,16,72,3
"org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getSeriesKey(int)",1,1,16,15,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getStartX(int,int)",1,1,12,22,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getStartXValue(int,int)",1,1,14,41,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getStartY(int,int)",1,1,13,28,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getStartYValue(int,int)",1,1,14,41,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getX(int,int)",1,1,13,36,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getY(int,int)",1,1,12,22,1
"org.jfree.data.xy.XYIntervalSeriesCollection.getYValue(int,int)",1,1,14,41,1
"org.jfree.data.xy.XYIntervalSeriesCollection.removeAllSeries()",1,2,16,92,2
"org.jfree.data.xy.XYIntervalSeriesCollection.removeSeries(XYIntervalSeries)",1,2,16,64,2
"org.jfree.data.xy.XYIntervalSeriesCollection.removeSeries(int)",2,2,17,112,3
"org.jfree.data.xy.XYIntervalSeriesCollectionTest.test1170825()",1,2,19,59,3
"org.jfree.data.xy.XYIntervalSeriesCollectionTest.testCloning()",1,1,18,210,1
"org.jfree.data.xy.XYIntervalSeriesCollectionTest.testEquals()",1,1,23,250,1
"org.jfree.data.xy.XYIntervalSeriesCollectionTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.XYIntervalSeriesCollectionTest.testRemoveSeries()",1,1,28,180,3
"org.jfree.data.xy.XYIntervalSeriesCollectionTest.testSerialization()",1,1,17,149,1
"org.jfree.data.xy.XYIntervalSeriesTest.seriesChanged(SeriesChangeEvent)",1,1,8,11,1
"org.jfree.data.xy.XYIntervalSeriesTest.testAdd()",1,1,21,524,1
"org.jfree.data.xy.XYIntervalSeriesTest.testAdditionOfDuplicateXValues()",1,1,18,314,1
"org.jfree.data.xy.XYIntervalSeriesTest.testClear()",1,1,16,149,1
"org.jfree.data.xy.XYIntervalSeriesTest.testCloning()",1,1,12,125,1
"org.jfree.data.xy.XYIntervalSeriesTest.testEquals()",1,1,39,535,1
"org.jfree.data.xy.XYIntervalSeriesTest.testIndexOf()",1,1,11,144,1
"org.jfree.data.xy.XYIntervalSeriesTest.testIndexOf2()",1,1,13,207,1
"org.jfree.data.xy.XYIntervalSeriesTest.testRemove()",1,1,15,228,1
"org.jfree.data.xy.XYIntervalSeriesTest.testSerialization()",1,1,10,66,1
"org.jfree.data.xy.XYIntervalSeriesTest.testSetMaximumItemCount()",1,1,15,239,1
"org.jfree.data.xy.XYIntervalSeriesTest.testSetMaximumItemCount2()",1,1,13,194,1
"org.jfree.data.xy.XYIntervalSeriesTest.testValues()",1,1,14,218,1
"org.jfree.data.xy.XYIntervalTest.testCloning()",1,1,8,38,1
"org.jfree.data.xy.XYIntervalTest.testEquals()",1,1,29,539,1
"org.jfree.data.xy.XYIntervalTest.testSerialization()",1,1,9,46,1
"org.jfree.data.xy.XYItemKey.XYItemKey(S,int)",1,1,11,34,1
"org.jfree.data.xy.XYItemKey.compareTo(XYItemKey<S>)",1,1,8,78,2
"org.jfree.data.xy.XYItemKey.equals(Object)",5,1,24,141,5
"org.jfree.data.xy.XYItemKey.getItemIndex()",1,1,8,11,1
"org.jfree.data.xy.XYItemKey.getSeriesKey()",1,1,8,8,1
"org.jfree.data.xy.XYItemKey.hashCode()",1,1,7,75,1
"org.jfree.data.xy.XYItemKey.toJSONString()",1,1,8,89,1
"org.jfree.data.xy.XYItemKey.toString()",1,1,9,79,1
"org.jfree.data.xy.XYSeries.XYSeries(Comparable)",1,1,10,13,1
"org.jfree.data.xy.XYSeries.XYSeries(Comparable,boolean)",1,1,11,19,1
"org.jfree.data.xy.XYSeries.XYSeries(Comparable,boolean,boolean)",1,1,21,110,1
"org.jfree.data.xy.XYSeries.add(Number,Number)",1,1,18,15,1
"org.jfree.data.xy.XYSeries.add(Number,Number,boolean)",1,1,18,28,1
"org.jfree.data.xy.XYSeries.add(XYDataItem)",1,1,10,11,1
"org.jfree.data.xy.XYSeries.add(XYDataItem,boolean)",6,9,57,596,11
"org.jfree.data.xy.XYSeries.add(double,Number)",1,1,11,19,1
"org.jfree.data.xy.XYSeries.add(double,Number,boolean)",1,1,14,28,1
"org.jfree.data.xy.XYSeries.add(double,double)",1,1,10,30,1
"org.jfree.data.xy.XYSeries.add(double,double,boolean)",1,1,13,34,1
"org.jfree.data.xy.XYSeries.addOrUpdate(Number,Number)",1,1,14,15,1
"org.jfree.data.xy.XYSeries.addOrUpdate(XYDataItem)",2,7,61,641,9
"org.jfree.data.xy.XYSeries.addOrUpdate(double,double)",1,1,14,25,1
"org.jfree.data.xy.XYSeries.clear()",1,2,14,93,2
"org.jfree.data.xy.XYSeries.clone()",1,1,13,36,1
"org.jfree.data.xy.XYSeries.createCopy(int,int)",3,3,29,198,4
"org.jfree.data.xy.XYSeries.delete(int,int)",1,1,12,51,1
"org.jfree.data.xy.XYSeries.equals(Object)",8,1,34,261,8
"org.jfree.data.xy.XYSeries.findBoundsByIteration()",1,2,17,96,2
"org.jfree.data.xy.XYSeries.getAllowDuplicateXValues()",1,1,9,11,1
"org.jfree.data.xy.XYSeries.getAutoSort()",1,1,10,11,1
"org.jfree.data.xy.XYSeries.getDataItem(int)",1,1,11,28,1
"org.jfree.data.xy.XYSeries.getItemCount()",1,1,11,15,1
"org.jfree.data.xy.XYSeries.getItems()",1,1,9,11,1
"org.jfree.data.xy.XYSeries.getMaxX()",1,1,14,11,1
"org.jfree.data.xy.XYSeries.getMaxY()",1,1,14,11,1
"org.jfree.data.xy.XYSeries.getMaximumItemCount()",1,1,11,13,1
"org.jfree.data.xy.XYSeries.getMinX()",1,1,14,11,1
"org.jfree.data.xy.XYSeries.getMinY()",1,1,14,11,1
"org.jfree.data.xy.XYSeries.getRawDataItem(int)",1,1,12,15,1
"org.jfree.data.xy.XYSeries.getX(int)",1,1,10,15,1
"org.jfree.data.xy.XYSeries.getY(int)",1,1,10,15,1
"org.jfree.data.xy.XYSeries.hashCode()",1,4,28,357,6
"org.jfree.data.xy.XYSeries.indexOf(Number)",4,3,24,169,4
"org.jfree.data.xy.XYSeries.maxIgnoreNaN(double,double)",3,1,18,53,3
"org.jfree.data.xy.XYSeries.minIgnoreNaN(double,double)",3,1,18,53,3
"org.jfree.data.xy.XYSeries.remove(Number)",1,1,12,11,1
"org.jfree.data.xy.XYSeries.remove(int)",1,1,14,36,1
"org.jfree.data.xy.XYSeries.setMaximumItemCount(int)",1,2,23,98,2
"org.jfree.data.xy.XYSeries.toArray()",1,3,22,195,3
"org.jfree.data.xy.XYSeries.update(Number,Number)",2,1,16,66,2
"org.jfree.data.xy.XYSeries.updateBoundsForAddedItem(XYDataItem)",1,2,17,157,2
"org.jfree.data.xy.XYSeries.updateBoundsForRemovedItem(XYDataItem)",1,5,38,367,11
"org.jfree.data.xy.XYSeries.updateByIndex(int,Number)",1,3,28,255,5
"org.jfree.data.xy.XYSeriesCollection.XYSeriesCollection()",1,1,6,8,1
"org.jfree.data.xy.XYSeriesCollection.XYSeriesCollection(XYSeries)",1,2,15,98,2
"org.jfree.data.xy.XYSeriesCollection.addSeries(XYSeries)",2,2,21,121,2
"org.jfree.data.xy.XYSeriesCollection.clone()",1,1,15,59,1
"org.jfree.data.xy.XYSeriesCollection.equals(Object)",4,1,21,125,4
"org.jfree.data.xy.XYSeriesCollection.getDomainBounds(boolean)",3,5,37,302,6
"org.jfree.data.xy.XYSeriesCollection.getDomainLowerBound(boolean)",2,5,29,204,5
"org.jfree.data.xy.XYSeriesCollection.getDomainOrder()",3,2,16,85,3
"org.jfree.data.xy.XYSeriesCollection.getDomainUpperBound(boolean)",2,5,31,209,5
"org.jfree.data.xy.XYSeriesCollection.getEndX(int,int)",1,1,12,26,1
"org.jfree.data.xy.XYSeriesCollection.getEndY(int,int)",1,1,12,18,1
"org.jfree.data.xy.XYSeriesCollection.getIntervalPositionFactor()",1,1,8,15,1
"org.jfree.data.xy.XYSeriesCollection.getIntervalWidth()",1,1,9,15,1
"org.jfree.data.xy.XYSeriesCollection.getItemCount(int)",1,1,15,18,1
"org.jfree.data.xy.XYSeriesCollection.getRangeBounds(boolean)",2,4,31,252,5
"org.jfree.data.xy.XYSeriesCollection.getRangeLowerBound(boolean)",1,4,26,162,4
"org.jfree.data.xy.XYSeriesCollection.getRangeUpperBound(boolean)",1,4,26,162,4
"org.jfree.data.xy.XYSeriesCollection.getSeries()",1,1,8,11,1
"org.jfree.data.xy.XYSeriesCollection.getSeries(Comparable)",3,2,23,103,3
"org.jfree.data.xy.XYSeriesCollection.getSeries(int)",2,2,16,72,3
"org.jfree.data.xy.XYSeriesCollection.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.XYSeriesCollection.getSeriesIndex(Comparable)",3,2,21,129,3
"org.jfree.data.xy.XYSeriesCollection.getSeriesKey(int)",1,1,16,15,1
"org.jfree.data.xy.XYSeriesCollection.getStartX(int,int)",1,1,12,26,1
"org.jfree.data.xy.XYSeriesCollection.getStartY(int,int)",1,1,12,18,1
"org.jfree.data.xy.XYSeriesCollection.getX(int,int)",1,1,13,36,1
"org.jfree.data.xy.XYSeriesCollection.getY(int,int)",1,1,13,36,1
"org.jfree.data.xy.XYSeriesCollection.hashCode()",1,1,12,50,1
"org.jfree.data.xy.XYSeriesCollection.indexOf(XYSeries)",1,1,14,31,1
"org.jfree.data.xy.XYSeriesCollection.isAutoWidth()",1,1,8,15,1
"org.jfree.data.xy.XYSeriesCollection.removeAllSeries()",1,2,16,106,2
"org.jfree.data.xy.XYSeriesCollection.removeSeries(XYSeries)",1,2,15,77,2
"org.jfree.data.xy.XYSeriesCollection.removeSeries(int)",2,3,15,103,4
"org.jfree.data.xy.XYSeriesCollection.setAutoWidth(boolean)",1,1,10,24,1
"org.jfree.data.xy.XYSeriesCollection.setIntervalPositionFactor(double)",1,1,11,24,1
"org.jfree.data.xy.XYSeriesCollection.setIntervalWidth(double)",2,1,13,57,2
"org.jfree.data.xy.XYSeriesCollection.vetoableChange(PropertyChangeEvent)",4,1,29,159,4
"org.jfree.data.xy.XYSeriesCollectionTest.test1170825()",1,2,18,59,3
"org.jfree.data.xy.XYSeriesCollectionTest.testAddSeries()",1,2,19,106,2
"org.jfree.data.xy.XYSeriesCollectionTest.testBug3445507()",1,1,19,189,1
"org.jfree.data.xy.XYSeriesCollectionTest.testCloning()",1,1,17,144,1
"org.jfree.data.xy.XYSeriesCollectionTest.testConstructor()",1,1,10,62,1
"org.jfree.data.xy.XYSeriesCollectionTest.testEquals()",1,1,32,365,1
"org.jfree.data.xy.XYSeriesCollectionTest.testGetDomainBounds()",1,1,27,352,1
"org.jfree.data.xy.XYSeriesCollectionTest.testGetRangeBounds()",1,1,34,580,1
"org.jfree.data.xy.XYSeriesCollectionTest.testGetRangeLowerBound()",1,1,31,565,1
"org.jfree.data.xy.XYSeriesCollectionTest.testGetRangeUpperBound()",1,1,31,527,1
"org.jfree.data.xy.XYSeriesCollectionTest.testGetSeries()",1,3,24,164,3
"org.jfree.data.xy.XYSeriesCollectionTest.testGetSeriesByKey()",1,3,24,158,3
"org.jfree.data.xy.XYSeriesCollectionTest.testIndexOf()",1,1,22,273,1
"org.jfree.data.xy.XYSeriesCollectionTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.XYSeriesCollectionTest.testRemoveSeries()",1,3,26,185,3
"org.jfree.data.xy.XYSeriesCollectionTest.testRenameSeries()",1,2,19,100,2
"org.jfree.data.xy.XYSeriesCollectionTest.testSerialization()",1,1,13,62,1
"org.jfree.data.xy.XYSeriesCollectionTest.testSeriesRename()",1,1,26,140,2
"org.jfree.data.xy.XYSeriesTest.testAdd()",1,1,21,422,1
"org.jfree.data.xy.XYSeriesTest.testAddOrUpdate()",1,1,20,338,1
"org.jfree.data.xy.XYSeriesTest.testAddOrUpdate2()",1,1,17,269,1
"org.jfree.data.xy.XYSeriesTest.testAddOrUpdate3()",1,1,14,169,1
"org.jfree.data.xy.XYSeriesTest.testAdditionOfDuplicateXValues()",1,1,18,254,1
"org.jfree.data.xy.XYSeriesTest.testBug1955483()",1,1,12,120,1
"org.jfree.data.xy.XYSeriesTest.testClear()",1,1,17,189,1
"org.jfree.data.xy.XYSeriesTest.testCloning()",1,1,12,100,1
"org.jfree.data.xy.XYSeriesTest.testCloning2()",1,1,17,171,1
"org.jfree.data.xy.XYSeriesTest.testCloning3()",1,1,14,102,1
"org.jfree.data.xy.XYSeriesTest.testDelete()",1,1,21,353,1
"org.jfree.data.xy.XYSeriesTest.testEquals()",1,1,20,208,1
"org.jfree.data.xy.XYSeriesTest.testGetMaxX()",1,1,18,248,1
"org.jfree.data.xy.XYSeriesTest.testGetMaxY()",1,1,18,248,1
"org.jfree.data.xy.XYSeriesTest.testGetMaxY2()",1,1,15,133,1
"org.jfree.data.xy.XYSeriesTest.testGetMinX()",1,1,18,257,1
"org.jfree.data.xy.XYSeriesTest.testGetMinY()",1,1,18,257,1
"org.jfree.data.xy.XYSeriesTest.testHashCode()",1,1,26,325,1
"org.jfree.data.xy.XYSeriesTest.testIndexOf()",1,1,14,167,1
"org.jfree.data.xy.XYSeriesTest.testIndexOf2()",1,1,13,144,1
"org.jfree.data.xy.XYSeriesTest.testIndexOf3()",1,1,13,103,1
"org.jfree.data.xy.XYSeriesTest.testRemove()",1,1,15,162,1
"org.jfree.data.xy.XYSeriesTest.testRemove2()",1,1,24,383,1
"org.jfree.data.xy.XYSeriesTest.testSerialization()",1,1,10,44,1
"org.jfree.data.xy.XYSeriesTest.testSetKey()",1,1,28,228,2
"org.jfree.data.xy.XYSeriesTest.testSetMaximumItemCount()",1,1,15,185,1
"org.jfree.data.xy.XYSeriesTest.testSetMaximumItemCount2()",1,1,13,142,1
"org.jfree.data.xy.XYSeriesTest.testSetMaximumItemCount3()",1,1,21,318,1
"org.jfree.data.xy.XYSeriesTest.testSetMaximumItemCount4()",1,1,18,243,1
"org.jfree.data.xy.XYSeriesTest.testToArray()",1,1,25,394,1
"org.jfree.data.xy.XYSeriesTest.testToArrayExample()",1,1,24,483,1
"org.jfree.data.xy.XYSeriesTest.testUpdate()",1,1,18,158,2
"org.jfree.data.xy.XYSeriesTest.testUpdate2()",1,1,12,127,1
"org.jfree.data.xy.XYSeriesTest.testUpdateByIndex()",1,1,24,385,1
"org.jfree.data.xy.XYSeriesTest.testUpdateByIndex2()",1,1,20,289,1
"org.jfree.data.xy.XYSeriesTest.testUpdateByIndex3()",1,1,13,131,1
"org.jfree.data.xy.XYSeriesTest.testUpdateXY()",1,1,16,192,1
"org.jfree.data.xy.YInterval.YInterval(double,double,double)",1,1,12,41,1
"org.jfree.data.xy.YInterval.equals(Object)",6,1,27,174,6
"org.jfree.data.xy.YInterval.getY()",1,1,8,11,1
"org.jfree.data.xy.YInterval.getYHigh()",1,1,8,11,1
"org.jfree.data.xy.YInterval.getYLow()",1,1,8,11,1
"org.jfree.data.xy.YIntervalDataItem.YIntervalDataItem(double,double,double,double)",1,1,11,41,1
"org.jfree.data.xy.YIntervalDataItem.getX()",1,1,8,4,1
"org.jfree.data.xy.YIntervalDataItem.getYHighValue()",2,2,14,44,2
"org.jfree.data.xy.YIntervalDataItem.getYLowValue()",2,2,14,44,2
"org.jfree.data.xy.YIntervalDataItem.getYValue()",2,2,14,44,2
"org.jfree.data.xy.YIntervalDataItemTest.testCloning()",1,1,11,96,1
"org.jfree.data.xy.YIntervalDataItemTest.testConstructor1()",1,1,11,105,1
"org.jfree.data.xy.YIntervalDataItemTest.testEquals()",1,1,30,400,1
"org.jfree.data.xy.YIntervalDataItemTest.testSerialization()",1,1,10,41,1
"org.jfree.data.xy.YIntervalSeries.YIntervalSeries(Comparable)",1,1,10,13,1
"org.jfree.data.xy.YIntervalSeries.YIntervalSeries(Comparable,boolean,boolean)",1,1,14,22,1
"org.jfree.data.xy.YIntervalSeries.add(YIntervalDataItem,boolean)",1,1,12,19,1
"org.jfree.data.xy.YIntervalSeries.add(double,double,double,double)",1,1,12,43,1
"org.jfree.data.xy.YIntervalSeries.getDataItem(int)",1,1,11,15,1
"org.jfree.data.xy.YIntervalSeries.getX(int)",1,1,11,19,1
"org.jfree.data.xy.YIntervalSeries.getYHighValue(int)",1,1,14,24,1
"org.jfree.data.xy.YIntervalSeries.getYLowValue(int)",1,1,14,24,1
"org.jfree.data.xy.YIntervalSeries.getYValue(int)",1,1,11,24,1
"org.jfree.data.xy.YIntervalSeriesCollection.YIntervalSeriesCollection()",1,1,6,8,1
"org.jfree.data.xy.YIntervalSeriesCollection.addSeries(YIntervalSeries)",1,1,12,43,1
"org.jfree.data.xy.YIntervalSeriesCollection.clone()",1,1,14,36,1
"org.jfree.data.xy.YIntervalSeriesCollection.equals(Object)",3,1,18,82,3
"org.jfree.data.xy.YIntervalSeriesCollection.getEndX(int,int)",1,1,13,23,1
"org.jfree.data.xy.YIntervalSeriesCollection.getEndY(int,int)",1,1,13,41,1
"org.jfree.data.xy.YIntervalSeriesCollection.getEndYValue(int,int)",1,1,14,41,1
"org.jfree.data.xy.YIntervalSeriesCollection.getItemCount(int)",1,1,15,18,1
"org.jfree.data.xy.YIntervalSeriesCollection.getSeries(int)",2,2,16,72,3
"org.jfree.data.xy.YIntervalSeriesCollection.getSeriesCount()",1,1,9,15,1
"org.jfree.data.xy.YIntervalSeriesCollection.getSeriesKey(int)",1,1,16,15,1
"org.jfree.data.xy.YIntervalSeriesCollection.getStartX(int,int)",1,1,13,23,1
"org.jfree.data.xy.YIntervalSeriesCollection.getStartY(int,int)",1,1,13,41,1
"org.jfree.data.xy.YIntervalSeriesCollection.getStartYValue(int,int)",1,1,14,41,1
"org.jfree.data.xy.YIntervalSeriesCollection.getX(int,int)",1,1,13,36,1
"org.jfree.data.xy.YIntervalSeriesCollection.getY(int,int)",1,1,13,41,1
"org.jfree.data.xy.YIntervalSeriesCollection.getYValue(int,int)",1,1,14,41,1
"org.jfree.data.xy.YIntervalSeriesCollection.removeAllSeries()",1,2,16,92,2
"org.jfree.data.xy.YIntervalSeriesCollection.removeSeries(YIntervalSeries)",1,2,16,64,2
"org.jfree.data.xy.YIntervalSeriesCollection.removeSeries(int)",2,2,17,112,3
"org.jfree.data.xy.YIntervalSeriesCollectionTest.test1170825()",1,2,19,59,3
"org.jfree.data.xy.YIntervalSeriesCollectionTest.testCloning()",1,1,17,171,1
"org.jfree.data.xy.YIntervalSeriesCollectionTest.testEquals()",1,1,23,225,1
"org.jfree.data.xy.YIntervalSeriesCollectionTest.testPublicCloneable()",1,1,8,15,1
"org.jfree.data.xy.YIntervalSeriesCollectionTest.testRemoveSeries()",1,1,28,180,3
"org.jfree.data.xy.YIntervalSeriesCollectionTest.testSerialization()",1,1,12,60,1
"org.jfree.data.xy.YIntervalSeriesTest.seriesChanged(SeriesChangeEvent)",1,1,8,11,1
"org.jfree.data.xy.YIntervalSeriesTest.testAdd()",1,1,21,453,1
"org.jfree.data.xy.YIntervalSeriesTest.testAdditionOfDuplicateXValues()",1,1,18,271,1
"org.jfree.data.xy.YIntervalSeriesTest.testClear()",1,1,16,135,1
"org.jfree.data.xy.YIntervalSeriesTest.testCloning()",1,1,12,112,1
"org.jfree.data.xy.YIntervalSeriesTest.testEquals()",1,1,39,483,1
"org.jfree.data.xy.YIntervalSeriesTest.testIndexOf()",1,1,11,103,1
"org.jfree.data.xy.YIntervalSeriesTest.testIndexOf2()",1,1,13,168,1
"org.jfree.data.xy.YIntervalSeriesTest.testRemove()",1,1,15,188,1
"org.jfree.data.xy.YIntervalSeriesTest.testSerialization()",1,1,10,55,1
"org.jfree.data.xy.YIntervalSeriesTest.testSetMaximumItemCount()",1,1,15,212,1
"org.jfree.data.xy.YIntervalSeriesTest.testSetMaximumItemCount2()",1,1,13,168,1
"org.jfree.data.xy.YIntervalTest.testCloning()",1,1,8,28,1
"org.jfree.data.xy.YIntervalTest.testEquals()",1,1,21,261,1
"org.jfree.data.xy.YIntervalTest.testSerialization()",1,1,9,36,1
"org.jfree.data.xy.YWithXInterval.YWithXInterval(double,double,double)",1,1,12,41,1
"org.jfree.data.xy.YWithXInterval.equals(Object)",6,1,27,174,6
"org.jfree.data.xy.YWithXInterval.getXHigh()",1,1,8,11,1
"org.jfree.data.xy.YWithXInterval.getXLow()",1,1,8,11,1
"org.jfree.data.xy.YWithXInterval.getY()",1,1,8,11,1
"org.jfree.data.xy.YWithXIntervalTest.testCloning()",1,1,8,28,1
"org.jfree.data.xy.YWithXIntervalTest.testEquals()",1,1,21,261,1
"org.jfree.data.xy.YWithXIntervalTest.testSerialization()",1,1,9,36,1

Class,LOC,OCavg,V,WMC
"org.jfree.chart.AreaChartTest",98,1.00,"1,099",6
"org.jfree.chart.AreaChartTest.LocalListener",16,1.00,33,1
"org.jfree.chart.BarChartTest",108,1.00,"1,125",6
"org.jfree.chart.BarChartTest.LocalListener",17,1.00,38,1
"org.jfree.chart.ChartColor",111,1.00,"1,318",2
"org.jfree.chart.ChartFactory","1,896",2.59,"16,509",140
"org.jfree.chart.ChartFrame",43,1.33,158,4
"org.jfree.chart.ChartHints",24,1.00,235,1
"org.jfree.chart.ChartHints.Key",34,2.50,165,5
"org.jfree.chart.ChartMouseEvent",55,1.00,164,4
"org.jfree.chart.ChartPanel","2,592",2.48,"35,648",270
"org.jfree.chart.ChartPanelTest",266,1.00,"2,737",17
"org.jfree.chart.ChartRenderingInfo",176,1.67,906,20
"org.jfree.chart.ChartRenderingInfoTest",74,1.00,923,4
"org.jfree.chart.ChartTransferable",203,1.86,"1,292",13
"org.jfree.chart.ChartUtils",593,1.10,"3,421",32
"org.jfree.chart.GanttChartTest",197,1.00,"3,164",9
"org.jfree.chart.GanttChartTest.LocalListener",17,1.00,33,1
"org.jfree.chart.HashUtils",276,2.62,"2,390",34
"org.jfree.chart.HashUtilsTest",19,1.00,137,1
"org.jfree.chart.JFreeChart","1,404",2.07,"13,933",153
"org.jfree.chart.JFreeChartTest",356,1.00,"5,463",15
"org.jfree.chart.LegendItem",969,1.44,"6,635",82
"org.jfree.chart.LegendItemCollection",93,1.38,431,11
"org.jfree.chart.LegendItemCollectionTest",59,1.00,687,3
"org.jfree.chart.LegendItemTest",265,1.00,"6,613",4
"org.jfree.chart.LegendRenderingOrder",9,n/a,2,0
"org.jfree.chart.LineChartTest",95,1.00,"1,034",6
"org.jfree.chart.LineChartTest.LocalListener",17,1.00,33,1
"org.jfree.chart.MeterChartTest",21,1.00,149,1
"org.jfree.chart.MouseWheelHandler",94,2.40,688,12
"org.jfree.chart.PaintMap",154,1.78,998,16
"org.jfree.chart.PaintMapTest",115,1.00,"1,120",7
"org.jfree.chart.PieChart3DTest",61,1.00,541,4
"org.jfree.chart.PieChart3DTest.LocalListener",16,1.00,33,1
"org.jfree.chart.PieChartTest",41,1.00,305,3
"org.jfree.chart.PieChartTest.LocalListener",17,1.00,33,1
"org.jfree.chart.PolarChartPanel",188,2.57,"1,586",18
"org.jfree.chart.ScatterPlotTest",82,1.00,882,5
"org.jfree.chart.ScatterPlotTest.LocalListener",17,1.00,38,1
"org.jfree.chart.StackedAreaChartTest",105,1.00,"1,125",6
"org.jfree.chart.StackedAreaChartTest.LocalListener",16,1.00,38,1
"org.jfree.chart.StackedBarChartTest",106,1.00,"1,125",6
"org.jfree.chart.StackedBarChartTest.LocalListener",16,1.00,38,1
"org.jfree.chart.StandardChartTheme","1,542",2.13,"17,111",198
"org.jfree.chart.StandardChartThemeTest",184,1.00,"4,311",3
"org.jfree.chart.StrokeMap",151,1.78,998,16
"org.jfree.chart.StrokeMapTest",101,1.00,927,6
"org.jfree.chart.TestUtils",43,2.00,294,4
"org.jfree.chart.TimeSeriesChartTest",89,1.00,900,5
"org.jfree.chart.TimeSeriesChartTest.LocalListener",17,1.00,38,1
"org.jfree.chart.WaterfallChartTest",82,1.00,609,5
"org.jfree.chart.XYAreaChartTest",82,1.00,882,5
"org.jfree.chart.XYAreaChartTest.LocalListener",17,1.00,38,1
"org.jfree.chart.XYBarChartTest",83,1.00,900,5
"org.jfree.chart.XYBarChartTest.LocalListener",17,1.00,38,1
"org.jfree.chart.XYLineChartTest",82,1.00,882,5
"org.jfree.chart.XYLineChartTest.LocalListener",17,1.00,38,1
"org.jfree.chart.XYStepAreaChartTest",82,1.00,882,5
"org.jfree.chart.XYStepAreaChartTest.LocalListener",17,1.00,38,1
"org.jfree.chart.XYStepChartTest",92,1.00,909,5
"org.jfree.chart.XYStepChartTest.LocalListener",17,1.00,38,1
"org.jfree.chart.annotations.AbstractAnnotation",154,1.36,612,15
"org.jfree.chart.annotations.AbstractXYAnnotation",143,2.00,720,16
"org.jfree.chart.annotations.CategoryLineAnnotation",324,1.53,"2,902",29
"org.jfree.chart.annotations.CategoryLineAnnotationTest",95,1.00,"1,078",5
"org.jfree.chart.annotations.CategoryPointerAnnotation",420,1.52,"4,710",35
"org.jfree.chart.annotations.CategoryPointerAnnotationTest",115,1.00,"1,431",5
"org.jfree.chart.annotations.CategoryTextAnnotation",195,1.73,"1,622",19
"org.jfree.chart.annotations.CategoryTextAnnotationTest",76,1.00,614,5
"org.jfree.chart.annotations.TextAnnotation",264,1.47,"1,871",25
"org.jfree.chart.annotations.TextAnnotationTest",110,1.00,"1,370",5
"org.jfree.chart.annotations.XYBoxAnnotation",223,2.56,"2,546",23
"org.jfree.chart.annotations.XYBoxAnnotationTest",131,1.00,"2,111",6
"org.jfree.chart.annotations.XYDataImageAnnotation",294,1.75,"2,179",28
"org.jfree.chart.annotations.XYDrawableAnnotation",178,2.67,"2,126",16
"org.jfree.chart.annotations.XYDrawableAnnotationTest",91,1.00,"1,275",5
"org.jfree.chart.annotations.XYDrawableAnnotationTest.TestDrawable",42,1.50,112,6
"org.jfree.chart.annotations.XYImageAnnotation",228,1.83,"1,714",22
"org.jfree.chart.annotations.XYImageAnnotationTest",78,n/a,2,0
"org.jfree.chart.annotations.XYLineAnnotation",216,2.62,"2,509",21
"org.jfree.chart.annotations.XYLineAnnotationTest",96,1.00,"1,493",5
"org.jfree.chart.annotations.XYPointerAnnotation",429,1.61,"5,041",37
"org.jfree.chart.annotations.XYPointerAnnotationTest",114,1.00,"1,421",5
"org.jfree.chart.annotations.XYPolygonAnnotation",269,2.23,"2,715",29
"org.jfree.chart.annotations.XYPolygonAnnotationTest",100,1.00,"1,766",5
"org.jfree.chart.annotations.XYShapeAnnotation",211,2.33,"2,527",21
"org.jfree.chart.annotations.XYShapeAnnotationTest",113,1.00,"1,506",5
"org.jfree.chart.annotations.XYTextAnnotation",541,1.58,"4,457",49
"org.jfree.chart.annotations.XYTextAnnotationTest",116,1.00,"1,703",5
"org.jfree.chart.annotations.XYTitleAnnotation",298,2.40,"3,299",36
"org.jfree.chart.annotations.XYTitleAnnotationTest",96,1.00,"1,251",5
"org.jfree.chart.axis.Axis","1,446",2.07,"15,182",151
"org.jfree.chart.axis.AxisCollection",83,1.67,357,10
"org.jfree.chart.axis.AxisLabelLocation",13,n/a,2,0
"org.jfree.chart.axis.AxisLocation",51,3.00,197,6
"org.jfree.chart.axis.AxisLocationTest",39,1.00,220,3
"org.jfree.chart.axis.AxisSpace",301,2.26,"3,002",43
"org.jfree.chart.axis.AxisSpaceTest",53,1.00,500,3
"org.jfree.chart.axis.AxisState",130,1.31,574,17
"org.jfree.chart.axis.AxisTest",187,1.00,"2,950",4
"org.jfree.chart.axis.CategoryAnchor",12,n/a,2,0
"org.jfree.chart.axis.CategoryAnchorTest",38,1.00,212,3
"org.jfree.chart.axis.CategoryAxis","1,275",2.52,"15,487",136
"org.jfree.chart.axis.CategoryAxisTest",135,1.00,"1,941",5
"org.jfree.chart.axis.CategoryLabelPosition",188,1.67,"1,196",20
"org.jfree.chart.axis.CategoryLabelPositionTest",90,1.00,"1,115",3
"org.jfree.chart.axis.CategoryLabelPositions",324,1.91,"2,843",21
"org.jfree.chart.axis.CategoryLabelPositionsTest",120,1.00,"1,118",3
"org.jfree.chart.axis.CategoryLabelWidthType",9,n/a,2,0
"org.jfree.chart.axis.CategoryLabelWidthTypeTest",37,1.00,165,3
"org.jfree.chart.axis.CategoryTick",94,1.83,607,11
"org.jfree.chart.axis.CategoryTickTest",84,1.00,"1,194",4
"org.jfree.chart.axis.CompassFormat",103,1.29,665,9
"org.jfree.chart.axis.CyclicNumberAxis",967,3.53,"12,187",120
"org.jfree.chart.axis.CyclicNumberAxis.CycleBoundTick",26,1.00,77,1
"org.jfree.chart.axis.CyclicNumberAxisTest",79,1.00,966,4
"org.jfree.chart.axis.DateAxis","1,502",3.00,"22,770",153
"org.jfree.chart.axis.DateAxis.DefaultTimeline",110,1.38,254,11
"org.jfree.chart.axis.DateAxisTest",967,1.00,"26,861",25
"org.jfree.chart.axis.DateAxisTest.MyDateAxis",14,1.00,44,2
"org.jfree.chart.axis.DateTick",81,1.60,353,8
"org.jfree.chart.axis.DateTickMarkPosition",12,n/a,2,0
"org.jfree.chart.axis.DateTickMarkPositionTest",41,1.00,240,3
"org.jfree.chart.axis.DateTickTest",82,1.00,"1,441",4
"org.jfree.chart.axis.DateTickUnit",296,1.88,"2,120",32
"org.jfree.chart.axis.DateTickUnitTest",35,1.00,194,3
"org.jfree.chart.axis.DateTickUnitType",114,3.00,807,15
"org.jfree.chart.axis.ExtendedCategoryAxis",177,1.82,"1,260",20
"org.jfree.chart.axis.ExtendedCategoryAxisTest",96,1.00,"1,226",5
"org.jfree.chart.axis.LogAxis",931,2.42,"11,061",97
"org.jfree.chart.axis.LogAxisTest",202,1.00,"3,047",12
"org.jfree.chart.axis.LogTick",30,1.00,78,2
"org.jfree.chart.axis.LogarithmicAxis",904,4.07,"10,670",114
"org.jfree.chart.axis.LogarithmicAxisTest",151,1.00,"2,256",10
"org.jfree.chart.axis.LogarithmicAxisTest.MyLogarithmicAxis",17,1.00,50,2
"org.jfree.chart.axis.MarkerAxisBand",187,2.57,"2,143",18
"org.jfree.chart.axis.MarkerAxisBandTest",58,1.00,942,3
"org.jfree.chart.axis.ModuloAxis",361,2.35,"3,862",40
"org.jfree.chart.axis.ModuloAxisTest",50,1.00,451,4
"org.jfree.chart.axis.MonthDateFormat",181,1.90,"1,276",19
"org.jfree.chart.axis.MonthDateFormatTest",87,1.00,"1,042",4
"org.jfree.chart.axis.NumberAxis",957,2.92,"10,737",111
"org.jfree.chart.axis.NumberAxisTest",300,1.00,"4,217",12
"org.jfree.chart.axis.NumberTick",50,1.00,155,3
"org.jfree.chart.axis.NumberTickUnit",101,1.71,612,12
"org.jfree.chart.axis.NumberTickUnitSource",176,3.25,"2,133",39
"org.jfree.chart.axis.NumberTickUnitTest",51,1.00,417,4
"org.jfree.chart.axis.PeriodAxis","1,022",2.48,"13,325",114
"org.jfree.chart.axis.PeriodAxisLabelInfo",268,1.62,"2,064",26
"org.jfree.chart.axis.PeriodAxisLabelInfoTest",116,1.00,"2,308",5
"org.jfree.chart.axis.PeriodAxisTest",197,1.00,"3,142",8
"org.jfree.chart.axis.QuarterDateFormat",134,1.71,968,12
"org.jfree.chart.axis.QuarterDateFormatTest",72,1.00,893,4
"org.jfree.chart.axis.StandardTickUnitSource",81,1.17,343,7
"org.jfree.chart.axis.StandardTickUnitSourceTest",23,1.00,59,2
"org.jfree.chart.axis.SubCategoryAxis",345,2.86,"3,887",40
"org.jfree.chart.axis.SubCategoryAxisTest",85,1.00,921,5
"org.jfree.chart.axis.SymbolAxis",627,3.29,"6,552",69
"org.jfree.chart.axis.SymbolAxisTest",56,1.00,710,3
"org.jfree.chart.axis.Tick",117,1.75,605,14
"org.jfree.chart.axis.TickType",11,n/a,2,0
"org.jfree.chart.axis.TickUnit",136,2.00,701,16
"org.jfree.chart.axis.TickUnits",135,1.56,809,14
"org.jfree.chart.axis.TickUnitsTest",39,1.00,275,3
"org.jfree.chart.axis.ValueAxis","1,480",2.36,"15,364",163
"org.jfree.chart.axis.ValueAxisTest",158,1.00,"2,464",4
"org.jfree.chart.axis.ValueTick",92,1.80,412,9
"org.jfree.chart.block.AbstractBlock",521,1.46,"3,818",54
"org.jfree.chart.block.AbstractBlockTest",83,1.00,"1,299",3
"org.jfree.chart.block.BlockBorder",166,1.73,"1,455",19
"org.jfree.chart.block.BlockBorderTest",50,1.00,467,3
"org.jfree.chart.block.BlockContainer",202,1.79,"1,374",25
"org.jfree.chart.block.BlockContainerTest",45,1.00,376,3
"org.jfree.chart.block.BlockParams",85,1.00,212,7
"org.jfree.chart.block.BlockResult",31,1.00,56,3
"org.jfree.chart.block.BorderArrangement",454,7.00,"8,270",70
"org.jfree.chart.block.BorderArrangementTest",668,1.00,"14,739",6
"org.jfree.chart.block.CenterArrangement",260,2.38,"1,875",31
"org.jfree.chart.block.ColorBlock",120,1.38,621,11
"org.jfree.chart.block.ColorBlockTest",64,1.00,841,3
"org.jfree.chart.block.ColumnArrangement",314,3.82,"3,227",42
"org.jfree.chart.block.ColumnArrangementTest",59,1.00,535,3
"org.jfree.chart.block.EmptyBlock",71,1.00,239,5
"org.jfree.chart.block.EmptyBlockTest",49,1.00,408,3
"org.jfree.chart.block.FlowArrangement",369,3.29,"3,695",46
"org.jfree.chart.block.FlowArrangementTest",59,1.00,518,3
"org.jfree.chart.block.GridArrangement",370,3.64,"4,267",51
"org.jfree.chart.block.GridArrangementTest",228,1.00,"2,816",19
"org.jfree.chart.block.LabelBlock",338,1.55,"2,373",34
"org.jfree.chart.block.LabelBlockTest",75,1.00,"1,047",3
"org.jfree.chart.block.LengthConstraintType",11,n/a,2,0
"org.jfree.chart.block.LineBorder",163,2.11,"1,732",19
"org.jfree.chart.block.LineBorderTest",54,1.00,651,3
"org.jfree.chart.block.RectangleConstraint",282,1.74,"2,037",33
"org.jfree.chart.block.RectangleConstraintTest",79,1.00,"1,128",1
"org.jfree.chart.date.SerialDate",814,2.36,"7,607",78
"org.jfree.chart.date.SpreadsheetDate",365,1.70,"2,922",34
"org.jfree.chart.editor.ChartEditorManager",43,1.00,85,4
"org.jfree.chart.editor.DefaultAxisEditor",387,1.65,"3,434",28
"org.jfree.chart.editor.DefaultChartEditor",179,1.38,"2,211",11
"org.jfree.chart.editor.DefaultChartEditorFactory",21,1.00,20,2
"org.jfree.chart.editor.DefaultLogAxisEditor",104,1.71,855,12
"org.jfree.chart.editor.DefaultNumberAxisEditor",104,1.71,"1,047",12
"org.jfree.chart.editor.DefaultPlotEditor",486,3.94,"6,075",67
"org.jfree.chart.editor.DefaultPolarPlotEditor",140,1.56,"1,408",14
"org.jfree.chart.editor.DefaultTitleEditor",199,1.90,"2,202",19
"org.jfree.chart.editor.DefaultValueAxisEditor",307,1.74,"3,485",33
"org.jfree.chart.encoders.EncoderUtil",134,1.00,430,8
"org.jfree.chart.encoders.ImageEncoderFactory",96,1.17,470,7
"org.jfree.chart.encoders.SunJPEGEncoderAdapter",109,1.14,494,8
"org.jfree.chart.encoders.SunPNGEncoderAdapter",75,1.00,175,6
"org.jfree.chart.entity.AxisEntity",148,1.60,796,16
"org.jfree.chart.entity.CategoryItemEntity",151,1.56,644,14
"org.jfree.chart.entity.CategoryItemEntityTest",65,1.00,963,3
"org.jfree.chart.entity.CategoryLabelEntity",77,1.60,425,8
"org.jfree.chart.entity.CategoryLabelEntityTest",56,1.00,718,3
"org.jfree.chart.entity.ChartEntity",319,1.85,"2,463",37
"org.jfree.chart.entity.JFreeChartEntity",147,1.60,796,16
"org.jfree.chart.entity.LegendItemEntity",127,1.62,503,13
"org.jfree.chart.entity.LegendItemEntityTest",58,1.00,653,3
"org.jfree.chart.entity.PieSectionEntity",172,1.50,912,18
"org.jfree.chart.entity.PieSectionEntityTest",70,1.00,986,3
"org.jfree.chart.entity.PlotEntity",147,1.60,796,16
"org.jfree.chart.entity.StandardEntityCollection",139,1.45,817,16
"org.jfree.chart.entity.StandardEntityCollectionTest",58,1.00,573,3
"org.jfree.chart.entity.TickLabelEntity",19,1.00,57,1
"org.jfree.chart.entity.TickLabelEntityTest",50,1.00,551,3
"org.jfree.chart.entity.TitleEntity",147,1.60,796,16
"org.jfree.chart.entity.XYAnnotationEntity",64,2.00,322,8
"org.jfree.chart.entity.XYItemEntity",115,1.44,584,13
"org.jfree.chart.entity.XYItemEntityTest",58,1.00,780,3
"org.jfree.chart.event.AnnotationChangeEvent",34,1.00,66,2
"org.jfree.chart.event.AxisChangeEvent",24,1.00,49,2
"org.jfree.chart.event.ChartChangeEvent",74,1.00,183,7
"org.jfree.chart.event.ChartChangeEventType",11,n/a,2,0
"org.jfree.chart.event.ChartProgressEvent",79,1.00,281,7
"org.jfree.chart.event.MarkerChangeEvent",32,1.00,49,2
"org.jfree.chart.event.OverlayChangeEvent",15,1.00,18,1
"org.jfree.chart.event.PlotChangeEvent",26,1.00,49,2
"org.jfree.chart.event.RendererChangeEvent",56,1.00,121,4
"org.jfree.chart.event.TitleChangeEvent",24,1.00,49,2
"org.jfree.chart.imagemap.DynamicDriveToolTipTagFragmentGenerator",43,1.00,147,3
"org.jfree.chart.imagemap.DynamicDriveToolTipTagFragmentGeneratorTest",19,1.00,60,1
"org.jfree.chart.imagemap.ImageMapUtils",199,3.29,"1,558",23
"org.jfree.chart.imagemap.ImageMapUtilsTest",31,1.00,287,2
"org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGenerator",26,1.00,39,2
"org.jfree.chart.imagemap.OverLIBToolTipTagFragmentGeneratorTest",19,1.00,60,1
"org.jfree.chart.imagemap.StandardToolTipTagFragmentGenerator",24,1.00,39,2
"org.jfree.chart.imagemap.StandardToolTipTagFragmentGeneratorTest",17,1.00,51,1
"org.jfree.chart.imagemap.StandardURLTagFragmentGenerator",24,1.00,34,2
"org.jfree.chart.imagemap.StandardURLTagFragmentGeneratorTest",18,1.00,74,1
"org.jfree.chart.labels.AbstractCategoryItemLabelGenerator",242,1.85,"1,828",24
"org.jfree.chart.labels.AbstractPieItemLabelGenerator",170,2.22,"1,293",20
"org.jfree.chart.labels.AbstractXYItemLabelGenerator",274,1.94,"2,151",31
"org.jfree.chart.labels.BoxAndWhiskerToolTipGenerator",91,1.75,664,7
"org.jfree.chart.labels.BoxAndWhiskerToolTipGeneratorTest",70,1.00,441,5
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGenerator",99,2.00,794,8
"org.jfree.chart.labels.BoxAndWhiskerXYToolTipGeneratorTest",89,1.00,683,5
"org.jfree.chart.labels.BubbleXYItemLabelGenerator",197,1.90,"1,380",19
"org.jfree.chart.labels.BubbleXYItemLabelGeneratorTest",120,1.00,"1,647",6
"org.jfree.chart.labels.CustomXYItemLabelGeneratorTest",44,1.00,291,3
"org.jfree.chart.labels.CustomXYToolTipGenerator",128,2.25,862,18
"org.jfree.chart.labels.HighLowItemLabelGenerator",154,3.00,"1,435",21
"org.jfree.chart.labels.HighLowItemLabelGeneratorTest",66,1.00,439,5
"org.jfree.chart.labels.IntervalCategoryItemLabelGenerator",80,2.25,623,9
"org.jfree.chart.labels.IntervalCategoryItemLabelGeneratorTest",74,1.00,445,5
"org.jfree.chart.labels.IntervalCategoryToolTipGenerator",97,2.40,752,12
"org.jfree.chart.labels.IntervalCategoryToolTipGeneratorTest",88,1.00,504,6
"org.jfree.chart.labels.IntervalXYItemLabelGenerator",201,2.22,"1,734",20
"org.jfree.chart.labels.IntervalXYToolTipGenerator",198,2.22,"1,734",20
"org.jfree.chart.labels.ItemLabelAnchor",56,n/a,2,0
"org.jfree.chart.labels.ItemLabelAnchorTest",22,1.00,75,2
"org.jfree.chart.labels.ItemLabelPosition",119,1.75,649,14
"org.jfree.chart.labels.ItemLabelPositionTest",23,1.00,50,2
"org.jfree.chart.labels.MultipleXYSeriesLabelGenerator",168,2.11,"1,465",19
"org.jfree.chart.labels.MultipleXYSeriesLabelGeneratorTest",78,1.00,576,5
"org.jfree.chart.labels.StandardCategoryItemLabelGenerator",89,1.33,307,8
"org.jfree.chart.labels.StandardCategoryItemLabelGeneratorTest",114,1.00,999,7
"org.jfree.chart.labels.StandardCategorySeriesLabelGenerator",102,1.43,505,10
"org.jfree.chart.labels.StandardCategorySeriesLabelGeneratorTest",81,1.00,573,6
"org.jfree.chart.labels.StandardCategoryToolTipGenerator",74,1.40,279,7
"org.jfree.chart.labels.StandardCategoryToolTipGeneratorTest",94,1.00,612,6
"org.jfree.chart.labels.StandardCrosshairLabelGenerator",104,1.86,508,13
"org.jfree.chart.labels.StandardPieSectionLabelGenerator",180,1.27,676,14
"org.jfree.chart.labels.StandardPieSectionLabelGeneratorTest",95,1.00,778,5
"org.jfree.chart.labels.StandardPieToolTipGenerator",91,1.00,250,7
"org.jfree.chart.labels.StandardPieToolTipGeneratorTest",87,1.00,733,5
"org.jfree.chart.labels.StandardXYItemLabelGenerator",132,1.22,422,11
"org.jfree.chart.labels.StandardXYItemLabelGeneratorTest",119,1.00,"1,572",5
"org.jfree.chart.labels.StandardXYSeriesLabelGenerator",109,1.43,505,10
"org.jfree.chart.labels.StandardXYSeriesLabelGeneratorTest",79,1.00,520,6
"org.jfree.chart.labels.StandardXYToolTipGenerator",130,1.22,444,11
"org.jfree.chart.labels.StandardXYToolTipGeneratorTest",93,1.00,"1,015",5
"org.jfree.chart.labels.StandardXYZToolTipGenerator",180,1.89,"1,202",17
"org.jfree.chart.labels.StandardXYZToolTipGeneratorTest",111,1.00,"1,331",5
"org.jfree.chart.labels.SymbolicXYItemLabelGenerator",111,2.00,738,12
"org.jfree.chart.labels.SymbolicXYItemLabelGeneratorTest",57,1.00,253,5
"org.jfree.chart.needle.ArrowNeedle",111,2.40,"1,073",12
"org.jfree.chart.needle.ArrowNeedleTest",39,1.00,249,3
"org.jfree.chart.needle.LineNeedle",67,1.75,460,7
"org.jfree.chart.needle.LineNeedleTest",35,1.00,163,3
"org.jfree.chart.needle.LongNeedle",118,2.40,"1,357",12
"org.jfree.chart.needle.LongNeedleTest",35,1.00,163,3
"org.jfree.chart.needle.MeterNeedle",320,1.60,"2,526",40
"org.jfree.chart.needle.MeterNeedleTest",43,1.00,736,1
"org.jfree.chart.needle.MiddlePinNeedle",88,2.25,906,9
"org.jfree.chart.needle.MiddlePinNeedleTest",35,1.00,163,3
"org.jfree.chart.needle.PinNeedle",86,2.25,870,9
"org.jfree.chart.needle.PinNeedleTest",35,1.00,163,3
"org.jfree.chart.needle.PlumNeedle",77,2.00,678,8
"org.jfree.chart.needle.PlumNeedleTest",35,1.00,163,3
"org.jfree.chart.needle.PointerNeedle",98,2.75,"1,018",11
"org.jfree.chart.needle.PointerNeedleTest",35,1.00,163,3
"org.jfree.chart.needle.ShipNeedle",76,2.00,672,8
"org.jfree.chart.needle.ShipNeedleTest",35,1.00,163,3
"org.jfree.chart.needle.WindNeedle",68,2.00,575,8
"org.jfree.chart.needle.WindNeedleTest",35,1.00,163,3
"org.jfree.chart.panel.AbstractOverlay",61,1.40,302,7
"org.jfree.chart.panel.CrosshairOverlay",503,4.05,"6,614",81
"org.jfree.chart.panel.CrosshairOverlayTest",43,1.00,403,3
"org.jfree.chart.plot.AbstractPieLabelDistributor",57,1.00,177,5
"org.jfree.chart.plot.CategoryCrosshairState",120,1.86,684,13
"org.jfree.chart.plot.CategoryMarker",119,1.62,593,13
"org.jfree.chart.plot.CategoryMarkerTest",129,1.00,"1,847",6
"org.jfree.chart.plot.CategoryPlot","4,492",2.46,"48,348",541
"org.jfree.chart.plot.CategoryPlotTest","1,025",1.00,"20,137",37
"org.jfree.chart.plot.CenterTextMode",13,n/a,2,0
"org.jfree.chart.plot.CombinedDomainCategoryPlot",557,2.84,"6,151",71
"org.jfree.chart.plot.CombinedDomainCategoryPlotTest",193,1.00,"2,434",9
"org.jfree.chart.plot.CombinedDomainXYPlot",618,2.83,"6,329",85
"org.jfree.chart.plot.CombinedDomainXYPlotTest",192,1.00,"2,808",10
"org.jfree.chart.plot.CombinedRangeCategoryPlot",455,3.05,"5,114",61
"org.jfree.chart.plot.CombinedRangeCategoryPlotTest",187,1.00,"2,375",9
"org.jfree.chart.plot.CombinedRangeXYPlot",593,2.79,"6,260",78
"org.jfree.chart.plot.CombinedRangeXYPlotTest",184,1.00,"2,746",9
"org.jfree.chart.plot.CompassPlot",697,2.53,"9,650",86
"org.jfree.chart.plot.CompassPlotTest",76,1.00,"1,025",3
"org.jfree.chart.plot.Crosshair",620,1.43,"4,898",57
"org.jfree.chart.plot.CrosshairState",308,1.42,"1,513",27
"org.jfree.chart.plot.CrosshairTest",117,1.00,"1,824",5
"org.jfree.chart.plot.DatasetRenderingOrder",17,n/a,2,0
"org.jfree.chart.plot.DefaultDrawingSupplier",414,2.59,"5,370",44
"org.jfree.chart.plot.DefaultDrawingSupplierTest",124,1.00,"1,889",3
"org.jfree.chart.plot.DialShape",12,n/a,2,0
"org.jfree.chart.plot.FastScatterPlot",922,1.98,"8,546",97
"org.jfree.chart.plot.FastScatterPlotTest",152,1.17,"2,505",7
"org.jfree.chart.plot.IntervalMarker",159,1.55,913,17
"org.jfree.chart.plot.IntervalMarkerTest",86,1.00,917,6
"org.jfree.chart.plot.Marker",550,1.51,"3,814",56
"org.jfree.chart.plot.MarkerTest",317,1.00,"3,606",15
"org.jfree.chart.plot.MeterInterval",149,1.70,946,17
"org.jfree.chart.plot.MeterIntervalTest",48,1.00,356,3
"org.jfree.chart.plot.MeterPlot","1,060",2.05,"13,209",113
"org.jfree.chart.plot.MeterPlotTest",166,1.00,"2,955",4
"org.jfree.chart.plot.MultiplePiePlot",529,2.54,"5,949",61
"org.jfree.chart.plot.MultiplePiePlotTest",122,1.00,"1,762",6
"org.jfree.chart.plot.MyPlotChangeListener",37,1.00,73,4
"org.jfree.chart.plot.PieLabelDistributor",164,2.89,"1,985",26
"org.jfree.chart.plot.PieLabelLinkStyle",14,n/a,2,0
"org.jfree.chart.plot.PieLabelRecord",215,1.81,"1,399",29
"org.jfree.chart.plot.PieLabelRecordTest",65,1.00,"1,217",3
"org.jfree.chart.plot.PiePlot","2,955",2.20,"35,729",288
"org.jfree.chart.plot.PiePlot3D",820,7.17,"15,007",86
"org.jfree.chart.plot.PiePlot3DTest",53,1.00,438,3
"org.jfree.chart.plot.PiePlotState",201,1.00,663,21
"org.jfree.chart.plot.PiePlotTest",523,1.00,"10,628",16
"org.jfree.chart.plot.PiePlotTest.NullLegendLabelGenerator",11,1.00,23,2
"org.jfree.chart.plot.Plot","1,276",2.26,"10,658",154
"org.jfree.chart.plot.PlotOrientation",33,1.00,42,2
"org.jfree.chart.plot.PlotOrientationTest",32,1.00,128,2
"org.jfree.chart.plot.PlotRenderingInfo",208,1.71,"1,313",24
"org.jfree.chart.plot.PlotRenderingInfoTest",61,1.00,925,3
"org.jfree.chart.plot.PlotState",21,1.00,30,2
"org.jfree.chart.plot.PlotTest",101,1.00,"1,588",1
"org.jfree.chart.plot.PolarAxisLocation",23,n/a,2,0
"org.jfree.chart.plot.PolarPlot","1,874",2.39,"20,668",222
"org.jfree.chart.plot.PolarPlotTest",258,1.00,"6,337",8
"org.jfree.chart.plot.RingPlot",591,2.07,"5,477",62
"org.jfree.chart.plot.RingPlotTest",94,1.00,"1,365",3
"org.jfree.chart.plot.SeriesRenderingOrder",16,n/a,2,0
"org.jfree.chart.plot.SpiderWebPlot","1,346",2.04,"14,996",139
"org.jfree.chart.plot.SpiderWebPlotTest",251,1.00,"4,959",5
"org.jfree.chart.plot.ThermometerPlot","1,393",2.11,"16,222",152
"org.jfree.chart.plot.ThermometerPlotTest",125,1.00,"2,023",4
"org.jfree.chart.plot.ValueMarker",98,1.67,420,10
"org.jfree.chart.plot.ValueMarkerTest",150,1.00,"2,429",7
"org.jfree.chart.plot.WaferMapPlot",323,2.46,"4,001",32
"org.jfree.chart.plot.XYCrosshairState",11,1.00,6,1
"org.jfree.chart.plot.XYPlot","4,984",2.71,"58,679",623
"org.jfree.chart.plot.XYPlotTest","1,169",1.00,"23,977",47
"org.jfree.chart.plot.dial.AbstractDialLayer",152,1.36,751,15
"org.jfree.chart.plot.dial.AbstractDialLayerTest",51,1.00,333,3
"org.jfree.chart.plot.dial.ArcDialFrame",413,1.44,"3,817",36
"org.jfree.chart.plot.dial.ArcDialFrameTest",95,1.00,"1,119",4
"org.jfree.chart.plot.dial.DialBackground",192,1.38,954,18
"org.jfree.chart.plot.dial.DialBackgroundTest",90,1.00,920,4
"org.jfree.chart.plot.dial.DialCap",255,1.44,"1,657",23
"org.jfree.chart.plot.dial.DialCapTest",101,1.00,"1,224",4
"org.jfree.chart.plot.dial.DialLayerChangeEvent",27,1.00,49,2
"org.jfree.chart.plot.dial.DialPlot",699,1.95,"6,744",80
"org.jfree.chart.plot.dial.DialPlotTest",204,1.00,"2,467",10
"org.jfree.chart.plot.dial.DialPointer",131,1.40,"4,332",14
"org.jfree.chart.plot.dial.DialPointer.Pin",160,1.36,"1,208",15
"org.jfree.chart.plot.dial.DialPointer.Pointer",234,1.38,"2,163",18
"org.jfree.chart.plot.dial.DialPointerTest",106,1.00,961,7
"org.jfree.chart.plot.dial.DialTextAnnotation",309,1.45,"2,300",29
"org.jfree.chart.plot.dial.DialTextAnnotationTest",90,1.00,983,4
"org.jfree.chart.plot.dial.DialValueIndicator",635,1.50,"5,421",60
"org.jfree.chart.plot.dial.DialValueIndicatorTest",129,1.00,"1,915",4
"org.jfree.chart.plot.dial.MyDialLayerChangeListener",18,1.00,12,2
"org.jfree.chart.plot.dial.StandardDialFrame",270,1.41,"2,007",24
"org.jfree.chart.plot.dial.StandardDialFrameTest",80,1.00,867,4
"org.jfree.chart.plot.dial.StandardDialRange",342,1.55,"2,736",34
"org.jfree.chart.plot.dial.StandardDialRangeTest",73,1.00,703,4
"org.jfree.chart.plot.dial.StandardDialScale",874,1.65,"7,832",81
"org.jfree.chart.plot.dial.StandardDialScaleTest",187,1.00,"3,577",6
"org.jfree.chart.renderer.AbstractRenderer","2,816",1.93,"24,278",303
"org.jfree.chart.renderer.AbstractRendererTest",576,1.00,"13,052",14
"org.jfree.chart.renderer.AbstractRendererTest.MyRendererChangeListener",17,1.00,41,2
"org.jfree.chart.renderer.AbstractRendererTest.TestRenderer",6,1.00,33,1
"org.jfree.chart.renderer.AreaRendererEndType",17,n/a,2,0
"org.jfree.chart.renderer.AreaRendererEndTypeTest",27,1.00,106,2
"org.jfree.chart.renderer.DefaultPolarItemRenderer",838,2.34,"8,505",89
"org.jfree.chart.renderer.DefaultPolarItemRendererTest",55,1.00,394,4
"org.jfree.chart.renderer.GrayPaintScale",170,1.70,995,17
"org.jfree.chart.renderer.GrayPaintScaleTest",78,1.00,868,5
"org.jfree.chart.renderer.LookupPaintScale",211,2.55,"2,375",28
"org.jfree.chart.renderer.LookupPaintScale.PaintItem",89,2.20,510,11
"org.jfree.chart.renderer.LookupPaintScaleTest",124,1.00,"2,152",6
"org.jfree.chart.renderer.NotOutlierException",14,1.00,18,1
"org.jfree.chart.renderer.Outlier",150,1.55,938,17
"org.jfree.chart.renderer.OutlierList",118,1.22,499,11
"org.jfree.chart.renderer.OutlierListCollection",122,1.50,489,12
"org.jfree.chart.renderer.OutlierTest",54,1.00,569,4
"org.jfree.chart.renderer.RendererChangeDetector",41,1.00,89,4
"org.jfree.chart.renderer.RendererState",68,1.40,195,7
"org.jfree.chart.renderer.RendererUtils",214,10.67,"2,365",32
"org.jfree.chart.renderer.RendererUtilsTest",412,1.00,"7,093",11
"org.jfree.chart.renderer.WaferMapRenderer",293,3.00,"2,996",45
"org.jfree.chart.renderer.category.AbstractCategoryItemRenderer","1,477",2.76,"16,120",163
"org.jfree.chart.renderer.category.AbstractCategoryItemRendererTest",242,1.00,"3,306",11
"org.jfree.chart.renderer.category.AreaRenderer",244,4.29,"3,392",30
"org.jfree.chart.renderer.category.AreaRendererTest",81,1.00,750,6
"org.jfree.chart.renderer.category.BarRenderer","1,174",2.73,"13,275",134
"org.jfree.chart.renderer.category.BarRendererTest",203,1.00,"3,176",9
"org.jfree.chart.renderer.category.BoxAndWhiskerRenderer",891,3.10,"13,047",93
"org.jfree.chart.renderer.category.BoxAndWhiskerRendererTest",443,1.00,"5,729",22
"org.jfree.chart.renderer.category.CategoryItemRendererState",161,1.45,692,16
"org.jfree.chart.renderer.category.CategoryStepRenderer",250,3.11,"3,021",28
"org.jfree.chart.renderer.category.CategoryStepRenderer.State",20,1.00,41,1
"org.jfree.chart.renderer.category.CategoryStepRendererTest",70,1.00,662,5
"org.jfree.chart.renderer.category.DefaultCategoryItemRenderer",10,n/a,33,0
"org.jfree.chart.renderer.category.DefaultCategoryItemRendererTest",56,1.00,263,5
"org.jfree.chart.renderer.category.GanttRenderer",501,3.44,"6,561",55
"org.jfree.chart.renderer.category.GanttRendererTest",74,1.00,692,5
"org.jfree.chart.renderer.category.GradientBarPainter",296,3.44,"4,338",31
"org.jfree.chart.renderer.category.GradientBarPainterTest",57,1.00,520,4
"org.jfree.chart.renderer.category.GroupedStackedBarRenderer",279,4.57,"3,518",32
"org.jfree.chart.renderer.category.GroupedStackedBarRendererTest",104,1.00,"1,240",6
"org.jfree.chart.renderer.category.IntervalBarRenderer",170,3.80,"1,664",19
"org.jfree.chart.renderer.category.IntervalBarRendererTest",103,1.00,"1,063",7
"org.jfree.chart.renderer.category.LayeredBarRenderer",345,7.00,"4,997",49
"org.jfree.chart.renderer.category.LayeredBarRendererTest",74,1.00,451,6
"org.jfree.chart.renderer.category.LevelRenderer",351,2.69,"3,856",35
"org.jfree.chart.renderer.category.LevelRendererTest",127,1.00,"1,326",8
"org.jfree.chart.renderer.category.LineAndShapeRenderer",732,2.29,"6,655",80
"org.jfree.chart.renderer.category.LineAndShapeRendererTest",203,2.62,"3,064",21
"org.jfree.chart.renderer.category.MinMaxCategoryRenderer",430,1.88,"4,649",47
"org.jfree.chart.renderer.category.MinMaxCategoryRendererTest",89,1.00,791,6
"org.jfree.chart.renderer.category.ScatterRenderer",477,2.21,"4,014",53
"org.jfree.chart.renderer.category.ScatterRendererTest",140,1.71,"1,782",12
"org.jfree.chart.renderer.category.StackedAreaRenderer",386,3.64,"5,601",40
"org.jfree.chart.renderer.category.StackedAreaRendererTest",80,1.00,814,6
"org.jfree.chart.renderer.category.StackedBarRenderer",288,4.11,"3,259",37
"org.jfree.chart.renderer.category.StackedBarRendererTest",81,1.00,841,6
"org.jfree.chart.renderer.category.StandardBarPainter",158,3.50,"1,247",21
"org.jfree.chart.renderer.category.StandardBarPainterTest",46,1.00,175,4
"org.jfree.chart.renderer.category.StatisticalBarRenderer",458,4.50,"5,586",54
"org.jfree.chart.renderer.category.StatisticalBarRendererTest",205,1.00,"2,201",11
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRenderer",370,3.75,"4,413",45
"org.jfree.chart.renderer.category.StatisticalLineAndShapeRendererTest",127,1.00,"1,292",8
"org.jfree.chart.renderer.category.WaterfallBarRenderer",368,2.73,"4,336",41
"org.jfree.chart.renderer.category.WaterfallBarRendererTest",127,1.00,685,6
"org.jfree.chart.renderer.xy.AbstractXYItemRenderer","1,442",2.98,"17,871",158
"org.jfree.chart.renderer.xy.AbstractXYItemRendererTest",116,1.00,"1,128",8
"org.jfree.chart.renderer.xy.CandlestickRenderer",763,2.57,"7,685",77
"org.jfree.chart.renderer.xy.CandlestickRendererTest",148,1.00,"2,046",7
"org.jfree.chart.renderer.xy.ClusteredXYBarRenderer",269,3.75,"3,314",30
"org.jfree.chart.renderer.xy.ClusteredXYBarRendererTest",110,1.00,"1,603",7
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer",235,7.20,"5,342",36
"org.jfree.chart.renderer.xy.CyclicXYItemRenderer.OverwriteDataSet",173,1.21,721,17
"org.jfree.chart.renderer.xy.DefaultXYItemRenderer",10,n/a,24,0
"org.jfree.chart.renderer.xy.DeviationRenderer",267,2.33,"2,814",28
"org.jfree.chart.renderer.xy.DeviationRenderer.State",25,1.00,55,1
"org.jfree.chart.renderer.xy.DeviationRendererTest",60,1.00,362,5
"org.jfree.chart.renderer.xy.GradientXYBarPainter",295,3.44,"4,331",31
"org.jfree.chart.renderer.xy.GradientXYBarPainterTest",58,1.00,520,4
"org.jfree.chart.renderer.xy.HighLowRenderer",393,2.82,"3,768",48
"org.jfree.chart.renderer.xy.HighLowRendererTest",107,1.00,"1,128",6
"org.jfree.chart.renderer.xy.RendererXYPackageUtils",41,1.00,305,2
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer",218,2.62,"2,532",21
"org.jfree.chart.renderer.xy.SamplingXYLineRenderer.State",62,1.00,206,2
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer",457,3.44,"5,257",55
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer.StackedXYAreaRendererState",81,1.00,229,8
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2",442,3.67,"6,439",44
"org.jfree.chart.renderer.xy.StackedXYAreaRenderer2Test",107,1.00,975,7
"org.jfree.chart.renderer.xy.StackedXYAreaRendererTest",148,1.00,"1,711",8
"org.jfree.chart.renderer.xy.StackedXYBarRenderer",334,4.30,"3,446",43
"org.jfree.chart.renderer.xy.StackedXYBarRendererTest",103,1.00,"1,001",7
"org.jfree.chart.renderer.xy.StandardXYBarPainter",158,3.50,"1,241",21
"org.jfree.chart.renderer.xy.StandardXYBarPainterTest",46,1.00,175,4
"org.jfree.chart.renderer.xy.StandardXYItemRenderer",771,2.68,"8,495",91
"org.jfree.chart.renderer.xy.StandardXYItemRenderer.State",58,1.00,143,5
"org.jfree.chart.renderer.xy.StandardXYItemRendererTest",167,1.00,"2,655",7
"org.jfree.chart.renderer.xy.VectorRenderer",265,5.00,"3,838",30
"org.jfree.chart.renderer.xy.VectorRendererTest",61,1.00,376,5
"org.jfree.chart.renderer.xy.WindItemRenderer",105,1.00,"1,538",3
"org.jfree.chart.renderer.xy.WindItemRendererTest",54,1.00,263,5
"org.jfree.chart.renderer.xy.XYAreaRenderer",570,3.09,"7,381",68
"org.jfree.chart.renderer.xy.XYAreaRenderer.XYAreaRendererState",19,1.00,51,1
"org.jfree.chart.renderer.xy.XYAreaRenderer2",325,2.67,"4,103",32
"org.jfree.chart.renderer.xy.XYAreaRenderer2Test",131,1.00,"1,681",7
"org.jfree.chart.renderer.xy.XYAreaRendererTest",165,1.00,"2,466",7
"org.jfree.chart.renderer.xy.XYBarRenderer","1,026",2.84,"11,872",125
"org.jfree.chart.renderer.xy.XYBarRenderer.XYBarRendererState",31,1.00,76,3
"org.jfree.chart.renderer.xy.XYBarRendererTest",261,1.00,"4,732",11
"org.jfree.chart.renderer.xy.XYBlockRenderer",433,2.63,"4,331",50
"org.jfree.chart.renderer.xy.XYBlockRendererTest",136,1.00,"1,382",9
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRenderer",662,2.83,"9,287",65
"org.jfree.chart.renderer.xy.XYBoxAndWhiskerRendererTest",101,1.00,"1,166",6
"org.jfree.chart.renderer.xy.XYBubbleRenderer",258,4.29,"3,256",30
"org.jfree.chart.renderer.xy.XYBubbleRendererTest",101,1.00,"1,469",6
"org.jfree.chart.renderer.xy.XYDifferenceRenderer",995,3.68,"14,337",92
"org.jfree.chart.renderer.xy.XYDifferenceRendererTest",131,1.17,"1,751",7
"org.jfree.chart.renderer.xy.XYDotRenderer",291,2.31,"2,410",30
"org.jfree.chart.renderer.xy.XYDotRendererTest",105,1.00,"1,218",6
"org.jfree.chart.renderer.xy.XYErrorRenderer",367,2.06,"3,498",35
"org.jfree.chart.renderer.xy.XYErrorRendererTest",123,1.00,"1,143",9
"org.jfree.chart.renderer.xy.XYItemRendererState",129,1.00,360,7
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer",948,2.27,"9,040",100
"org.jfree.chart.renderer.xy.XYLineAndShapeRenderer.State",60,1.00,216,4
"org.jfree.chart.renderer.xy.XYLineAndShapeRendererTest",203,1.00,"3,206",9
"org.jfree.chart.renderer.xy.XYShapeRenderer",497,2.08,"3,999",52
"org.jfree.chart.renderer.xy.XYShapeRendererTest",111,1.00,"1,824",5
"org.jfree.chart.renderer.xy.XYSplineRenderer",375,3.54,"5,886",46
"org.jfree.chart.renderer.xy.XYSplineRenderer.FillType",11,n/a,4,0
"org.jfree.chart.renderer.xy.XYSplineRenderer.XYSplineState",20,1.00,55,1
"org.jfree.chart.renderer.xy.XYSplineRendererTest",75,1.00,661,5
"org.jfree.chart.renderer.xy.XYStepAreaRenderer",516,3.10,"5,239",62
"org.jfree.chart.renderer.xy.XYStepAreaRendererTest",110,1.00,"1,258",6
"org.jfree.chart.renderer.xy.XYStepRenderer",256,3.11,"2,674",28
"org.jfree.chart.renderer.xy.XYStepRendererTest",128,1.00,"1,341",7
"org.jfree.chart.renderer.xy.YIntervalRenderer",216,2.25,"1,988",18
"org.jfree.chart.renderer.xy.YIntervalRendererTest",159,1.00,"2,552",6
"org.jfree.chart.resources.JFreeChartResources",22,1.00,68,1
"org.jfree.chart.text.AttributedStringUtils",56,4.50,446,9
"org.jfree.chart.text.G2TextMeasurer",32,1.00,125,2
"org.jfree.chart.text.TextBlock",240,2.00,"2,375",28
"org.jfree.chart.text.TextBlockAnchor",23,n/a,2,0
"org.jfree.chart.text.TextBox",333,1.88,"3,709",47
"org.jfree.chart.text.TextFragment",230,2.07,"1,997",31
"org.jfree.chart.text.TextLine",198,2.08,"1,747",27
"org.jfree.chart.text.TextUtils",690,3.35,"8,344",77
"org.jfree.chart.title.CompositeTitle",167,1.42,973,17
"org.jfree.chart.title.CompositeTitleTest",95,1.00,"1,205",5
"org.jfree.chart.title.DateTitle",95,1.00,324,5
"org.jfree.chart.title.DateTitleTest",63,1.00,564,4
"org.jfree.chart.title.ImageTitle",266,2.45,"2,514",27
"org.jfree.chart.title.ImageTitleTest",83,1.00,26,1
"org.jfree.chart.title.LegendGraphic",617,1.89,"4,880",72
"org.jfree.chart.title.LegendGraphicTest",147,1.00,"2,278",5
"org.jfree.chart.title.LegendItemBlockContainer",142,1.22,498,11
"org.jfree.chart.title.LegendTitle",540,1.85,"5,414",63
"org.jfree.chart.title.LegendTitleTest",88,1.00,"1,202",4
"org.jfree.chart.title.PaintScaleLegend",608,2.41,"7,789",70
"org.jfree.chart.title.PaintScaleLegendTest",107,1.00,"1,361",4
"org.jfree.chart.title.ShortTextTitle",180,3.43,"1,610",24
"org.jfree.chart.title.ShortTextTitleTest",50,1.00,339,4
"org.jfree.chart.title.TextTitle",747,2.83,"8,378",102
"org.jfree.chart.title.TextTitleTest",93,1.00,"1,189",4
"org.jfree.chart.title.Title",341,1.67,"2,186",35
"org.jfree.chart.title.TitleTest",43,1.00,375,2
"org.jfree.chart.ui.Align",83,4.00,"1,347",8
"org.jfree.chart.ui.ApplicationFrame",83,1.12,130,9
"org.jfree.chart.ui.FontChooserPanel",143,2.50,"1,802",15
"org.jfree.chart.ui.FontDisplayField",55,1.25,230,5
"org.jfree.chart.ui.GradientPaintTransformType",13,n/a,2,0
"org.jfree.chart.ui.HorizontalAlignment",12,n/a,2,0
"org.jfree.chart.ui.LCBLayout",202,3.50,"2,955",28
"org.jfree.chart.ui.Layer",9,n/a,2,0
"org.jfree.chart.ui.LengthAdjustmentType",12,n/a,2,0
"org.jfree.chart.ui.NumberCellRenderer",45,2.00,173,4
"org.jfree.chart.ui.PaintSample",64,1.00,425,5
"org.jfree.chart.ui.RectangleAnchor",94,10.00,"1,369",20
"org.jfree.chart.ui.RectangleEdge",82,3.00,425,12
"org.jfree.chart.ui.RectangleInsets",463,2.10,"4,907",61
"org.jfree.chart.ui.Size2D",104,1.44,491,13
"org.jfree.chart.ui.StandardGradientPaintTransformer",123,2.29,"1,005",16
"org.jfree.chart.ui.StrokeChooserPanel",52,1.25,285,5
"org.jfree.chart.ui.StrokeSample",105,1.33,857,8
"org.jfree.chart.ui.TextAnchor",253,2.38,"2,174",31
"org.jfree.chart.ui.UIUtils",138,1.30,"1,226",13
"org.jfree.chart.ui.VerticalAlignment",12,n/a,2,0
"org.jfree.chart.urls.CustomCategoryURLGenerator",138,2.75,958,22
"org.jfree.chart.urls.CustomCategoryURLGeneratorTest",100,1.00,983,5
"org.jfree.chart.urls.CustomPieURLGenerator",154,2.50,"1,010",20
"org.jfree.chart.urls.CustomPieURLGeneratorTest",60,1.00,422,4
"org.jfree.chart.urls.CustomXYURLGenerator",141,2.75,"1,016",22
"org.jfree.chart.urls.CustomXYURLGeneratorTest",100,1.00,983,5
"org.jfree.chart.urls.StandardCategoryURLGenerator",138,2.29,"1,078",16
"org.jfree.chart.urls.StandardCategoryURLGeneratorTest",65,1.00,630,4
"org.jfree.chart.urls.StandardPieURLGenerator",109,2.17,784,13
"org.jfree.chart.urls.StandardPieURLGeneratorTest",70,1.00,761,4
"org.jfree.chart.urls.StandardXYURLGenerator",102,2.20,720,11
"org.jfree.chart.urls.StandardXYURLGeneratorTest",24,1.00,62,2
"org.jfree.chart.urls.StandardXYZURLGenerator",19,1.00,44,1
"org.jfree.chart.urls.TimeSeriesURLGenerator",148,2.12,"1,116",17
"org.jfree.chart.urls.TimeSeriesURLGeneratorTest",75,1.00,793,4
"org.jfree.chart.urls.URLUtilities",43,1.00,164,1
"org.jfree.chart.util.AbstractObjectList",200,2.15,"1,830",28
"org.jfree.chart.util.Args",50,2.00,224,6
"org.jfree.chart.util.ArrayUtils",152,5.17,"1,489",31
"org.jfree.chart.util.AttrStringUtils",256,2.00,"3,127",32
"org.jfree.chart.util.BooleanList",55,1.20,169,6
"org.jfree.chart.util.CloneUtils",90,3.00,548,9
"org.jfree.chart.util.DefaultShadowGenerator",243,2.15,"3,045",28
"org.jfree.chart.util.DirectionalGradientPaintTransformer",90,5.00,931,10
"org.jfree.chart.util.ExportUtils",185,1.33,"1,603",8
"org.jfree.chart.util.HMSNumberFormat",67,1.00,315,4
"org.jfree.chart.util.HMSNumberFormatTest",15,1.00,148,1
"org.jfree.chart.util.HexNumberFormat",99,1.29,515,9
"org.jfree.chart.util.LineUtils",117,7.00,"1,915",14
"org.jfree.chart.util.LineUtilsTest",59,3.00,"1,547",6
"org.jfree.chart.util.LogFormat",193,1.82,"1,168",20
"org.jfree.chart.util.LogFormatTest",62,1.00,677,4
"org.jfree.chart.util.ObjectList",57,1.00,106,5
"org.jfree.chart.util.ObjectUtils",89,2.20,409,11
"org.jfree.chart.util.PaintAlpha",309,3.38,"2,969",27
"org.jfree.chart.util.PaintList",107,2.29,763,16
"org.jfree.chart.util.PaintUtils",134,4.00,"1,722",16
"org.jfree.chart.util.RelativeDateFormat",481,1.64,"3,790",46
"org.jfree.chart.util.RelativeDateFormatTest",148,1.00,"2,024",8
"org.jfree.chart.util.ResourceBundleWrapper",112,1.80,390,9
"org.jfree.chart.util.Rotation",32,1.00,55,2
"org.jfree.chart.util.SerialUtils",527,5.07,"7,016",71
"org.jfree.chart.util.ShapeList",114,2.00,739,16
"org.jfree.chart.util.ShapeUtils",500,2.64,"6,993",58
"org.jfree.chart.util.SortOrder",9,n/a,2,0
"org.jfree.chart.util.StringUtils",52,1.50,254,6
"org.jfree.chart.util.StrokeList",108,1.88,638,15
"org.jfree.chart.util.TableOrder",9,n/a,2,0
"org.jfree.chart.util.UnitType",9,n/a,2,0
"org.jfree.chart.util.XYCoordinateType",19,n/a,2,0
"org.jfree.data.ComparableObjectItem",129,1.75,627,14
"org.jfree.data.ComparableObjectItemTest",80,1.00,639,5
"org.jfree.data.ComparableObjectSeries",370,2.45,"2,923",49
"org.jfree.data.ComparableObjectSeriesTest",116,1.00,"1,725",5
"org.jfree.data.ComparableObjectSeriesTest.MyComparableObjectSeries",29,1.00,106,4
"org.jfree.data.DataUtils",218,3.56,"2,175",32
"org.jfree.data.DataUtilsTest",173,1.00,"3,516",7
"org.jfree.data.DefaultKeyedValue",112,1.88,672,15
"org.jfree.data.DefaultKeyedValueTest",65,1.00,645,4
"org.jfree.data.DefaultKeyedValues",365,1.95,"3,242",43
"org.jfree.data.DefaultKeyedValues2D",470,2.43,"4,095",56
"org.jfree.data.DefaultKeyedValues2DTest",255,1.00,"3,547",14
"org.jfree.data.DefaultKeyedValuesTest",387,1.00,"6,078",18
"org.jfree.data.DomainOrder",11,n/a,2,0
"org.jfree.data.DomainOrderTest",44,1.00,319,3
"org.jfree.data.KeyToGroupMap",242,2.75,"2,016",33
"org.jfree.data.KeyToGroupMapTest",171,1.00,"1,995",8
"org.jfree.data.KeyedObject",88,1.83,412,11
"org.jfree.data.KeyedObjectTest",65,1.00,596,4
"org.jfree.data.KeyedObjects",281,2.31,"2,073",37
"org.jfree.data.KeyedObjects2D",426,2.55,"4,021",56
"org.jfree.data.KeyedObjects2DTest",307,1.00,"3,518",11
"org.jfree.data.KeyedObjectsTest",269,1.00,"3,179",10
"org.jfree.data.KeyedValueComparator",113,4.50,888,18
"org.jfree.data.KeyedValueComparatorType",10,n/a,2,0
"org.jfree.data.KeyedValues2DItemKey",102,1.62,840,13
"org.jfree.data.KeyedValuesItemKey",56,1.60,353,8
"org.jfree.data.Range",383,2.17,"3,307",50
"org.jfree.data.RangeTest",257,1.00,"4,466",13
"org.jfree.data.RangeType",12,n/a,2,0
"org.jfree.data.RangeTypeTest",44,1.00,319,3
"org.jfree.data.UnknownKeyException",13,1.00,18,1
"org.jfree.data.category.CategoryToPieDataset",258,3.25,"2,061",39
"org.jfree.data.category.CategoryToPieDatasetTest",152,1.00,"1,333",6
"org.jfree.data.category.DefaultCategoryDataset",359,1.40,"1,839",35
"org.jfree.data.category.DefaultCategoryDatasetTest",293,1.00,"3,542",14
"org.jfree.data.category.DefaultIntervalCategoryDataset",692,2.56,"5,718",82
"org.jfree.data.category.DefaultIntervalCategoryDatasetTest",388,1.00,"5,610",20
"org.jfree.data.category.SlidingCategoryDataset",291,1.74,"1,943",33
"org.jfree.data.category.SlidingCategoryDatasetTest",196,1.00,"2,863",9
"org.jfree.data.function.LineFunction2D",83,1.50,388,9
"org.jfree.data.function.LineFunction2DTest",47,1.00,320,4
"org.jfree.data.function.NormalDistributionFunction2D",91,1.67,627,10
"org.jfree.data.function.NormalDistributionFunction2DTest",54,1.00,320,4
"org.jfree.data.function.PolynomialFunction2D",77,1.33,382,8
"org.jfree.data.function.PolynomialFunction2DTest",83,1.00,660,6
"org.jfree.data.function.PowerFunction2D",83,1.50,388,9
"org.jfree.data.function.PowerFunction2DTest",47,1.00,343,4
"org.jfree.data.gantt.SlidingGanttCategoryDataset",571,1.85,"4,483",61
"org.jfree.data.gantt.SlidingGanttCategoryDatasetTest",120,1.50,"1,846",6
"org.jfree.data.gantt.Task",177,1.40,905,21
"org.jfree.data.gantt.TaskSeries",135,1.60,713,16
"org.jfree.data.gantt.TaskSeriesCollection",592,1.76,"4,295",65
"org.jfree.data.gantt.TaskSeriesCollectionTest",532,1.00,"11,829",27
"org.jfree.data.gantt.TaskSeriesTest",67,1.00,"1,045",4
"org.jfree.data.gantt.TaskTest",68,1.00,"1,041",4
"org.jfree.data.gantt.XYTaskDataset",390,1.40,"2,319",42
"org.jfree.data.gantt.XYTaskDatasetTest",80,1.00,"1,259",3
"org.jfree.data.general.AbstractDataset",210,1.29,820,18
"org.jfree.data.general.AbstractSeriesDataset",62,1.67,220,5
"org.jfree.data.general.DatasetChangeEvent",33,1.00,51,2
"org.jfree.data.general.DatasetGroup",66,1.60,287,8
"org.jfree.data.general.DatasetGroupTest",14,1.00,30,1
"org.jfree.data.general.DatasetUtils","2,081",5.41,"28,697",314
"org.jfree.data.general.DatasetUtilsTest","1,248",1.00,"26,539",64
"org.jfree.data.general.DefaultHeatMapDataset",264,2.13,"1,936",32
"org.jfree.data.general.DefaultHeatMapDatasetTest",128,1.00,"2,583",5
"org.jfree.data.general.DefaultKeyedValueDataset",136,2.00,828,20
"org.jfree.data.general.DefaultKeyedValueDatasetTest",60,1.00,521,4
"org.jfree.data.general.DefaultKeyedValues2DDataset",10,n/a,28,0
"org.jfree.data.general.DefaultKeyedValues2DDatasetTest",34,1.00,350,2
"org.jfree.data.general.DefaultKeyedValuesDataset",10,n/a,28,0
"org.jfree.data.general.DefaultKeyedValuesDatasetTest",32,1.00,306,2
"org.jfree.data.general.DefaultPieDataset",279,1.58,"1,510",30
"org.jfree.data.general.DefaultPieDatasetTest",106,1.00,"1,076",6
"org.jfree.data.general.DefaultValueDataset",81,1.43,359,10
"org.jfree.data.general.HeatMapUtils",75,2.33,651,7
"org.jfree.data.general.IntervalDataItem",23,1.00,83,4
"org.jfree.data.general.Series",321,1.41,"1,843",31
"org.jfree.data.general.SeriesChangeEvent",15,1.00,46,1
"org.jfree.data.general.SeriesException",15,1.00,51,1
"org.jfree.data.general.TestIntervalCategoryDataset",390,1.54,"2,337",43
"org.jfree.data.general.WaferMapDataset",234,1.53,"1,461",29
"org.jfree.data.io.CSV",140,2.67,"1,230",16
"org.jfree.data.jdbc.JDBCCategoryDataset",220,3.00,"1,484",21
"org.jfree.data.jdbc.JDBCPieDataset",159,2.33,"1,020",14
"org.jfree.data.jdbc.JDBCXYDataset",424,2.61,"3,494",47
"org.jfree.data.json.JSONUtils",142,3.50,"1,143",14
"org.jfree.data.json.impl.JSONArray",116,2.60,635,13
"org.jfree.data.json.impl.JSONObject",147,2.00,927,14
"org.jfree.data.json.impl.JSONValue",287,10.00,"2,063",40
"org.jfree.data.resources.DataPackageResources",20,1.00,46,1
"org.jfree.data.resources.DataPackageResources_de",19,1.00,46,1
"org.jfree.data.resources.DataPackageResources_es",19,1.00,46,1
"org.jfree.data.resources.DataPackageResources_fr",19,1.00,46,1
"org.jfree.data.resources.DataPackageResources_pl",19,1.00,46,1
"org.jfree.data.resources.DataPackageResources_ru",19,1.00,46,1
"org.jfree.data.statistics.BoxAndWhiskerCalculator",164,4.75,"1,771",19
"org.jfree.data.statistics.BoxAndWhiskerCalculatorTest",106,1.00,"1,254",4
"org.jfree.data.statistics.BoxAndWhiskerItem",217,1.92,"1,364",25
"org.jfree.data.statistics.BoxAndWhiskerItemTest",33,1.00,304,2
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDataset",818,1.84,"5,626",81
"org.jfree.data.statistics.DefaultBoxAndWhiskerCategoryDatasetTest",212,1.00,"4,071",9
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDataset",469,1.78,"2,713",48
"org.jfree.data.statistics.DefaultBoxAndWhiskerXYDatasetTest",114,1.00,"2,182",6
"org.jfree.data.statistics.DefaultMultiValueCategoryDataset",332,2.16,"2,640",41
"org.jfree.data.statistics.DefaultMultiValueCategoryDatasetTest",175,1.00,"1,839",8
"org.jfree.data.statistics.DefaultStatisticalCategoryDataset",609,2.21,"5,448",64
"org.jfree.data.statistics.DefaultStatisticalCategoryDatasetTest",198,1.00,"3,211",11
"org.jfree.data.statistics.HistogramBin",101,1.50,586,12
"org.jfree.data.statistics.HistogramBinTest",40,1.00,246,3
"org.jfree.data.statistics.HistogramDataset",409,2.00,"3,323",42
"org.jfree.data.statistics.HistogramDatasetTest",179,1.00,"3,704",11
"org.jfree.data.statistics.HistogramType",11,n/a,2,0
"org.jfree.data.statistics.MeanAndStandardDeviation",119,1.75,562,14
"org.jfree.data.statistics.MeanAndStandardDeviationTest",41,1.00,272,3
"org.jfree.data.statistics.Regression",292,6.00,"5,549",36
"org.jfree.data.statistics.RegressionTest",172,1.40,"2,550",14
"org.jfree.data.statistics.SimpleHistogramBin",205,2.91,"1,535",32
"org.jfree.data.statistics.SimpleHistogramBinTest",103,1.00,"1,516",5
"org.jfree.data.statistics.SimpleHistogramDataset",400,1.52,"2,343",41
"org.jfree.data.statistics.SimpleHistogramDatasetTest",69,1.00,702,5
"org.jfree.data.statistics.Statistics",381,3.54,"4,719",46
"org.jfree.data.statistics.StatisticsTest",375,1.00,"6,402",12
"org.jfree.data.time.DateRange",107,1.00,465,9
"org.jfree.data.time.DateRangeTest",54,1.00,517,4
"org.jfree.data.time.Day",359,1.32,"2,280",29
"org.jfree.data.time.DayTest",304,1.05,"3,293",23
"org.jfree.data.time.DynamicTimeSeriesCollection",772,2.14,"7,310",90
"org.jfree.data.time.DynamicTimeSeriesCollection.ValueSequence",43,1.25,184,5
"org.jfree.data.time.FixedMillisecond",221,1.41,900,24
"org.jfree.data.time.FixedMillisecondTest",45,1.00,227,4
"org.jfree.data.time.Hour",372,1.57,"2,912",36
"org.jfree.data.time.HourTest",292,1.00,"3,342",22
"org.jfree.data.time.Millisecond",333,1.94,"2,920",35
"org.jfree.data.time.MillisecondTest",273,1.00,"3,828",18
"org.jfree.data.time.Minute",375,1.67,"3,249",35
"org.jfree.data.time.MinuteTest",263,1.00,"3,317",18
"org.jfree.data.time.Month",429,2.00,"3,403",46
"org.jfree.data.time.MonthTest",326,1.00,"3,422",23
"org.jfree.data.time.MovingAverage",252,5.33,"2,798",32
"org.jfree.data.time.MovingAverageTest",50,1.00,878,2
"org.jfree.data.time.Quarter",369,1.62,"3,092",34
"org.jfree.data.time.QuarterTest",349,1.00,"3,485",24
"org.jfree.data.time.RegularTimePeriod",225,2.25,939,18
"org.jfree.data.time.Second",355,1.95,"3,509",37
"org.jfree.data.time.SecondTest",250,1.00,"3,339",17
"org.jfree.data.time.SimpleTimePeriod",163,2.22,"1,104",20
"org.jfree.data.time.SimpleTimePeriodTest",116,1.00,"1,528",7
"org.jfree.data.time.TimePeriodAnchor",12,n/a,2,0
"org.jfree.data.time.TimePeriodAnchorTest",23,1.00,89,2
"org.jfree.data.time.TimePeriodFormatException",14,1.00,18,1
"org.jfree.data.time.TimePeriodValue",130,1.89,784,17
"org.jfree.data.time.TimePeriodValueTest",32,1.00,179,3
"org.jfree.data.time.TimePeriodValues",463,1.96,"4,422",53
"org.jfree.data.time.TimePeriodValuesCollection",360,1.82,"2,935",40
"org.jfree.data.time.TimePeriodValuesCollectionTest",137,1.00,"1,842",6
"org.jfree.data.time.TimePeriodValuesTest",242,1.00,"4,704",13
"org.jfree.data.time.TimePeriodValuesTest.MySeriesChangeListener",35,1.00,69,4
"org.jfree.data.time.TimeSeries","1,192",2.52,"11,853",146
"org.jfree.data.time.TimeSeriesCollection",632,1.89,"5,267",72
"org.jfree.data.time.TimeSeriesCollectionTest",353,1.00,"6,991",13
"org.jfree.data.time.TimeSeriesDataItem",163,1.78,757,16
"org.jfree.data.time.TimeSeriesDataItemTest",43,1.00,271,3
"org.jfree.data.time.TimeSeriesTableModel",201,2.36,"1,117",26
"org.jfree.data.time.TimeSeriesTest","1,014",1.00,"22,118",46
"org.jfree.data.time.TimeTableXYDataset",500,1.53,"2,968",49
"org.jfree.data.time.TimeTableXYDatasetTest",103,1.00,"1,429",6
"org.jfree.data.time.Week",505,2.08,"4,564",50
"org.jfree.data.time.WeekTest",414,1.00,"4,815",24
"org.jfree.data.time.Year",303,1.39,"1,636",25
"org.jfree.data.time.YearTest",311,1.00,"2,927",22
"org.jfree.data.time.ohlc.OHLC",106,1.86,620,13
"org.jfree.data.time.ohlc.OHLCItem",93,1.57,352,11
"org.jfree.data.time.ohlc.OHLCItemTest",85,1.00,"1,402",5
"org.jfree.data.time.ohlc.OHLCSeries",87,1.33,417,8
"org.jfree.data.time.ohlc.OHLCSeriesCollection",406,1.43,"2,467",40
"org.jfree.data.time.ohlc.OHLCSeriesCollectionTest",172,1.00,"2,004",9
"org.jfree.data.time.ohlc.OHLCSeriesTest",182,1.00,"2,974",12
"org.jfree.data.time.ohlc.OHLCTest",59,1.00,668,4
"org.jfree.data.xml.CategoryDatasetHandler",80,1.80,406,9
"org.jfree.data.xml.CategorySeriesHandler",91,1.80,549,9
"org.jfree.data.xml.DatasetReader",120,1.17,563,7
"org.jfree.data.xml.ItemHandler",108,1.57,543,11
"org.jfree.data.xml.KeyHandler",98,1.50,488,9
"org.jfree.data.xml.PieDatasetHandler",76,1.80,363,9
"org.jfree.data.xml.RootHandler",71,1.67,317,10
"org.jfree.data.xml.ValueHandler",103,1.67,530,10
"org.jfree.data.xy.AbstractIntervalXYDataset",79,2.00,343,8
"org.jfree.data.xy.AbstractXYDataset",50,1.67,193,5
"org.jfree.data.xy.AbstractXYZDataset",24,2.00,95,2
"org.jfree.data.xy.CategoryTableXYDataset",341,1.22,"1,641",33
"org.jfree.data.xy.CategoryTableXYDatasetTest",122,1.00,"2,099",6
"org.jfree.data.xy.DefaultHighLowDataset",358,1.79,"2,147",34
"org.jfree.data.xy.DefaultHighLowDatasetTest",120,1.00,"2,345",4
"org.jfree.data.xy.DefaultIntervalXYDataset",491,1.90,"4,054",38
"org.jfree.data.xy.DefaultIntervalXYDatasetTest",280,1.00,"4,778",17
"org.jfree.data.xy.DefaultOHLCDataset",281,1.45,"1,464",29
"org.jfree.data.xy.DefaultOHLCDatasetTest",92,1.00,"1,299",6
"org.jfree.data.xy.DefaultTableXYDataset",538,1.97,"4,776",71
"org.jfree.data.xy.DefaultTableXYDatasetTest",131,1.00,"2,035",6
"org.jfree.data.xy.DefaultWindDataset",251,2.00,"1,705",26
"org.jfree.data.xy.DefaultWindDatasetTest",125,1.00,"1,251",8
"org.jfree.data.xy.DefaultXYDataset",315,2.00,"2,432",30
"org.jfree.data.xy.DefaultXYDatasetTest",154,1.00,"2,024",8
"org.jfree.data.xy.DefaultXYZDataset",368,1.94,"2,902",33
"org.jfree.data.xy.DefaultXYZDatasetTest",160,1.00,"2,343",8
"org.jfree.data.xy.IntervalXYDelegate",392,1.82,"2,712",40
"org.jfree.data.xy.IntervalXYDelegateTest",63,1.00,634,3
"org.jfree.data.xy.MatrixSeries",161,1.82,"1,111",20
"org.jfree.data.xy.MatrixSeriesCollection",237,1.56,"1,483",25
"org.jfree.data.xy.MatrixSeriesCollectionTest",63,1.00,603,4
"org.jfree.data.xy.MatrixSeriesTest",104,1.00,"1,735",6
"org.jfree.data.xy.NormalizedMatrixSeries",95,1.00,439,6
"org.jfree.data.xy.OHLCDataItem",143,1.89,835,17
"org.jfree.data.xy.OHLCDataItemTest",37,1.00,233,3
"org.jfree.data.xy.TableXYDatasetTest",193,1.00,"2,184",13
"org.jfree.data.xy.Vector",91,1.57,614,11
"org.jfree.data.xy.VectorDataItem",73,1.33,264,8
"org.jfree.data.xy.VectorDataItemTest",64,1.00,791,4
"org.jfree.data.xy.VectorSeries",124,1.00,442,10
"org.jfree.data.xy.VectorSeriesCollection",259,1.28,"1,396",23
"org.jfree.data.xy.VectorSeriesCollectionTest",85,1.00,911,5
"org.jfree.data.xy.VectorSeriesTest",198,1.00,"3,483",12
"org.jfree.data.xy.VectorTest",53,1.00,390,4
"org.jfree.data.xy.WindDataItem",100,2.33,549,14
"org.jfree.data.xy.XIntervalDataItem",68,1.60,262,8
"org.jfree.data.xy.XIntervalDataItemTest",67,1.00,871,4
"org.jfree.data.xy.XIntervalSeries",116,1.00,370,9
"org.jfree.data.xy.XIntervalSeriesCollection",291,1.30,"1,630",26
"org.jfree.data.xy.XIntervalSeriesCollectionTest",112,1.00,955,6
"org.jfree.data.xy.XIntervalSeriesTest",220,1.00,"3,865",14
"org.jfree.data.xy.XYBarDataset",319,1.32,"1,609",29
"org.jfree.data.xy.XYBarDatasetTest",75,1.00,"1,008",4
"org.jfree.data.xy.XYCoordinate",120,2.12,891,17
"org.jfree.data.xy.XYCoordinateTest",53,1.00,390,4
"org.jfree.data.xy.XYDataItem",201,1.69,"1,101",22
"org.jfree.data.xy.XYDataItemTest",39,1.00,276,3
"org.jfree.data.xy.XYDatasetTableModel",193,1.70,666,17
"org.jfree.data.xy.XYInterval",108,2.00,580,14
"org.jfree.data.xy.XYIntervalDataItem",99,1.71,418,12
"org.jfree.data.xy.XYIntervalDataItemTest",85,1.00,"1,360",4
"org.jfree.data.xy.XYIntervalSeries",149,1.00,485,11
"org.jfree.data.xy.XYIntervalSeriesCollection",316,1.32,"1,795",29
"org.jfree.data.xy.XYIntervalSeriesCollectionTest",118,1.00,"1,128",6
"org.jfree.data.xy.XYIntervalSeriesTest",212,1.00,"4,344",13
"org.jfree.data.xy.XYIntervalTest",51,1.00,682,3
"org.jfree.data.xy.XYItemKey",99,1.62,851,13
"org.jfree.data.xy.XYSeries",841,2.22,"7,334",100
"org.jfree.data.xy.XYSeriesCollection",630,2.16,"5,298",80
"org.jfree.data.xy.XYSeriesCollectionTest",406,1.00,"6,206",18
"org.jfree.data.xy.XYSeriesTest",658,1.00,"13,499",37
"org.jfree.data.xy.YInterval",77,2.00,366,10
"org.jfree.data.xy.YIntervalDataItem",68,1.60,262,8
"org.jfree.data.xy.YIntervalDataItemTest",68,1.00,885,4
"org.jfree.data.xy.YIntervalSeries",118,1.00,370,9
"org.jfree.data.xy.YIntervalSeriesCollection",287,1.30,"1,553",26
"org.jfree.data.xy.YIntervalSeriesCollectionTest",112,1.00,955,6
"org.jfree.data.xy.YIntervalSeriesTest",198,1.00,"3,481",12
"org.jfree.data.xy.YIntervalTest",43,1.00,371,3
"org.jfree.data.xy.YWithXInterval",81,2.00,366,10
"org.jfree.data.xy.YWithXIntervalTest",43,1.00,371,3

Interface,LOC
"org.jfree.chart.ChartMouseListener",21
"org.jfree.chart.ChartTheme",17
"org.jfree.chart.LegendItemSource",13
"org.jfree.chart.annotations.Annotation",21
"org.jfree.chart.annotations.CategoryAnnotation",19
"org.jfree.chart.annotations.XYAnnotation",23
"org.jfree.chart.annotations.XYAnnotationBoundsInfo",29
"org.jfree.chart.axis.TickUnitSource",34
"org.jfree.chart.axis.Timeline",90
"org.jfree.chart.block.Arrangement",33
"org.jfree.chart.block.Block",62
"org.jfree.chart.block.BlockFrame",22
"org.jfree.chart.block.EntityBlockParams",14
"org.jfree.chart.block.EntityBlockResult",12
"org.jfree.chart.date.MonthConstants",26
"org.jfree.chart.editor.ChartEditor",14
"org.jfree.chart.editor.ChartEditorFactory",13
"org.jfree.chart.encoders.ImageEncoder",51
"org.jfree.chart.encoders.ImageFormat",11
"org.jfree.chart.entity.EntityCollection",57
"org.jfree.chart.event.AnnotationChangeListener",16
"org.jfree.chart.event.AxisChangeListener",18
"org.jfree.chart.event.ChartChangeListener",16
"org.jfree.chart.event.ChartProgressListener",12
"org.jfree.chart.event.MarkerChangeListener",16
"org.jfree.chart.event.OverlayChangeListener",13
"org.jfree.chart.event.PlotChangeListener",13
"org.jfree.chart.event.RendererChangeListener",13
"org.jfree.chart.event.TitleChangeListener",13
"org.jfree.chart.imagemap.ToolTipTagFragmentGenerator",21
"org.jfree.chart.imagemap.URLTagFragmentGenerator",18
"org.jfree.chart.labels.CategoryItemLabelGenerator",40
"org.jfree.chart.labels.CategorySeriesLabelGenerator",19
"org.jfree.chart.labels.CategoryToolTipGenerator",24
"org.jfree.chart.labels.CrosshairLabelGenerator",15
"org.jfree.chart.labels.PieSectionLabelGenerator",44
"org.jfree.chart.labels.PieToolTipGenerator",17
"org.jfree.chart.labels.XYItemLabelGenerator",17
"org.jfree.chart.labels.XYSeriesLabelGenerator",20
"org.jfree.chart.labels.XYToolTipGenerator",16
"org.jfree.chart.labels.XYZToolTipGenerator",16
"org.jfree.chart.panel.Overlay",43
"org.jfree.chart.plot.DrawingSupplier",51
"org.jfree.chart.plot.Pannable",44
"org.jfree.chart.plot.ValueAxisPlot",14
"org.jfree.chart.plot.Zoomable",118
"org.jfree.chart.plot.dial.DialFrame",22
"org.jfree.chart.plot.dial.DialLayer",64
"org.jfree.chart.plot.dial.DialLayerChangeListener",16
"org.jfree.chart.plot.dial.DialScale",29
"org.jfree.chart.renderer.PaintScale",37
"org.jfree.chart.renderer.PolarItemRenderer",148
"org.jfree.chart.renderer.category.BarPainter",43
"org.jfree.chart.renderer.category.CategoryItemRenderer","1,154"
"org.jfree.chart.renderer.xy.XYBarPainter",43
"org.jfree.chart.renderer.xy.XYItemRenderer","1,103"
"org.jfree.chart.text.TextMeasurer",16
"org.jfree.chart.ui.Drawable",13
"org.jfree.chart.ui.GradientPaintTransformer",17
"org.jfree.chart.urls.CategoryURLGenerator",20
"org.jfree.chart.urls.PieURLGenerator",27
"org.jfree.chart.urls.XYURLGenerator",20
"org.jfree.chart.urls.XYZURLGenerator",19
"org.jfree.chart.util.PublicCloneable",17
"org.jfree.chart.util.ShadowGenerator",31
"org.jfree.data.DomainInfo",38
"org.jfree.data.ItemKey",13
"org.jfree.data.KeyedValue",14
"org.jfree.data.KeyedValues",52
"org.jfree.data.KeyedValues2D",65
"org.jfree.data.RangeInfo",34
"org.jfree.data.Value",11
"org.jfree.data.Values",23
"org.jfree.data.Values2D",29
"org.jfree.data.category.CategoryDataset",10
"org.jfree.data.category.CategoryRangeInfo",20
"org.jfree.data.category.IntervalCategoryDataset",50
"org.jfree.data.function.Function2D",13
"org.jfree.data.gantt.GanttCategoryDataset",125
"org.jfree.data.general.Dataset",37
"org.jfree.data.general.DatasetChangeListener",12
"org.jfree.data.general.HeatMapDataset",101
"org.jfree.data.general.KeyedValueDataset",6
"org.jfree.data.general.KeyedValues2DDataset",7
"org.jfree.data.general.KeyedValuesDataset",6
"org.jfree.data.general.PieDataset",8
"org.jfree.data.general.SeriesChangeListener",11
"org.jfree.data.general.SeriesDataset",35
"org.jfree.data.general.ValueDataset",6
"org.jfree.data.json.impl.JSONAware",18
"org.jfree.data.json.impl.JSONStreamAware",21
"org.jfree.data.statistics.BoxAndWhiskerCategoryDataset",170
"org.jfree.data.statistics.BoxAndWhiskerXYDataset",110
"org.jfree.data.statistics.MultiValueCategoryDataset",27
"org.jfree.data.statistics.StatisticalCategoryDataset",42
"org.jfree.data.time.TimePeriod",20
"org.jfree.data.xml.DatasetTags",17
"org.jfree.data.xy.IntervalXYDataset",101
"org.jfree.data.xy.IntervalXYZDataset",60
"org.jfree.data.xy.OHLCDataset",101
"org.jfree.data.xy.TableXYDataset",15
"org.jfree.data.xy.VectorXYDataset",39
"org.jfree.data.xy.WindDataset",31
"org.jfree.data.xy.XYDataset",70
"org.jfree.data.xy.XYDomainInfo",20
"org.jfree.data.xy.XYRangeInfo",21
"org.jfree.data.xy.XYZDataset",24
"org.jfree.data.xy.XisSymbolic",30
"org.jfree.data.xy.YisSymbolic",30

Package,LOC,v(G)avg,v(G)tot
"org.jfree.chart","17,174",1.96,"1,293"
"org.jfree.chart.annotations","7,801",1.69,501
"org.jfree.chart.axis","23,910",2.29,"1,992"
"org.jfree.chart.block","7,049",2.04,509
"org.jfree.chart.date","1,300",2.34,124
"org.jfree.chart.editor","3,482",2.09,209
"org.jfree.chart.encoders",764,1.15,31
"org.jfree.chart.entity","3,318",1.54,215
"org.jfree.chart.event","1,325",1.00,29
"org.jfree.chart.imagemap",986,1.77,39
"org.jfree.chart.labels","8,233",1.60,474
"org.jfree.chart.needle","2,436",1.81,165
"org.jfree.chart.panel",851,3.61,101
"org.jfree.chart.plot","40,963",2.23,"3,719"
"org.jfree.chart.plot.dial","7,523",1.47,510
"org.jfree.chart.renderer","7,925",1.99,641
"org.jfree.chart.renderer.category","16,972",2.68,"1,388"
"org.jfree.chart.renderer.xy","23,902",2.55,"1,943"
"org.jfree.chart.resources",65,1.00,1
"org.jfree.chart.text","2,149",2.54,239
"org.jfree.chart.title","5,679",2.02,474
"org.jfree.chart.ui","3,050",2.35,277
"org.jfree.chart.urls","2,577",1.98,158
"org.jfree.chart.util","6,219",2.77,626
"org.jfree.data","7,862",2.07,613
"org.jfree.data.category","3,272",2.04,280
"org.jfree.data.function",985,1.31,55
"org.jfree.data.gantt","3,401",1.56,261
"org.jfree.data.general","7,940",2.28,674
"org.jfree.data.io",192,2.67,16
"org.jfree.data.jdbc","1,037",3.00,93
"org.jfree.data.json",197,4.00,16
"org.jfree.data.json.impl",724,4.75,76
"org.jfree.data.resources",375,1.00,6
"org.jfree.data.statistics","8,264",2.06,658
"org.jfree.data.time","16,658",1.72,"1,364"
"org.jfree.data.time.ohlc","1,582",1.36,106
"org.jfree.data.xml","1,173",1.78,82
"org.jfree.data.xy","18,199",1.56,"1,269"

Module,LOC,v(G)avg,v(G)tot
"jfreechart","270,436",2.06,"21,227"

FileType,LOC
"HTML",342
"Java","265,764"
"JavaScript",244
"Properties","1,480"
"Text","2,390"
"XML",216

Project,LOC,v(G)avg,v(G)tot
"project","270,436",2.06,"21,227"

